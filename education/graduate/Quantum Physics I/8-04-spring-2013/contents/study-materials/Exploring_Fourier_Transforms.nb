(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    391099,       7703]
NotebookOptionsPosition[    384975,       7505]
NotebookOutlinePosition[    385331,       7521]
CellTagsIndexPosition[    385288,       7518]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Fourier Series and Transforms -- an Introduction", "Section",
 CellChangeTimes->{{3.470988455361394*^9, 3.4709884804957523`*^9}, {
  3.475694727084856*^9, 3.475694733597921*^9}}],

Cell["\<\
In math, you're used to the notion that any periodic function can be \
represented as an infinite series of sines and cosines, with each sine and \
cosine having a different frequency.  This is, of course the idea behind \
Fourier series.\
\>", "Text",
 CellChangeTimes->{{3.4709884844636993`*^9, 3.4709885019763823`*^9}, {
  3.470988638629982*^9, 3.470988675915255*^9}, {3.470988719414218*^9, 
  3.47098873089217*^9}}],

Cell["\<\
Let's start with an example to refresh your memory.  Consider a sawtooth \
wave.  Below we've plotted one with a period of 2 \[Pi].\
\>", "Text",
 CellChangeTimes->{{3.470988677997643*^9, 3.470988741844884*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Wave", "[", 
   RowBox[{"x_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"SawtoothWave", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
    RowBox[{"x", "/", "L"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.470970069897743*^9, 3.470970084109778*^9}, {
  3.4709704735482492`*^9, 3.470970483123205*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Wave", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"2", "\[Pi]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "x", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4709662323487597`*^9, 3.470966235759676*^9}, {
  3.470966514565219*^9, 3.470966612684968*^9}, {3.4709679066794147`*^9, 
  3.470967908867285*^9}, {3.470970492286928*^9, 3.4709705039274673`*^9}, {
  3.471040101115596*^9, 3.471040115163053*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAfedN8v//I8CgEcJ8x2/Hv+Z7FvXb
/CPAANJdwcwvx79OEN/3t/kjwECS+QXS78a/IDlw/W/zI8AAEzGP3G/Gv8KK
kgjg5iPAQBSgofFvxb8ILtcewM0jwOAWfsYbcMO/lHRgS4CbI8CAOHQg4OC+
v6sBc6QANyPAgJvIjmLErb8FZUcyGV0iwOD02ccEzLM/E9jFbKKRIcCgCt5i
8RbKP1LDmmMpyiDA2BBw4Ej71D977z1skOMfwJi3uCZPl90/uHeaaq9PHsDs
KlW0H9DiP06SVSD+mRzArMfx4LIq5z9Hnb1OSOwawBymUmXycOs/8I3c/ATm
GsCEe1s35YDrP5p++6rB3xrA7FBkCdiQ6z/sXzkHO9MawMD7da29sOs/kiK1
vy26GsBkUZn1iPDrP96nrDATiBrAqPzfhR9w7D92spsS3iMawDRTbaZMb+0/
IKO6wJodGsCcKHZ4P3/tP8mT2W5XFxrACP5+SjKP7T8cdRfL0AoawNiokO4X
r+0/wjeTg8PxGcB8/rM24+7tPw69ivSovxnAwKn6xnlu7j+4ramiZbkZwCh/
A5lsfu4/YZ7IUCKzGcCUVAxrX47uP7R/Bq2bphnAZP8dD0Wu7j9aQoJljo0Z
wAhVQVcQ7u4/psd51nNbGcBMAIjnpm3vP5kydkOpVBnA7GS/JfJ+7z+MnXKw
3k0ZwIzJ9mM9kO8/cnNriklAGcDIkmXg07LvP2XeZ/d+ORnAaPecHh/E7z9Y
SWRktDIZwAhc1Fxq1e8/SrRg0ekrGcCowAubtebvP8preCqDKBnAIBLls17v
7z9HJEDn
      "]], LineBox[CompressedData["
1:eJwBIQTe+yFib1JlAgAAAEEAAAACAAAAZu4PfnMbGcAiEuWzXu/vvyL1VRiK
FxnAeBFOqmjl778VYFKFvxAZwNqsFmwd1O+/CMtO8vQJGcA6SN8t0sLvv/s1
S18qAxnAnOOn74ax77/uoEfMX/wYwPx+cLE7oO+/1HZApsruGMC+tQE1pX3v
v8fhPBMA6BjAIFHK9lls77+6TDmANeEYwIDskrgOW++/oCIyWqDTGMBCIyQ8
eDjvv2vOIw52uBjAxJBGQ0vz7r8CJgd2IYIYwMpri1HxaO6/9ZAD41Z7GMAs
B1QTplfuv+j7/0+MdBjAjKIc1VpG7r/O0fgp92YYwE7ZrVjEI+6/mX3q3cxL
GMDQRtBfl97tvzDVzUV4FRjA1iEVbj1U7b9ehJQVz6gXwOLXnoqJP+y/zj/2
B3iiF8BUIXB4ZC/svz/7V/ognBfAxmpBZj8f7L8gchvfco8XwKr940H1/uu/
4l+iqBZ2F8ByIyn5YL7rv2Y7sDteQxfAAG+zZzg9679u8sth7d0WwBwGyETn
Ouq/fmADrgsTFsBYNPH+RDbovwAtH79DhRTAGE9/G1RB5L/ai5mHq9USwGw4
01iQ7N+/HApoqfRCEcA02/5+junXv2s1KgXbHA/AcMXFG610zr9jN96ow8ML
wFCb+bQXz7q/Kng6/26kCMCAyPDwSvuTP6HdU8R5QQXAUDZIxcq+wz/ngRU8
RxgCwEAh4hEA7NE/upUoRehW/b+YwmfY0KTaPzDp2fQvnfa/rPM6J32a4T9E
utsJ/Vbwv8qBFuAGmeU/cKmv+BET47+I3ZWkq+3pPzAOboNC4OK/5iyfC9j9
6T/xciwOc63iv0R8qHIEDuo/cjypI9RH4r/+GrtAXS7qP3XPok6WfOG/dljg
3A5v6j/z6itJNczfv2bTKhVy8Oo/BoP4oEZy2b9Eyb+FOPPrP4dMdbanDNm/
ohjJ7GQD7D8IFvLLCKfYvwBo0lORE+w/Cqnr9srb17+8BuUh6jPsPw/P3kxP
Rda/NEQKvpt07D8YG8X4VxjTvyK/VPb+9ew/VmYjodJ8yb8CtelmxfjtP4px
c4iStci/ZhVSf6AI7j+9fMNvUu7Hv8p1upd7GO4/JJNjPtJfxr+UNovIMTju
P/K/o9vRQsO/JrgsKp537j8eM0gsohG6v0y7b+129u4/hUno+iGDuL+yG9gF
UgbvP+xfiMmh9La/FnxAHi0W7z+6jMhmodezv+A8EU/jNe8/rcyRQkE7q79y
vrKwT3XvP3v50d9AHqi/1h4bySqF7z9JJhJ9QAGlvzx/g+EFle8/y/8kb3+O
nb8EQFQSvLTvP2hZpal+VJe/aqC8KpfE7z8EsyXkfRqRv84AJUNy1O8/QBlM
PfrAhb80YY1bTeTvP4jG+tBYH3q/IhLls17v7z+5PyTD
      "]], 
     LineBox[CompressedData["
1:eJwllP8/03kcwHcTfSGk2T67WhauL2d9IYqle73NQznH47DStZwu30/uVGpc
e5BKKuch1eQixXhwdaotJSv1LlkidvOlhUQl32b7fNYXkVOue9wPz8fz8fwH
ngvDE4Kj6DQazf8z//nogwnND3b7wMGmvzKMovDy/Ih6xur9cD7FY+tCPYV7
2ArS3CoL+JwWwfpuCgtXddRkeEnhcU3s1zuaKFzVufngEUk+7Aql2eTUUHj2
3RGHOlERWEzmfbhWQeFd0TuG66Rl4L22/uGnLArLPJz8VYoL0NMVJndIoXC7
xchllboCftv3Ps/3Fwqf3eLGj0hXgFz5VczJAArTaNenIu7cAI57uukiSwqf
GWY4v/JXQvWTeQa/TyR2adsTHvn0JgiTKtsTSBJHlrmqIsdvQ2bVyxKl+nMv
Eqlc2LUw5uolCDhO4vqmzsxVwofQ6vwpdY81iWOTu+q3OjXAakHMBJoy4BmO
T6elmzRCQbBm72zSgP0k3antlY8gKlEWX/bIgJuW9u7ey/gbxq+tF3VkGHCs
9+5LT3WtsMD9uJvnRz2OL0rK5VR0Qtw3XL2JbgTzl927GpjXBybfCbacuj+M
6WLb7ki2EZKHFG7r7vbj6RaBB8LJ9xBQnWLWFP0CH3qu9d5d8hG6s2ZNhXp3
YXlBRmDqmy9QqWLn6Br/Vpwgi7R+FWKKNooXXFAG3cdhcfmcIwdmoKI2/zTJ
sTP4WJDYY9VZc5SW4x5IeCphGiN3YP+EJUre3kJWqprhyaPDxnSrOajJNV6b
16eFTZLw1fn3bRB3442m33N6Id58xF4tYqB91zf1uj7uA7u/Hpw209mik3TG
Sk3zIGw8X61sNNqiyczDM817ByHz1MXu7DFbFDd37KWPcRDeSbLtWaZM5OnY
lXvLZgga/UMuL+Yykc6n6J+yzUMgJvtVviFMJDjGq095MQTNzqajmbVM9MbK
J8xpdBjoi8ZY3zcwkeiPqjXRZjpw/3KYP1fDRA+5S+YUs3QgozenFTxjonxn
8zomXwfJbVKLinEm8hW2LKXv14HjXkfH5uUsVHT6x9GOGSMgqfYWWhWwUCBH
nJUxXw8uoRrjtmIWKhvr8Sjg6UE3FZotL2cheuuGwSueehBtEDcEXWOhqgy2
oDNUD3ztnyBtZiGusWbMqVAP429n89g0ApG1JhEtHAPI8/IbfjYjkG9hvPXA
MgPErl0cc9OCQLKkx7cn1hmg4yCSbWUTKIRXTjiGGeDGnETinAuB7uT6qcXn
DCBe0THNIYpA2bEnPObbkbC8LVKWuINAQ4KJgZUrSBgQv4a6XQQScCKkPkDC
pjuzJFGpBHrX4kr9uo0E14B1r8vzCBS6tqP03nkS9MaG7PFCAlXZegVrr5BQ
Kg3hfVtKIGvjhSkdJoHRnRCjkxOorlQiYjwn4W2c7BmvkUA8SzvrGC4FFy1X
SFI0BEofOnJbspKC8Ku3CLWWQD21xrgcREHrh3ZhQh+BTibVqpQ/UZBZuP01
HiaQPsgpUb2TAoEXmW1tJNB6npTbl0bB1aPTGxWTBJp8HiWxKKYgjieNoZuw
Ucgt9ZKFCgrsNVxT4Uw2kueu0brdo6Ar8ZKsxIqNZu0sOuTXQsEJFh+9s2Wj
cL+ZztteUBBNWqUmzmMj+/9/Bf8CKclVog==
      "]], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAymt4KoMoGUAgEuWzXu/vv7gC4Bjm
KBlAkCa8xmLu779wpmy2Ni8ZQDhMUxlO3u+/3s8blQ42GUCo4rv/4Mzvv035
ynPmPBlAFHkk5nO7778qTCkxlkoZQPSl9bKZmO+/5PHlq/VlGUC0/5dM5VLv
v1c9X6G0nBlAMLPcf3zH7r8+1FGMMgoaQCwaZuaqsO2/DAI3Yi7lGkAg6Hiz
B4Prv0VtVJUqkxxAVELa9RQ8578YuR1vRSQeQMggZzqtPuO/knKIkTDXH0BA
Y6DmVNbdv1KGTy2dtiBAeI3JXGXC1b8qW4RVpH0hQIBo1EY6rsu/1uYJopNV
IkBA/wxLe/60v85i5UESHyNAAGFlzEsmpj/hBKf4lSIjQIDs/xSvRKc/9KZo
rxkmI0BAeJpdEmOoPxnr6xwhLSNAQI/P7tifqj9kc/L3LzsjQMC9ORFmGa8/
+oP/rU1XI0BADQcrQAa0PyalGRqJjyNAAGrbb1r5vD85R9vQDJMjQMCvKBSM
iL0/TOmch5CWI0Cg9XW4vRe+P3EtIPWXnSNAIIEQASE2vz+8tSbQpqsjQCDM
IslzucA/UsYzhsTHI0BQ41daOvbCP2Vo9TxIyyNAQIZ+LNM9wz94Crfzy84j
QDAppf5rhcM/nU46YdPVI0DwbvKinRTEP+jWQDzi4yNAgPqM6wAzxT/6eALz
ZecjQGCds72ZesU/DRvEqenqI0BQQNqPMsLFPzJfRxfx8SNAEIYnNGRRxj9F
AQnOdPUjQPAoTgb9mMY/WKPKhPj4I0Dgy3TYleDGP2pFjDt8/CNAwG6bqi4o
xz99503y//8jQKARwnzHb8c/C48rZQ==
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.470966589552579*^9, 3.4709666131757307`*^9}, 
   3.470967918557616*^9, 3.470969600940392*^9, {3.470970497718494*^9, 
   3.470970504429329*^9}, 3.471040115921935*^9, 3.4756068188733053`*^9, 
   3.50612904768641*^9}]
}, Open  ]],

Cell["\<\
Since the sawtooth wave is periodic, we can expand it as a Fourier series.  \
The series consists of an infinite series of sines and cosines, but we can \
get a pretty good approximation by just taking the first few terms.  Plotted \
below in dark blue/purple is the exact sawtooth function, and shown in dark \
pink is our approximation to it.  \
\>", "Text",
 CellChangeTimes->{{3.4710382234334087`*^9, 3.4710382400308933`*^9}, {
  3.4710386110026293`*^9, 3.471038634592804*^9}, {3.471038761116509*^9, 
  3.471038800552997*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ApproximateWave", "[", 
   RowBox[{"x_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Expand", "[", 
    RowBox[{"FourierSeries", "[", 
     RowBox[{
      RowBox[{"Wave", "[", 
       RowBox[{"x", ",", "L"}], "]"}], ",", " ", "x", ",", " ", "8"}], "]"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.470967065919775*^9, 3.470967069734249*^9}, {
  3.4709673268208523`*^9, 3.4709673559594393`*^9}, {3.470967913149407*^9, 
  3.470967914707135*^9}, {3.470970517455332*^9, 3.4709705230773478`*^9}, {
  3.4709707373751993`*^9, 3.47097076084087*^9}, {3.470970798035087*^9, 
  3.470970800088427*^9}, {3.470970930429441*^9, 3.4709709521528597`*^9}, {
  3.470971691181148*^9, 3.470971697884646*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApproximateWave", "[", 
  RowBox[{"x", ",", 
   RowBox[{"2", "\[Pi]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.471038736863352*^9, 3.471038742264222*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"7", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"60", " ", 
           RowBox[{"Sin", "[", "x", "]"}]}], "+", 
          RowBox[{"30", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}], "+", 
          RowBox[{"20", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "x"}], "]"}]}], "+", 
          RowBox[{"15", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"4", " ", "x"}], "]"}]}], "+", 
          RowBox[{"12", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"5", " ", "x"}], "]"}]}], "+", 
          RowBox[{"10", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"6", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{"60", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"7", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"105", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"8", " ", "x"}], "]"}]}]}], 
   RowBox[{"420", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.471038748963871*^9, 3.475606831932275*^9, 
  3.506129057182238*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Wave", "[", 
      RowBox[{"x", ",", 
       RowBox[{"2", "\[Pi]"}]}], "]"}], ",", "%"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "x", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4709673675539503`*^9, 3.4709673811306353`*^9}, {
   3.470969586368203*^9, 3.4709695894631767`*^9}, {3.470970853453199*^9, 
   3.470970861617302*^9}, {3.4709709024763947`*^9, 3.470970918071795*^9}, {
   3.47097096600478*^9, 3.470971005101956*^9}, 3.471040130462274*^9, 
   3.475506075139*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAfedN8v//I8CgEcJ8x2/Hv+Z7FvXb
/CPAANJdwcwvx79OEN/3t/kjwECS+QXS78a/IDlw/W/zI8AAEzGP3G/Gv8KK
kgjg5iPAQBSgofFvxb8ILtcewM0jwOAWfsYbcMO/lHRgS4CbI8CAOHQg4OC+
v6sBc6QANyPAgJvIjmLErb8FZUcyGV0iwOD02ccEzLM/E9jFbKKRIcCgCt5i
8RbKP1LDmmMpyiDA2BBw4Ej71D977z1skOMfwJi3uCZPl90/uHeaaq9PHsDs
KlW0H9DiP06SVSD+mRzArMfx4LIq5z9Hnb1OSOwawBymUmXycOs/8I3c/ATm
GsCEe1s35YDrP5p++6rB3xrA7FBkCdiQ6z/sXzkHO9MawMD7da29sOs/kiK1
vy26GsBkUZn1iPDrP96nrDATiBrAqPzfhR9w7D92spsS3iMawDRTbaZMb+0/
IKO6wJodGsCcKHZ4P3/tP8mT2W5XFxrACP5+SjKP7T8cdRfL0AoawNiokO4X
r+0/wjeTg8PxGcB8/rM24+7tPw69ivSovxnAwKn6xnlu7j+4ramiZbkZwCh/
A5lsfu4/YZ7IUCKzGcCUVAxrX47uP7R/Bq2bphnAZP8dD0Wu7j9aQoJljo0Z
wAhVQVcQ7u4/psd51nNbGcBMAIjnpm3vP5kydkOpVBnA7GS/JfJ+7z+MnXKw
3k0ZwIzJ9mM9kO8/cnNriklAGcDIkmXg07LvP2XeZ/d+ORnAaPecHh/E7z9Y
SWRktDIZwAhc1Fxq1e8/SrRg0ekrGcCowAubtebvP8preCqDKBnAIBLls17v
7z9HJEDn
      "]], LineBox[CompressedData["
1:eJwBIQTe+yFib1JlAgAAAEEAAAACAAAAZu4PfnMbGcAiEuWzXu/vvyL1VRiK
FxnAeBFOqmjl778VYFKFvxAZwNqsFmwd1O+/CMtO8vQJGcA6SN8t0sLvv/s1
S18qAxnAnOOn74ax77/uoEfMX/wYwPx+cLE7oO+/1HZApsruGMC+tQE1pX3v
v8fhPBMA6BjAIFHK9lls77+6TDmANeEYwIDskrgOW++/oCIyWqDTGMBCIyQ8
eDjvv2vOIw52uBjAxJBGQ0vz7r8CJgd2IYIYwMpri1HxaO6/9ZAD41Z7GMAs
B1QTplfuv+j7/0+MdBjAjKIc1VpG7r/O0fgp92YYwE7ZrVjEI+6/mX3q3cxL
GMDQRtBfl97tvzDVzUV4FRjA1iEVbj1U7b9ehJQVz6gXwOLXnoqJP+y/zj/2
B3iiF8BUIXB4ZC/svz/7V/ognBfAxmpBZj8f7L8gchvfco8XwKr940H1/uu/
4l+iqBZ2F8ByIyn5YL7rv2Y7sDteQxfAAG+zZzg9679u8sth7d0WwBwGyETn
Ouq/fmADrgsTFsBYNPH+RDbovwAtH79DhRTAGE9/G1RB5L/ai5mHq9USwGw4
01iQ7N+/HApoqfRCEcA02/5+junXv2s1KgXbHA/AcMXFG610zr9jN96ow8ML
wFCb+bQXz7q/Kng6/26kCMCAyPDwSvuTP6HdU8R5QQXAUDZIxcq+wz/ngRU8
RxgCwEAh4hEA7NE/upUoRehW/b+YwmfY0KTaPzDp2fQvnfa/rPM6J32a4T9E
utsJ/Vbwv8qBFuAGmeU/cKmv+BET47+I3ZWkq+3pPzAOboNC4OK/5iyfC9j9
6T/xciwOc63iv0R8qHIEDuo/cjypI9RH4r/+GrtAXS7qP3XPok6WfOG/dljg
3A5v6j/z6itJNczfv2bTKhVy8Oo/BoP4oEZy2b9Eyb+FOPPrP4dMdbanDNm/
ohjJ7GQD7D8IFvLLCKfYvwBo0lORE+w/Cqnr9srb17+8BuUh6jPsPw/P3kxP
Rda/NEQKvpt07D8YG8X4VxjTvyK/VPb+9ew/VmYjodJ8yb8CtelmxfjtP4px
c4iStci/ZhVSf6AI7j+9fMNvUu7Hv8p1upd7GO4/JJNjPtJfxr+UNovIMTju
P/K/o9vRQsO/JrgsKp537j8eM0gsohG6v0y7b+129u4/hUno+iGDuL+yG9gF
UgbvP+xfiMmh9La/FnxAHi0W7z+6jMhmodezv+A8EU/jNe8/rcyRQkE7q79y
vrKwT3XvP3v50d9AHqi/1h4bySqF7z9JJhJ9QAGlvzx/g+EFle8/y/8kb3+O
nb8EQFQSvLTvP2hZpal+VJe/aqC8KpfE7z8EsyXkfRqRv84AJUNy1O8/QBlM
PfrAhb80YY1bTeTvP4jG+tBYH3q/IhLls17v7z+5PyTD
      "]], 
     LineBox[CompressedData["
1:eJwllP8/03kcwHcTfSGk2T67WhauL2d9IYqle73NQznH47DStZwu30/uVGpc
e5BKKuch1eQixXhwdaotJSv1LlkidvOlhUQl32b7fNYXkVOue9wPz8fz8fwH
ngvDE4Kj6DQazf8z//nogwnND3b7wMGmvzKMovDy/Ih6xur9cD7FY+tCPYV7
2ArS3CoL+JwWwfpuCgtXddRkeEnhcU3s1zuaKFzVufngEUk+7Aql2eTUUHj2
3RGHOlERWEzmfbhWQeFd0TuG66Rl4L22/uGnLArLPJz8VYoL0NMVJndIoXC7
xchllboCftv3Ps/3Fwqf3eLGj0hXgFz5VczJAArTaNenIu7cAI57uukiSwqf
GWY4v/JXQvWTeQa/TyR2adsTHvn0JgiTKtsTSBJHlrmqIsdvQ2bVyxKl+nMv
Eqlc2LUw5uolCDhO4vqmzsxVwofQ6vwpdY81iWOTu+q3OjXAakHMBJoy4BmO
T6elmzRCQbBm72zSgP0k3antlY8gKlEWX/bIgJuW9u7ey/gbxq+tF3VkGHCs
9+5LT3WtsMD9uJvnRz2OL0rK5VR0Qtw3XL2JbgTzl927GpjXBybfCbacuj+M
6WLb7ki2EZKHFG7r7vbj6RaBB8LJ9xBQnWLWFP0CH3qu9d5d8hG6s2ZNhXp3
YXlBRmDqmy9QqWLn6Br/Vpwgi7R+FWKKNooXXFAG3cdhcfmcIwdmoKI2/zTJ
sTP4WJDYY9VZc5SW4x5IeCphGiN3YP+EJUre3kJWqprhyaPDxnSrOajJNV6b
16eFTZLw1fn3bRB3442m33N6Id58xF4tYqB91zf1uj7uA7u/Hpw209mik3TG
Sk3zIGw8X61sNNqiyczDM817ByHz1MXu7DFbFDd37KWPcRDeSbLtWaZM5OnY
lXvLZgga/UMuL+Yykc6n6J+yzUMgJvtVviFMJDjGq095MQTNzqajmbVM9MbK
J8xpdBjoi8ZY3zcwkeiPqjXRZjpw/3KYP1fDRA+5S+YUs3QgozenFTxjonxn
8zomXwfJbVKLinEm8hW2LKXv14HjXkfH5uUsVHT6x9GOGSMgqfYWWhWwUCBH
nJUxXw8uoRrjtmIWKhvr8Sjg6UE3FZotL2cheuuGwSueehBtEDcEXWOhqgy2
oDNUD3ztnyBtZiGusWbMqVAP429n89g0ApG1JhEtHAPI8/IbfjYjkG9hvPXA
MgPErl0cc9OCQLKkx7cn1hmg4yCSbWUTKIRXTjiGGeDGnETinAuB7uT6qcXn
DCBe0THNIYpA2bEnPObbkbC8LVKWuINAQ4KJgZUrSBgQv4a6XQQScCKkPkDC
pjuzJFGpBHrX4kr9uo0E14B1r8vzCBS6tqP03nkS9MaG7PFCAlXZegVrr5BQ
Kg3hfVtKIGvjhSkdJoHRnRCjkxOorlQiYjwn4W2c7BmvkUA8SzvrGC4FFy1X
SFI0BEofOnJbspKC8Ku3CLWWQD21xrgcREHrh3ZhQh+BTibVqpQ/UZBZuP01
HiaQPsgpUb2TAoEXmW1tJNB6npTbl0bB1aPTGxWTBJp8HiWxKKYgjieNoZuw
Ucgt9ZKFCgrsNVxT4Uw2kueu0brdo6Ar8ZKsxIqNZu0sOuTXQsEJFh+9s2Wj
cL+ZztteUBBNWqUmzmMj+/9/Bf8CKclVog==
      "]], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAymt4KoMoGUAgEuWzXu/vv7gC4Bjm
KBlAkCa8xmLu779wpmy2Ni8ZQDhMUxlO3u+/3s8blQ42GUCo4rv/4Mzvv035
ynPmPBlAFHkk5nO7778qTCkxlkoZQPSl9bKZmO+/5PHlq/VlGUC0/5dM5VLv
v1c9X6G0nBlAMLPcf3zH7r8+1FGMMgoaQCwaZuaqsO2/DAI3Yi7lGkAg6Hiz
B4Prv0VtVJUqkxxAVELa9RQ8578YuR1vRSQeQMggZzqtPuO/knKIkTDXH0BA
Y6DmVNbdv1KGTy2dtiBAeI3JXGXC1b8qW4RVpH0hQIBo1EY6rsu/1uYJopNV
IkBA/wxLe/60v85i5UESHyNAAGFlzEsmpj/hBKf4lSIjQIDs/xSvRKc/9KZo
rxkmI0BAeJpdEmOoPxnr6xwhLSNAQI/P7tifqj9kc/L3LzsjQMC9ORFmGa8/
+oP/rU1XI0BADQcrQAa0PyalGRqJjyNAAGrbb1r5vD85R9vQDJMjQMCvKBSM
iL0/TOmch5CWI0Cg9XW4vRe+P3EtIPWXnSNAIIEQASE2vz+8tSbQpqsjQCDM
IslzucA/UsYzhsTHI0BQ41daOvbCP2Vo9TxIyyNAQIZ+LNM9wz94Crfzy84j
QDAppf5rhcM/nU46YdPVI0DwbvKinRTEP+jWQDzi4yNAgPqM6wAzxT/6eALz
ZecjQGCds72ZesU/DRvEqenqI0BQQNqPMsLFPzJfRxfx8SNAEIYnNGRRxj9F
AQnOdPUjQPAoTgb9mMY/WKPKhPj4I0Dgy3TYleDGP2pFjDt8/CNAwG6bqi4o
xz99503y//8jQKARwnzHb8c/C48rZQ==
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwUWnc81e8Xt/fe2x1FKRSFIo8SUokk2iGpkKSUVJSsMkpIyciIaElGqTwn
K+teM1/rXqR7jcQ1ssfv/v66r/N6n/E+7+ec5/V8Xq9LdL1kf5aLg4NDWpCD
4/+/twdtJldXyTAfM5KWaN+AmTfl/nUvkeEGH/NJpkoDPiDRO1syT4aYgAMC
xgP1mLDNZ/nSFBkKdFfaudzrcQTFiGM/iwyral88tpDq8YQLJ/e6v2R4dqfn
11RXHS5/8Figj0mG2c0mq0a76vAG9ePCXwfIoFA9WNTCqsXxH8liT/vI8IC2
1p2UXIvP9hRK23WRwXRq7Nua4RosoPOfGlDI8G/Fxmf61A98uTyNmFxHhooU
ZbrXv2rc5Xh+jf8PMkQ2VWkeul+NXwfNr9/0nQz9OdaSw7lV+ECz8tYXhWRo
FZeREW+pwPFXnffdeU4G2c9vk2nfMV4WWH/gxFMyCN8pyOnCZdg9ZcLOKIEM
Kwy711++fcOG1cGOrBgy6EzK73pc+gV3yb90cQ4mw5mAwC8Hy0uw+ZuLbiZB
ZPguOKGrXVuM35gZnFO4RYbE9POpuS1F+PaFH15NfmRwJ6Rb1o59xIQvw9fN
LpDh64e8LcuH8vF924IAFXcyZCT4tEey3uHJgYDbc65k6LoWHTyy6y2uEBG5
l3+CDLsJH5718+XhjeltoVFHyVB4hb/N7sYrHL81JeK8IxkaW4xObJ/Nxu6n
dGIIdmT4iTQl2+SyMHVy5tHSfjJI1pudVf6cgQ3DcVyHNRmiZ79MCJ1PxwL5
ds8emZMhnpXfdKYzBV/erZjsZUaGpdAPmn6hz3FXR3/qnh1kUPHqjlTe/wy/
5rySxWFIhoR7BdOZ6xOw0aE8vmf6ZEglrjv8WiEOV2f1n9+8iQzVfsFXpTVj
8aEZhfrajWSg6DwStc+NwX1Wdtqu68lwYS5LFe2KxN7Pwh8urCWDvn6cKVkh
Ai+OlE08JpFhsOjfKS6tUBxhMnNogzqb/4lI/vxrwVguRru4QpkMchTiyxfz
QTir103hhAIZjhpnSxb43cSbNycHTMuQYfy0xo+1p67jsuDWnihJMiQ/vvp7
6/sreH+bEForRgYcEWBR4+aDu9buSv8mRIaFlM63A9Me+Nz1G9yO/GTYpBfs
MN1+Fk/X5J8d4yZDx1rFmLKzLjhYaehHGAcZ1p5c6HLXPo4lvNS11JdJIBq1
pHrvmwNO+eYYVTJPgsW1bnL+tQewlnjMmO0MCQS5XDIM5CzxJ+cqu6FJEqRN
Fzf7nTbFFgVLBXfGSTA2XbMkV62PW7i3yCqOkuDnzBryk3FN7HzY8/qHIRKM
J/kfMNBUwn+zMzqtGSR4HEvtjrgpgAPmOo1/9ZNgk1fiVc+ciTKBvZKpAXQS
vDuuW7v7I6Us4fkeDuluEsjkjO/jeBJYRvob5Pr6PxI0tXOKagyFmeabllSa
t5Hgxv6HnE1LTaY7Ho1p9DSR4M6aEddZ0pRpXf/a+1cpJBjQ1zZnjAmiI/on
/4jUkUAHJLruHlVGzJB4m5fVJMjJvq5d0boOXWmvf7+jggQ9XSvW425bEMc6
bql2TIIrkYektfQQirmx/ar3VxKIaWUsziRbIuX6y+18n0mwtvGz+aqPLXql
kmuUVkSC7I/bkA35MDLw7ksyLCABY+juuobs46gCyy83vmP3X355G+dbF2Qn
aXv6/GsSHLn9furOendEdw37zvGKBC93M5Q8D3kiz8Jv5GdZJGh4z1o+keSD
5nj/hW5OJ4ETn/kajz9XUJjTxqHaFBJEPHpYtiv9OpLOPbPXNYkEd4OuOS/i
m+jFQtKbhSck8ONhSOatvYN09reIxcWRwHZVh3osMxh9TRG8vOERm49ivkDi
sVBkPW7WWhFFgpOd24JK9kegdjP/rSfuk+BT7p5LjIBI5Pb4feJ0KAniq7an
KzJj0OQAcz4qmASx+kKUaKtYFLRV7cTaIBJEfzAJMDOOQ0kdUQRHfxJcqggf
GryTiNZpVQaPXSVB3Da1jKmWZ6jo5uLvsMsk2GOjPHBqdzJqUvPILfEggeWM
hszW8heI96yVnuJJEny5dP3ml+Js1HJqs9OfoyRI/v03KNX4FUo9onzrmyMJ
1GM3rjnUkIsM9o9XudiRoKMhcj5N/C1y1088mmdOgo/DihciBQpQDefgHWMt
EvhvDEyiff+M4hebXopqsudhTu+rfGUpcv5XWtdLZutzjdnx4scXND8UIxOi
SgK1dVUius3fkFaTwasGCRIYz0tTuCcBRaWGNZ6cJUJ4uqorV08lOvLUZ1p3
mggfCdMPpO2r0JrHxxS5JohQ/WXNeZ7qKvQtVOdM9ggR9p5GmpPZ1ehBkEKE
/yAROEYOX8uV/oEcb3C93fubHe8uElZ0+wca82qfGaMRob5xy34H6xpU6g7K
37uIoKPtI5+fV4PCnPPM4v4jQn5X7/SkQC1Sdwh8YNhMBKk5hvZ/X2rRqM35
94JUIrgwyyrsJerQJyv7tu46IvQIpi1dcKlDdsYaancqifDfjFLwtvk6pLJV
wtz+OxE+2RdM0FE9GtJZOLemjAh+cYlHF4LrUeG631EzpUTQz/PyjyivR3dJ
1A81JUQQKlOMjlipRwdUPrUnFRLhgZHfkSWDBqQkl7Ho9YEIKcd0VIc8G1CB
4DULyddEWJO9qmhR34ACuZ09BnKIMBD30Kr+XwPau2z9sCiLCM6CijZTKhQk
N6tfGJ5OhMrbPp8oZhT0i6XaeTSVCNv/nbl60YWC3o3wr2x4TgStHdlfBwMp
KOD3BGklkQjTJgoSDs8oyJLebdUUTwQL0RvEhnwKku6o8sqIJULX07BqzyoK
gg3pESExRJBNFoxebqcgr6BbWe6RRPDW3TcjyqQgxVYn2BNBhLWBCQ1fJymo
WkO/RyuUCBNmVyI2LFPQlQCxOZFgIui9ETa+zUtFBOqw9HggEcqtXK+3C1MR
hVil23yTCAU697eflKCiAL8X+z76E6Fusq3FSJqKNGtvnkvwIwISIVXHylBR
m4rTveu+7P5dTUr+b9/10Us7eoldTy5g7xm2v06l6BdjLyIIWD8X1JOkom75
4XbVC0RgCHNaaYlRUYRn5eTqWSIoWh3guCFERVtxmtgvVyLsTAmFfXxU9Evq
plblaSK495TcbeKkoofujpbZJ4jQVO8Ys5Xdj0npZteIo0Q4fNnMNXeOgoZF
RQM9HIlgqZEYeWyagp64DD3bf4gIyosBkddZFGReVFGkY0eEe6Kfi3X+UhBL
IK1ZwoYIqaGhcu9GKCjlRMDfSWsiJLEcrMnDFLQ3/7DgT0si1L4ePvNliIJm
uTevLTEnQtpcbksGG89yEtn5zIwImrqHjHlHKejg68ETN3cQ4ZWj2mlRdr2V
lXL/k9uJcHCdx/LvfxT02j41Hhmy98NopbiQzf9I9o184hYiVL1emMjkpyLe
BYcG7s1EcPAKL+tg61dgs2mIoU2EleuHv14nUdHpdGGeGi32/Ozh4czSpyKR
f0z1PE0irO++tRpoRUWf95QbR61hz9++Qz7rTlGRe3KKkzeRCM0IGZddpyJp
lv8VOzUiXKWUupyIpyIwd3iop8z2L2sfUSmkoouJuq9lFIgw6GTfJP8fFSn9
EfoxI0ME9RXuv67LVPTDlPmrQ5IIxyzSRiU1G9HVx99XSsWIYCD228TAoRER
mclKKcJsPW/t5OgNaUTUbf4GQQJEyEud4VT83IhuRh+yd+ElQkne59djrEa0
rl/H25yLfR/1XVvRl2tCwRGMl/xLBDh1YCFvo1MT0u2B78NzBJA3l4jwCGhC
PbrJtPp/BEh4KTF0O60JGfxnL/tonAAhq856yuNNaEBLZ7PvKAGee5zkSlFs
Ro8CBW0chgkgFS+z5rdFMxpZCyEKAwTQlbF4k5XZjBJvPH+x0EsAix/7TUR+
NqPdlGtfe3oI0Bez+aasQAtKvao9/aKdAH4hFzN6fFuQfUXSmfV1BPBtC93z
7mgrWtP2m/6jmgBhBsKktuetaOa3zjH3CgIkPzpPPdjbip7xVdhlfiXAR73+
A2MX2lCf9Z8dqu8JcGzgpW7Og5/oYpOxgmQ8AQ6s6DSH9/6HTPtD494/IsCL
8qNLoes7kMRko9iBaAKMlX5rmvbtQIXSbryRYQQYt5pvzuLuRAuOUZM8NwhQ
s+vuxr8KXajhXPvFTD8CZBwKkRE73oVS/QnDO30JsIY0ci3/eRfamVTYG+hJ
ABGbdRlSCt0ogtbTMHeSAAGI4wosdKNjYxp7Eo+x+Rre4Dum04M2rvpUbHVi
47eqjtae7kGNBN5SXzs236grAqwvPejFZtutkjYEaLvRIvOQ2YN8dz3Lf29N
gPX5zsdaxWhIzk07Z3QXAR6fSqvXOUJDQ1evkyIRASQN7MxNbtDQ59DvKetN
CMC5OeZpdyINPXgirFhjRADnF46fRQpp6ETO4Xj3rQSo9tp1r5lCQzqf0sR5
9QhguCuqUptBQxy1ww8ydQjwen+CseYCDbV06vPt2kCAbWKD8VUidJQ5cvtu
nyYBvi99OCelSkdXF38sBa4hwJnS2k2KG+jIUkTKX5VIgO5fhP2DBnSkoHpi
6osqAQQf/xiNNKOjEe1s72NKBNAf8pFW2ENHX01Zw3NyBCAuhNxLtaGjaNvt
ZxOlCZD7qapY/yAdnXIO6dsqQYAI/5jGv/Z0tOky9XibCAEE+orv/2bbXMEK
//kKEkBTjKy1me3f9tjVXpKPPX/9whfH2PmyM99Q3nMRQMJK+IqRNR2Nnf8b
m7yiDtaB8282mtNR7IO7EZ2z6qCjlVs9bExHW97IBslNqIM0T+yjh/p01EHJ
9Ts0og47O32HTLXo6Ob4Dq9HA+rw4KREuiKBjpJdDIfMaOqQmd7tyyHH7qd1
k9tEuzqIVppJXhCmo5US8gn7OnUQtAu23vqPhtS1VDu4KtXhYERMXtswDZkl
yzl8/KYObq01phfpNBR8R3C/zAd12H7QfgtPDQ1lTnLVVOapA7dGax/6RkOV
bkvmflnq4Fm2WXu8gIYY7f/w2lR1kBe//HhTLg3xWY8btyeqwzZX1kHSCxrS
/DJUEharDnHlXs6/2POwR/uXvmEku98K+YMxj2joQlr3+8EQdSDkNJuZP2DP
i+TPDU8D1eHJcPx31VAaen2PmrPHXx1eyBOrt92loYZ/P8jzl9Vh8OdkdEEg
Df099z0t11MdJhuexGbcpiGxrlLlY2fVYVj47CUyG9fdX5godFodWswKOmzu
0JBd2VvpL0fY+PC9oG0hNHR5U85DT3t12HeqjWf5Pg09znghrLJfHcJ3Xhl8
G0tDH2WSwhss1EE8LeaK83MaaguL476N2HpFswo0c2jo31xUkPY2dZBqWzop
W8TeD8+wRZqeOmx+cYOyrYqGDGlB12M2qkNhr/bfzP9o6IjtjSlTDXVoP3Va
12WUhm589700rq4O/Tu2373NTUdJ+l5/0hTV4XmDlhk3e76/vDx7zk5aHYSs
9DYtGtFRj/zpAQ5RdYh3NL3i5URHy/ePnP7Apw6raQ/unvCnI7Wlg90uHGyc
U5rc+JyOkPc+J6kFNUi4reJR/Z2OnPt2t5ZPqUEZqevdrhE6yqg0rCcPqoHN
ai6tfFcvqjDYbNXWpwYpQlfLynx70e9XWhUhXWw77f193Ze9SCNa9QuDogaf
JxL2Zgv0odzD3K9zCtXY31/cmTHBfajux5LGkXdqwDRUoJVm9qGRbTMZAq/U
4GvUguVQVR/aqDacdOG5GjT5PSlREu1H+Uzqgw3BakC9uEIMftmPPl1P8nhv
qwYfS0+v+kz8QiS3yy879qjBgdJjhnXqAyjabk8f5y41qOE9vHnTgQHkun7m
sMMWNfiVo7pYnjeAhLsP7pxXUIPNJd2/XJx/o2s/1t0iSbHjh1yu3I36jfo+
rhbvE1YD+mb3E2Mlv1Fh1NuNqcuqcPe10fghEQY6ZSqoYP5LFVqk8uMGXjFQ
jVafvVe3KuT8KbvJSWEgPfmS6IQ2VVA1qparGGcgfpYb91C1KhTw+Ur92cRE
vj3GppKgCjt2rK3dZMtEPTVSN7Z/VgXB2srlDk8myk+HsajXqnDz3GqT8gsm
UopJXF+cpQp7LcpmU0uYKDTA2603RRUCu2KrDlOYiOVukSaQqArrXUWqDPuZ
6Nghla7Nj1TB95PfwI4pJqpEUzLH76vCWIRYgCv3INLZWGcbEqwKAaqHHdMl
B9FThfQHb2+qQvEx8++zqoOIm9e/qv2qKlhrBIa6rRtE3hMHODi8VeGO5qXp
wU2DqIO21nj9OVXwebhr5J7hINpVt+Rn76wKax0rmoxNBtGb4tb8m0dV4R1R
Ml0GDSK5zLw/Wfaq8KB9w28Zs0F09+FdDeo+VdiWfrBgNxsfvXnEZXa3KvQo
aX94y453PK+bTDBVBTOuFonjRoMIHPj+szZUBb2u8PCjeoNIaydN8somVbj0
zHV/idYgitcu3J+8XhU2X82TCCEOolXFyPAqkioUZsrMNckNIg8+1/IxZVXY
97fxYb7QIGqbNFqWl1UF27DzlQbLTGTaK260U4x9fpTwdv8xJnpVz/T14FeF
io0JB6LpTCT16dvbOA5VGN5jOh7J1vt2VvzQ13kV6Lv7Nzv6CxPZ3951SnxU
BXI/74zlTmCiRZ1U68ImFdi5W+JMkxkTuSv7hdBqVcBq2eHijBYTNfHvx3wV
KpAvoS0lKMtEWX3zW44WqYBuqSb2G2agA48PE1aeqUAVj6CmYCIDBeiJW1vF
qYCDeItdcAgDZbfUXH4UpQLu53oEB30ZqMU3OKkzlF0vaczD0ZWBVqRMKkhB
KoAFdLaM2zOQ1sd/fzz9VWBIxauocTcDOR56L1N0WQWY5n7FskYMFDx1fseK
hwoQgi6fpm9koLdxJHcrNxUw83UnWpIZqEO/J+bRSRU43zOSel6ZgXjaEko6
HVWg/bxygrMsA226attHslOB2eK+SitJBjohIyjoZa0C2a5PegzEGSiisHxz
0S4V2P6R5GrBtgsdbh1bMVYBe6+YlPts/77prfestqrAE56NIQpyDCSSMP76
kY4KLO0+mcWrykBGW3PbOjVVYIqfT+qMBgO5/XRdJhFVIDyg9NBOPQZ65Kei
4aWkAr/6i+3emzHQV9n2A0XS7PyB71DpQQYaKnp4fUWE3f+HwCcXzzKQjKP1
Cys+FVCVbV1ouclAZjNctY9WlWE6tVp/Mp6BPJ98neicU4bE69EqzfkM9MTg
mhJ5Uhnyruk9vdLIQOXtuuZef5ThW75vWDeLgcauDXsW/VaG2ib4LMA+TyX5
zPgVmjIk2dwYmzNmIsuSE9+s/lOGiP9sK3LOsvffSY75qEkZvqQtF4g9ZqK6
xPuG5AplkFeYWOqdZKIZQ3Nnr6/K0Ljr32U9zUFE6liKKCpShg6LVn3RU4Mo
QMGny+qVMhx+aFMt3TqI1j9zvO0VrQw7/8iwpv8bQg7bJLKLwpShObpda73a
MLrTWUtdCVIG0v2Go2ruw6hDcQch1lcZKlfPlMLCMIpIIlcUOSnDWGG6U77e
H1S4nfZnxU4Z7nGBf1XwH9TX9URmz15lOKmlO+zY+gcZKQu5d5koQ6F32xtt
v1E09JwlsEpUBlrTdZJK8V8kY5K3eY+yMpy+Hyn9iGcMmfWcORYrowxXb1yS
6Ts4hp6q/PeazM/uNyLumP7QGLJK+XZgz6gSbAmq7D2/PI5Y0T1LPEwleKn5
sktHhYWSAhfzvvcqwT3KVp6zRixkfknpaGCnEsgZxwI6xEKjp7fxG7cqwU9J
fpFXXiz0xO5I0WyDEgwM35cLD2EhtPP6mcJqJTjyaPlAdRILDW1+InkZlGCX
3W1v2/cs9JhUhLVLlYB6Kf6eSDkLmUi3XRz5qAQSwmeWB1tYiME9pZzzVgkk
A3KLG/pZKGZasu5MjhLMXCvkyB5jISPGJn9CuhJU7Vrz7vQ8C/36aatBS1IC
Y9n7qkzOCRRZ7d32LF4JxvUbzTUEJtCWkuhgxxglsCT6FYuKTCB6zptN0hFK
UHEhrOiB6ASKeFpPb7yrBAb5h7dGsfHN90eiom4qAauINcgpOIG6bggaW/sp
gb+xtWUP1wQK8Vg3zHtJCeY+iT4TWWAhneNWieXnlSBUSpszlM3vv33uFkGu
SpAaz3HHqI+F7piEThmfUIKk9/KrSo0spKWdlT53WAk45NKdiF9YqE21wrbI
VgmOSV48ujOLhW6L/Vq+bK0EGtKhzZcfsJDGKscbHXMlCPni8CjvIgs1jasf
+2OiBDrVzpd+27BQQJ+pwCsDJfgTGuGouIGFyM0ni902KYFyC9VsNy8LXSt4
LkUnK4HPz2j+budxRMgshSRVJei90P+GyjWOauM6vZ3klUAKR+xPTh1DKn7y
9U1CSnBKqcS2oeIvqj5rcCOaRwn+fiF0G9r8RZccD2vuXVGER39uFj5sGkXl
hnH3KiYUQayjd1W36g/yWlew+c4fRRhVWRKKN/iDZBWbe00YilD64FKscsYI
Or8gZlLcoQj/Fax3YpwbRmLfHky/wooQNbPVUeoDE316m5tx9rMi9A/ffbJp
hoFcUmvsSB8VQVxCu3afAfs+C+J7+zxbEVgR1ldEXw2gY7uCz8ZEK8KepqRi
A8c+lP3jRvuV44pQuJs5TBNpQc/0rpnnOijCDYgfGvvbiKJSfPPpNopQVvZp
jcDneuR7xfOBtZkiDOz9I/POqALtUD9pqr5WEYSzrbSslh6itmtm2XVjCvC1
6qfnHvUm/KPfRJpjSAEM12zd0rylBZfu33Zna78CqNaMXt9o0YZfkPSOvWhV
gIYBW3kphw7sSSWLXfukAAY9RQ+yRPvwqW2Em68/KMCEy1Qa11IftstSGerL
UwCX2Wctbxj92CBAtnxfigI4VdtWL+UOYC4N/mvEYAXgddOdL2Ix8b9H3AOO
NxUAfV/pffRxEA8trtpGXVWA6M23Xdb5DGFq89z6WXcFiGLJtc//HMbfTf49
2eisAC8akxImAkdwYc4Et+tRBaAdXXxBJP7Bz26P0Br2KcDQ5KBMjd0ojhpi
7uWyUICR0EJ5WfooDjw0UGJoqgC2Ud4vrdz+4stlvWsuGipAa8OpZfuBv9ht
fU9sxiYF+LL5v4fax8ewU3zHyn/rFcB849HlpvoxvHe1zVOUrABbD61Ib986
jjf9pFj4yypAygfvHc6T45hsVlfwVkwBvA7cspMms7Dc62r1AX4FkDvIleZq
zcKCchVRCpwKEDI+vXmNFwsv3cHzNgvy0PjH6N3pSBYe//PF/d6UPGT3N+mo
5bDwL8dPrZ9G5aGvaNnEA7Nw2/dCszGGPBzd9+KHbRsL/9j44S25Vx52nv+l
2MNg4dLEt0pHO+RhkKTdrDrNwm+48sJjmuUhJ+5Ky5pVFk67mD1dUScP9aMd
plz8E/hxR4bLfIU8tF77fK5GeAKHmqdRdb7Jw809auXs+wT7v3tu7FYsD1GM
zM6TIhPYU/Hpq2fv5eH9jp5dTgIT+FRIvGzjK3k4TtkSHc05galoht8/Qx4s
7S83UeZYGC06LRCS5WFjsoQo9S8L5xd/Hq1NkId+Iem8jD4WJvgq9/o+lAeF
LVkvnJtZ+JH27Wbl+/JwwLvRRxVYmHOYXlEZLA93h/jkxt+wsG+WWfHFW/Jg
EHZv8U8iW5/TGa/krsmDRfU9ltZdFrZX5nmOL8mDHa+PSsV5Fq5oPxt9/oI8
SF0dmaw/wMJZNut9S0/Ig9lxo8wYORaWEYx0O+MoD/9ka0ZYrHEcWjnqKGIn
DwIVkQlnC8axu3G+8SlzeUi6bjU6pTOO22ckdfh3yEPJaeNo75ExbFVwhZBv
IA+R256P78saw+vWG/JyacnDnrS4/jHpMTwiV0Z9KSEPrxICEpYHR7H3ZL3L
X5ocZGZ+urz7wQimv9V2ePKfHLxIDjpN3jmCbS88tETNcjCv6GgoOT+MN/XZ
b4itlAOH2ctaqV7D+MXzQtXtZXJwNlaYdnPdMJZ0kpMYKJED4xeXHzMYQ3iS
0jm95bUcfGng1649O4Rd7xsP0rLkwJFDSslv3RBu3Z3SGZYqB1bSJsKSfwdx
4Rfnso5YOdjgEPTa49YgXnO9PP9upBz4JO34u99qECforcnUCpUD1/6mg+dl
BvG13MHwW/5yoJ7ikXqniImZbtYBa33l4O5UxPb4+0zsRHjtRfWUA87ZHlcx
Zyau6RY5ff2sHBwIvKAyY8TERoneBwmn5WDnzGyhnQwTv7JvMq89Igc0r4Vq
4iQDK4rpGfjay8G254dNPVsY+EFt3Drl/XJQu1/slHYRAy+E/FOqtJCDLMGf
1e5JDOxh5iR6EckB9vUIlAlm4O7FT6uy2+TA0KZ9drMXA+8vUZos05OD3/Ue
Kp+PMPBX31u/z22UA36T6MMZVgy8UYfeLqEhB74/TRJ/GzFwyjCq/awuB1Mi
dp5+GxlY7GX6F1dFtj4XnZf3kBg40Jn7nbC0HPRmnNC0V2Lg/EarmDYROWDk
ECKTZBj4l2mUdwqfHCRH7P7LkGBgmXdNB9w55CAvvDJkjTgDW6rK6uouyALh
8fI99nsW+0cdFZ+bkgW74SANQ0kGzltMGYe/snDfejdmsvP1ePxqvD8oCwb1
23+YseuJdWnk2/fLwuVnWqObiAxsZu35SLlbFnbe7FTPWM/Avp/e+/xukwUj
Gd+cQH0GztKctntLlYV979Q35JsycPsTo83XamQh2669Sn0fAwvw3ZZE5bKQ
Q98hW8zWZ7vf9wn+r7JgNltsffwcA6ce2lvw7L0saO+853I5nIGbymMeu+bK
QuRVMZkPTxmYS6/Vd0OmLHw+auGRksfA7hIn9L89kQWVnR8n5JsYWIdysbDv
tizojr6M7FBjYmeTgvjc67KwevHam3I9Jn78euaq72VZ4CodPxVnycQz94PY
DzVZELY9O3r/IhNjy9hizf2yUHz7aIdtMRNPFv18wrKQBdN79UGsaiZes1bp
+mckC/1967Vr2pnYMf6UU/A2WVBKiqZWMJg4gjvTcJ++LGitL1JsnmLiUt9B
eRltWZDNPpFA5xjEo/0b5no02PVkV9K7RQax2kGfjpcEdj3+mbuf5AexHRR+
8laShXtqgi7uxEEcrDv/1FBGFv4dtTr+33r2/qTuuMEhJguhj/beW9k0iJmi
wUdr+WXhbTllsNFgECvcrt72mFMW8ryePzUzHsR7R4WUji/KgMqJ5jxL00F8
67jtAvmfDByd8TfpRIP4XV1c1+iYDCTvunKdxbb7tnWUFg3JQIrvp7hQtr9U
rsrzwF8yICX4p+MxO99uBZebVj0yoL4GpUkbsvcz/OVxiXYZOPuz2JZn8yB+
NTNs3NkoA//aCs+4svl2ndVRyaiVAbrp4JmNhEEs8tN3yaNCBso9opgusoPY
dHdJj/43GdDZLxPNLTiIfT4ufl0qloGXGkRO6UUmziCZpVTlywDhywjr8R8m
bosNuR2TJwPZXvzC4V1MzMdZe9IpSwaMddPmp36w991H1JSQKgPL7iInez8y
sUfvQbXhRBnYpT1eZZvKxMkHnqx8iJWBrWUl7/aHMzGHtjo2D5UBtMnPTuww
E9+S23kqNFAG2q3d2sINmXh21XW5+roMrNyu9A5QYOKxlmzjvR4yYHDKKIO/
nb3//jqf7Gxl4NgSX1DaTgZ2dLVzeryHzT9az61EkYFb9vnOtO6UAa1bnA4d
rN+4Rq14i9MWGTj44nzYg+TfuLhyx4eTijJwu0ZRRGV0AOu9O22XJiUDX7XD
SwbKBvDbxLvjfcIyoHvbOPVc7ADO8qjSdluRBosWciyHwQB+LGGT5zEgDe6H
X4TPBP3CYgve1m96pKHgY4O8+qFf+P7Ao6G/P6XBOnpgR4nGL3ynuE3jco00
ZH02yIpo7McXT5zIvP5WGrzPmv/XsL4fD1kE7vqcLQ0G+I3HY65+7Kb7on8h
TRr2GX3Ye6ynDx/j+q0e+FgaGOSor1pxfbj9Dy/GkdKwPrO/zsanDx/8qXmK
M1QatujZib060If3vPJMDrkuDY/dLw5uEO/DlbHRxtU+0iBcf3B/469ejG6+
7+L3kIan1U8rl3N7calb8w3rM9IQzNfZPn6lFxscmFKIPCENvpciet+b9eIC
Q9lPDYeloXHtp2kLiV6sTTR0ErOVhk+m5N8lv+h4zXRAQuxOaci7clXd+BEd
v6Alb2ndLg1nnVcz93vSsfKPslaZLdLww2XXre3WdPwkv8/XUVsazO4Wblhd
T8dSSVxSTzWkwfV8H2+cKB1H31vzoVNdGlSzdxqNTtGwwEVLO2VFdr7xgp8r
PTQc4nh+/ISUNNAMXAe+1tDwKnoQkyosDZ8vmJ6TK6HhgPVvtPt4pGHj8+br
8zk0PCNFbSCuSIGB1w0b++c0fHlp3PPMrBQMPB5zEI6l4VGGpPBLlhS8CxQ2
F71Pw+cb9fOYw1KALb+vR/doeODTYet1A1IgvXt9TFgQDZ/KuD50oUcKdnOn
B/24TcNdkc/CX/+Ugqwo2vvfbLu1ivDGuVEKqJ1htx+z/RtWc5pka9n1bD7H
5gXTcNU23X915VIwGJl5TCqchsuuFCve+SoFIa5w/10UDZe83WG6tVgKcnhc
Nc/E0XD+YKXryHspOKEcmy3N5p9L3B+elisF93X05jMyaTjjeOtrh0wpiP9x
JmvqDQ0/TzjWJJgiBenJ/D8Hi2k4vrF/uuwJO5/ghasu32k4zJy1Y/0DKbC5
NkT1/I+GPTaINi37SMFDJHMhkoeOz5yNny7wkILRgbhjx8Xp+ESasuJ5N3a8
dow2KNLx4c6MHaqnpODghVaeFDIdH5DWcm1xkoI9kVURPzfSsZXNh7Dwg1LQ
FUeZt9lKx2bhRq9N9kmBUIH9rj8mdLztO26c2C0FyiOaAnHmdKy3aDmdbSoF
xRfPftvAno8NW6kKJ4ykYBpl5ifbsOfr0uEdknpSgLZEqlDt6Fg1t8elegO7
/+ZPBrn2dCw3cCbs5lq2PkT6DoVDdCyu+idvk7oU2M6tCedj4wJOvo0MBSlw
bqx84GxLx1yx81NJUlJg3FI1Lr2Pjhfr7ijYibD5HB95Im5Bx9M8Ajt4+aSA
J/dTlvkOOh4zfehSuioJLKO0B+n6dDzoLxd2aV4S9lXqiKuso+O+gpS8NVOS
YH//7OEcJTruHF3T2DkqCbkEgQEjYTpu0XgzFcOUhLU1PNk/5mm43llfYXef
JOS8o8/tY9JwZVKpyXynJCj7qmfjJhr+1rbT5V2rJKTkUEZUP9NwsVht6BmK
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
punXS5p1Ejj1gj9vWYOIBMuMI83ZV8CdlaVjKapE5JlBCCo6ScaRBRJuVopE
1BIZ6E2htwL4qg1q1U8SkYQnx70btiug2uEh1RlxInpklWtb8JiMGzdco7V5
iKhHT818L2UFdF8WP+9MR0QnT3deNSpbAcxJXxI+bhJQmJDDhZyOFRCz7GfF
iCegUdp/6tuzK2Aw5ehObDe5XqQ4RUPaVcCtliGv/ouAYoclpLPEV8GL73RH
hHMJaLruh9i6+ipQkGsyPkeup0axIeaS2Sp4t5rzIuMhASWlTrCke64CVrf1
+Rs3CUjXnXlH5+MquFqdc2GNj4DSzbNIKXWrYJeWVXN7E4/WzysT58dWwVjJ
nHRsH3l++Gz6EjFrIPSsK6YgBo9o/pR+mQpbAx639YJ65qeR1aeLuWcz1wDD
mel/Ln+m0bfXo29jKtdAv3XbvmLyNHJwpXt+ZmUN6Df7MZVrTqN6bkv7sNvr
gMh6hJMvcgqJHixZDASsg3kslrfDfAr5zoQZybxeB+4E6TTvk1NI6vdnzd7W
dSB1V4xtuX0SRThR8kue2wB622WSR/gnEc4omc3vxgaY+TBgNjo/gVTUZWhb
PTbAM/FFCvXqCURgv7nqmbcBtvLvn1C8N4G0dmZnGv5sgOGkHn+S9gRKng4e
E8RugMhv8Y0ZAhNI72dBWw33JpDFV4XTt42jdx80azGnNoFih1j2ZN442ozr
+el6eROcWnOhnwsdR3l2e3lcIZvg95WJsmKtcXRgmJDhlL4J9G7c0wkXHUem
Z6WSKn9sgmfVPzXsD8cQPYtRiN3SJqCQ3Xa/HzuGzI9bVqswboGBBk8BafMx
VHje4ZDp6Ba4dYvtZbHUGNqzdtca09oCnYcxr+m3cehqgH9QmcUWqHocVaLc
hkNZSaG/Ir23wN9ReVmNDzi0Why7e+vFFngamywoFIRDuq3JagqFW6DRr8m8
ywKHkglZATT1W8DyrmOS2TkcmqH8VDE4tgX6ygkmhUI4pCbyfatoZwu0WD3c
QRQ4FKuKVEJ4t8Hdo4qjcTNYhLve7HNTYRu8IqhC+l4sUvDo/SZtsA2yoxo9
RaqxKDQau7bvuA1eRjL0omIs6sslKvY83QbOE2JTI++xSOrPysO8t9tg9kKU
hXUyFvmP7pY8Kt8GhJTPZ+TjsKhli5Z0tXsbSGx9a1aJwCJhbo5TkgvbIKTO
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
QP0PWs7fgA==
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.470967382008807*^9, 3.470967927878271*^9, {3.470969594948535*^9, 
   3.4709696097857103`*^9}, {3.470970909873733*^9, 3.470970918985282*^9}, {
   3.4709709837501383`*^9, 3.47097101291835*^9}, 3.471040137515402*^9, 
   3.475606832056855*^9, 3.5061290587181168`*^9}]
}, Open  ]],

Cell[TextData[{
 "Plotting the function and its Fourier series like we did above is one way \
to understand Fourier series.  Another way is to plot the \"strength\" of \
each sine (or cosine) term as a function of the frequency/wavenumber (k).  \
This is shown in the spiky plot ",
 StyleBox["*below*",
  FontWeight->"Bold"],
 ".  Let's step through how to read a plot like this.  The spike at k=5 has a \
height of about 0.06.  This means that the sin(5 x) term in the Fourier \
series has an amplitude of 0.06 multiplied in front of it.  Similarly, the \
spike at k=3 has a height of about 0.11, which means the sin(3x) term has an \
amplitude of 0.11.  In words, what this ",
 StyleBox["Fourier representation",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " (i.e. this graph of spikes) is telling us is that if we want to assemble a \
sawtooth wave from a series of sines and cosines, we need to add together \
sine and cosine \"ingredients\" in various amounts.  In this case, we need \
0.11 parts of sin(3x), 0.06 parts of sin(5x) and so on.  The fact that the \
graph is a series of spikes means that we don't need any \"in-between\" \
frequencies like sin(1.5x).  The Fourier representation contains all the \
information contained in the original function, because given this \"recipe\" \
I can reconstruct the function by adding together the \"ingredients\" in the \
right amoutns.  Incidentally, the graph below also \"explains\" why we can \
get a pretty decent approximation to our original function by just \
considering the first few terms in the Fourier series.  Notice that the \
amplitude of the function is large for small wavenumbers k and gets smaller \
as we go to larger and larger k.  This means that the very high frequency \
terms (the highest \"k\" terms) in the Fourier series contribute only very \
small quantities to the sum, and so we don't lose too much be ignoring them."
}], "Text",
 CellChangeTimes->{{3.471038860176793*^9, 3.471038972672452*^9}, {
   3.471039097863967*^9, 3.4710391731140833`*^9}, {3.4710392597930737`*^9, 
   3.471039263376918*^9}, {3.471039656226025*^9, 3.471039744122882*^9}, {
   3.4710397986547813`*^9, 3.471039881534417*^9}, {3.47104084449054*^9, 
   3.471040853080806*^9}, {3.471041977009795*^9, 3.471041995359911*^9}, {
   3.4710421669954367`*^9, 3.471042204508627*^9}, {3.47104233126747*^9, 
   3.471042371310631*^9}, {3.47104266169353*^9, 3.471042696291168*^9}, {
   3.471042727432954*^9, 3.47104276533263*^9}, {3.471042795700762*^9, 
   3.471043008735038*^9}, {3.4710430808201017`*^9, 3.471043092118897*^9}, 
   3.471043172637924*^9, {3.471043246829947*^9, 3.471043313205656*^9}, {
   3.475491966464308*^9, 3.475491968646079*^9}}],

Cell["\<\
There's a tendency to think that the squiggly graph of the sawtooth shown \
above as \"the\" function, and the spiky Fourier representation below as some \
silly way of doing things, but both are valid.  We can think of any function \
as some abstract thing that we can choose to represent as a function in \
\"real space x\" (the wiggly function above) or as a function in \"fourier \
space k\" (the spiky function below).  Both are equally valid ways of \
thinking about a function, and which representation is more \"natural\" is \
just a matter of application.  For instance, if I'm trying to describe to you \
what a set of ocean waves looks like, it makes sense for me to use a real \
space representation, where waves are actually \"wavy\".  On the other hand, \
our auditory sensations operate in Fourier space -- when you hear a musical \
chord, what your brain perceives isn't a waveform, but rather a mixture of \
frequencies, i.e. pitches (\"Ah yes...I hear about equal mixtures of 'A', \
'C#' and 'E'\").  \
\>", "Text",
 CellChangeTimes->{
  3.471043111677052*^9, {3.47104318562061*^9, 3.471043232685843*^9}, {
   3.471043325902781*^9, 3.471043336495682*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FourierCoefficient", "[", 
   RowBox[{
    RowBox[{"Wave", "[", 
     RowBox[{"x", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "]"}], ",", " ", "x", ",", " ", "n", ",", 
    RowBox[{"FourierParameters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"Abs", "[", "%", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", "k", "}"}]}]}], "]"}], "//", "Quiet"}]}], "Input",
 CellChangeTimes->{{3.4709717215245447`*^9, 3.4709717499030933`*^9}, {
  3.471040142698277*^9, 3.4710401441651697`*^9}, {3.475606838569274*^9, 
  3.475606855113566*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQEqB25PLNNkyd1iD+ErHbgmfHM+y6ZtUL7CgUCz
K8auHTuhfJkDjZLin1j19kL5EgcenHtU3sx6EMoXgZp3BMoXgOo/CeVzQNVf
hPIZoPI3ofwP+yH8lzC+PSqfwQFVPYcDqnkCDqj2iTigukfCAdW9Mg6o/lFw
QPWvkgNqeKg4oIaXygEGFKCExldA48ug8SXQ+CJofAE0PgcanwGN/2E/Gt8e
lc/ggGYeGl8AjS+CxpdA48ug8RXQ+EpofBV0/mj6IzP9AQCvdrzA
   
   "], {{{}, {}, {}, {}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], LineBox[{21, 1}], LineBox[{22, 2}], 
      LineBox[{23, 3}], LineBox[{24, 4}], LineBox[{25, 5}], LineBox[{26, 6}], 
      LineBox[{27, 7}], LineBox[{28, 8}], LineBox[{29, 9}], LineBox[{30, 10}],
       LineBox[{31, 11}], LineBox[{32, 12}], LineBox[{33, 13}], 
      LineBox[{34, 14}], LineBox[{35, 15}], LineBox[{36, 16}], 
      LineBox[{37, 17}], LineBox[{38, 18}], LineBox[{39, 19}], 
      LineBox[{40, 20}]}}, {{}, 
     {Hue[0.67, 0.6, 0.6], 
      PointBox[{41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 
       56, 57, 58, 59, 60}]}, {}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["k", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.47097175202915*^9, 3.471040146092268*^9, {3.47560684130868*^9, 
   3.4756068564774923`*^9}, 3.506129067069565*^9}]
}, Open  ]],

Cell["\<\
Let's do another example to get some intution for this.  I'd like to compare \
two sawtooth waves and their Fourier representations.  Shown below are two \
sawtooth waves, one with a period of 2 \[Pi] (in blue) and one with a period \
of \[Pi]/2 (in red).\
\>", "Text",
 CellChangeTimes->{{3.471040009309202*^9, 3.4710400246357183`*^9}, {
   3.471040085416575*^9, 3.471040087429983*^9}, {3.471040171771965*^9, 
   3.471040188457161*^9}, {3.471040239829273*^9, 3.471040351647266*^9}, 
   3.471042995161324*^9, 3.471043357807188*^9, {3.471043434231341*^9, 
   3.4710434405089197`*^9}, {3.4710437187038193`*^9, 
   3.4710437666416807`*^9}, {3.471045364016829*^9, 3.471045385477516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Wave", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"2", " ", "\[Pi]"}]}], "]"}], ",", 
     RowBox[{"Wave", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4709720217698803`*^9, 3.470972052077194*^9}, {
   3.470972107204932*^9, 3.4709721304133053`*^9}, 3.471039940848784*^9, {
   3.471043388122999*^9, 3.471043390896179*^9}, {3.471044096280891*^9, 
   3.471044103925022*^9}, {3.471044354341329*^9, 3.471044354853539*^9}, {
   3.471044409533242*^9, 3.471044410912685*^9}, 3.471044611673469*^9, {
   3.471044942620968*^9, 3.4710449447564774`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAfedN8v//M8Aw955BHEjkP+Z7FvXb
/DPAABdRnxlo5D9OEN/3t/kzwOA2A/0WiOQ/IDlw/W/zM8CAdme4EcjkP8KK
kgjg5jPA4PUvLwdI5T8ILtcewM0zwJD0wBzyR+Y/lHRgS4CbM8Dg8eL3x0fo
P/0IKU5cmDPAsBGVVcVn6D9mnfFQOJUzwIgxR7PCh+g/N8aCVvCOM8A4catu
vcfoP9oXpWFggjPAiPBz5bJH6T8gu+l3QGkzwDDvBNOdR+o/qwFzpAA3M8CQ
7Cauc0fsPzhTqgaZMzPA2Co25CFq7D/GpOFoMTAzwBBpRRrQjOw/4EdQLWIp
M8Cg5WOGLNLsPxaOLbbDGzPAqN6gXuVc7T+k32QYXBgzwOgcsJSTf+0/MTGc
evQUM8AoW7/KQaLtP0zUCj8lDjPAsNfdNp7n7T+CGujHhgAzwLjQGg9Xcu4/
EGwfKh/9MsDwDipFBZXuP529Voy3+TLAOE05e7O37j+4YMVQ6PIywLjJV+cP
/e4/RbL8soDvMsAACGcdvh/vP9IDNBUZ7DLASEZ2U2xC7z/tpqLZSeUywMjC
lL/Ih+8/evjZO+LhMsAQAaT1dqrvPwhKEZ563jLAUD+zKyXN7z8rQU1qwNwy
wEAkyme93u8/BR70Cg==
      "]], LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAAeQIZlDjWMsBIJMpnvd7vv7A+t8RD
1DLA6AUfMtDK7789kO4m3NAywKDHD/whqO+/WDNd6wzKMsAgS/GPxWLvv+aE
lE2lxjLA4AziWRdA779z1suvPcMywJjO0iNpHe+/jnk6dG68MsAYUrS3DNju
v8O/F/3PrjLACFl331NN7r8uTNIOk5MywPBm/S7iN+2/BWVHMhldMsDIggnO
/gzrv9JeMVfrWTLAsKAL8Jzs6r+eWBt8vVYywJC+DRI7zOq/NkzvxWFQMsBI
+hFWd4vqv2Yzl1mqQzLAwHEa3u8J6r/IAeeAOyoywMBgK+7gBum/jJ6Gz133
McDAPk0OwwDnvxPYxWyikTHAsPqQTof04r8B3+7JXEcxwAUAAAAAAOC/UsOa
YynKMMBQ3h8/bgnWv3vvPWyQ4y/AQEM6yoZFs79fOFUpemovwJApbx7Rcsi8
uHeaaq9PLsBgV6mi/YDGP06SVSD+mSzAsB7Hg8uq3D/Cssy+OkYswKn/////
/98/R529TkjsKsA4TKXK5OHmP/CN3PwE5irACPe2bsoB5z+afvuqwd8qwNih
yBKwIec/7F85BzvTKsCA9+tae2HnP5Iitb8tuirAyKIy6xHh5z/ep6wwE4gq
wFD5vws/4Og/drKbEt4jKsBoptpMmd7qPyCjusCaHSrAOFHs8H7+6j/Jk9lu
VxcqwBD8/ZRkHus/HHUXy9AKKsCwUSHdL17rP8I3k4PD8SnA+Pxnbcbd6z8O
vYr0qL8pwIBT9Y3z3Ow/uK2pomW5KcBQ/gYy2fzsP2GeyFAisynAKKkY1r4c
7T+0fwatm6YpwMj+Ox6KXO0/WkKCZY6NKcAQqoKuINztP6bHedZzWynAmAAQ
z03b7j+ZMnZDqVQpwNjJfkvk/e4/jJ1ysN5NKcAYk+3HeiDvP3Jza4pJQCnA
kCXLwKdl7z9l3mf3fjkpwNDuOT0+iO8/WElkZLQyKcAQuKi51KrvP0q0YNHp
KynAUIEXNmvN7z/Ka3gqgygpwEAkyme93u8/njqYog==
      "]], 
     LineBox[CompressedData["
1:eJwBMQTO+yFib1JlAgAAAEIAAAACAAAAZu4PfnMbKcBEJMpnvd7vvyL1VRiK
FynA8CKcVNHK778VYFKFvxApwLRZLdg6qO+/CMtO8vQJKcB0kL5bpIXvv/s1
S18qAynAOMdP3w1j77/uoEfMX/wowPj94GJ3QO+/1HZApsruKMB8awNqSvvu
v8fhPBMA6CjAQKKU7bPY7r+6TDmANeEowADZJXEdtu6/oCIyWqDTKMCERkh4
8HDuv2vOIw52uCjAiCGNhpbm7b8CJgd2IYIowJTXFqPi0ey/9ZAD41Z7KMBY
DqgmTK/sv+j7/0+MdCjAGEU5qrWM7L/O0fgp92YowJyyW7GIR+y/mX3q3cxL
KMCgjaC/Lr3rvzDVzUV4FSjArEMq3Hqo6r9ehJQVz6gnwMSvPRUTf+i/zj/2
B3iiJ8CoQuDwyF7ovz/7V/ognCfAjNWCzH4+6L8gchvfco8nwFT7x4Pq/ee/
4l+iqBZ2J8DkRlLywXznv2Y7sDteQyfAAN5mz3B65r9u8sth7d0mwDgMkInO
deS/fmADrgsTJsCwaOL9iWzgv3Wnu+m7/SXACAAAAAAA4L8ALR+/Q4UkwGA8
/W1QBdG/0iEzf3zZIsByxNOSLemxvBwKaKn0QiHAmEkCAuMs0D9fOFUpemof
wPv//////98/azUqBdscH8BIHR1yqcXgP3IFuad2Dx/APK+ftMPn4D961UdK
EgIfwChBIvfdCeE/inVlj0nnHsAIZSd8Ek7hP6q1oBm4sR7AxKwxhnvW4T/p
NRculUYewEA8RppN5+I/ZzYEV09wHcA8W2/C8QjlP24Gk/nqYh3ALO3xBAwr
5T921iGchlUdwBx/dEcmTeU/hnY/4b06HcD4onnMWpHlP6a2emssBR3AuOqD
1sMZ5j/lNvF/CZocwDR6mOqVKuc/YzfeqMPDG8AsmcESOkzpP2aoN1ZGtxvA
+M4y/Qds6T9qGZEDyaobwMQEpOfVi+k/cPtDXs6RG8BgcIa8ccvpP3y/qRPZ
XxvAmEdLZqlK6j+UR3V+7vsawAT21LkYSes/l7jOK3HvGsDUK0ak5mjrP5op
KNnz4hrAoGG3jrSI6z+gC9sz+ckawDzNmWNQyOs/rc9A6QOYGsBwpF4NiEfs
P8ZXDFQZNBrA3FLoYPdF7T/JyGUBnCcawKiIWUvFZe0/zDm/rh4bGsB4vso1
k4XtP9IbcgkkAhrAFCqtCi/F7T/f39e+LtAZwEgBcrRmRO4/4lAxbLHDGcAU
N+OeNGTuP+bBihk0txnA4GxUiQKE7j/soz10OZ4ZwHzYNl6ew+4/+GejKURs
GcC0r/sH1kLvP/vY/NbGXxnAgOVs8qNi7z/+SVaESVMZwEwb3txxgu8/Abuv
McxGGcAcUU/HP6LvPwQsCd9OOhnA6IbAsQ3C7z97qqwACy8ZwEQkyme93u8/
wTgctQ==
      "]], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAta/bp+sUGcBGJMpnvd7vvw5/FefW
FBnAsNfrjoje778R8G6UWQgZwOKheqS6vu+/FGHIQdz7GMAUbAm67J7vvxjS
Ie9e7xjASjaYzx5/778etNRJZNYYwK7KtfqCP++/Kng6/26kGMB48/BQS8Du
v8DdTirjlhjAPp8ijsyd7r9WQ2NVV4kYwARLVMtNe+6/gg6Mqz9uGMCOordF
UDbuv9mk3VcQOBjApFF+OlWs7b+I0YCwscsXwNCvCyRfmOy/5irHYfTyFsAq
bCb3cnDqv6HdU8R5QRXA2ORbnZog5r/SITN/fNkSwP///////9+/54EVPEcY
EsCAvTvc/yfcv7qVKEXoVg3AmPVgnrxsxb8ZLURU+yEJwM46RHGIqqE8MOnZ
9C+dBsDAOq9z0qe5P0S62wn9VgDAKAdagBtk1j8ULURU+yH5vwQAAAAAAOA/
cKmv+BET878OuytJV9vjPzAOboNC4PK/ylk+F7D74z/xciwOc63yv4b4UOUI
HOQ/cjypI9RH8r/+NXaBulzkP3XPok6WfPG/7LDAuR3e5D/z6itJNczvv8ym
VSrk4OU/BoP4oEZy6b+Ikn8LcebnP4dMdbanDOm/RDGS2ckG6D8IFvLLCKfo
vwDQpKciJ+g/Cqnr9srb5794DcpD1GfoPw/P3kxPRea/ZogUfDfp6D8YG8X4
Vxjjv0Z+qez96+k/VmYjodJ82b8CatPNivHrP4pxc4iStdi/zCqk/kAR7D+9
fMNvUu7Xv5brdC/3MOw/JJNjPtJf1r8obRaRY3DsP/K/o9vRQtO/TnBZVDzv
7D8eM0gsohHKv5h239rt7O0/hUno+iGDyL9iN7ALpAzuP+xfiMmh9Ma/LPiA
PFos7j+6jMhmodfDv755Ip7Ga+4/rcyRQkE7u7/kfGVhn+ruP3v50d9AHri/
rj02klUK7z9JJhJ9QAG1v3j+BsMLKu8/y/8kb3+Orb8KgKgkeGnvP2hZpal+
VKe/1EB5VS6J7z8EsyXkfRqhv5wBSobkqO8/QBlMPfrAlb9mwhq3msjvP4fG
+tBYH4q/RiTKZ73e7z/rQa/E
      "]], LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAicb60Fgfij9GJMpnvd7vvy6aY8cU
No8/PvtytkLY77/eGbHuCw+cP3Q6ooWMuO+/UzPYvIZBpD+redFU1pjvv7bZ
V4KHe6o/4bgAJCB5778NwOsjxFqwPxj4L/NpWe+/cWZr6cSUtj+Fdo6R/Rnv
v6I5K0zFsbk/vLW9YEf67r/UDOuuxc68P/L07C+R2u6/nFk1OmOEwT9gc0vO
JJvuvwAAtf9jvsc/OnAIC0wc7r+Z6RQx5EzJP3CvN9qV/O2/MtN0YmTbyj+n
7map39ztv2SmNMVk+M0/FG3FR3Od7b9kJlrFMhnSP+5pgoSaHu2/x8zZijNT
2D+jY/z96CDsv2h42sdbK9k/bYTO9IH+678IJNsEhAPaPzaloOsa3Ou/Snvc
ftSz2z/J5kTZTJfrv8wp33J1FN8/8GmNtLAN679oQ3Kt2+riPzxwHmt4+um/
bKB3lR2s6T/UfEDYB9TnvzotwbJQl/M/BpaEsiaH478ZLURU+yH5P/3/////
/9+/AnYV3GQZAEDiocfW9ADXvwcMUIFi7gZA0ITbZ8Bstr8ZLURU+yEJQKLU
t0kpKJu8g+DWQ3KjDUCQzNUDjPLGP7CbhlB+8hFAuJweFZBn2z/SITN/fNkS
QAIAAAAAAOA/b6JkEORWFUDWxHArI1fmP455mZyOYxVAjO7iP2R35j+uUM4o
OXAVQEQYVVSll+Y/7v43QY6JFUC0azl9J9jmP2xbC3I4vBVAkhICzytZ5z9q
FLLTjCEWQFBgk3I0W+g/Zob/ljXsFkDM+7W5RV/qP4ZdNCPg+BZAhCUozoZ/
6j+mNGmvigUXQD5PmuLHn+o/5eLSx98eF0Cson4LSuDqP2Q/pviJURdAiklH
XU5h6z9i+Exa3rYXQEqX2ABXY+w/gs+B5ojDF0ACwUoVmIPsP6KmtnIz0BdA
uuq8Kdmj7D/hVCCLiOkXQCg+oVJb5Ow/YLHzuzIcGEAI5WmkX2XtP15qmh2H
gRhAxjL7R2hn7j/72QnO8Y0YQIx+K78Gh+4/mEl5flyaGEBSyls2pabuP9Eo
WN8xsxhA3GG8JOLl7j9umMePnL8YQKKt7JuABe8/Cgg3QAfMGEBm+RwTHyXv
P0TnFaHc5BhA8pB9AVxk7z/gVoVRR/EYQLbcrXj6g+8/fcb0AbL9GEB8KN7v
mKPvPxo2ZLIcChlARHQOZzfD7z+1r9un6xQZQEYkyme93u8/TN/Prg==
      "]], 
     LineBox[CompressedData["
1:eJw1lGtMk2ccxTsEYYiizkkvOEvXy1suomAY1svzF5lAxkWGIgiTy0AUWZir
drCibKxMRknFDXTRirMQQaizNiTiKDwC2smlWFAUFaSNyGhp+5YAgujm8MN+
ycnJyUnOx+OVnvt5pgOFQtm5oHcurldSlvjTIJTdldXyjMR2ibojeSHn1KUG
WodJXDbtdfSvzTSoS16viW4lMT/jNDsgnAajyymfqqpIrL1PGZDvpoHnnXu6
FYUkTt/xdbFzGg0S8i/GC1NILGfFjA3l06DHuO1gEJPEy4xudScbaNCkPi7V
XLLh6S9KfIaX0aFs9+u+uzVWXK6bfRrGoMNdl+593sVW7Lc1q0zNowOl5dxz
aaYVH/DcaT0JdMjjCGaiuVb8+MmiawHf0CH1ZR51oNaCW/cWBpQM0CH4t5f7
jfUT+OdY0aZAOQMMTycnXqlM+Jce7xzlFQaojmTI62UmLA8bqeLcYECB86PI
pBwTVm0Nd6T2M4AaqLmq4ZnwIJ9+742zJ0SW/pRbWDWOCYfWDK3QE5qCGVOO
ZX9jrdqpPPGzNVBRGTrvnvUCO66qHCuc/whCY866cNcY8YHgPfzvstdC/9t3
jOBH3cV2ibsXHDzDi9MH9+M94vSgcx0soMx597sNS3G/V2BhwWMWwKnIgM6O
3i05SyZYvfvYoG+4On/5Si9a26A9s9jMgXDXXbfgkxG0+2LTzS47B+w+q7m+
BSOo9Nf6IdksB+qihqQebSPoWG2zqfkfDrhS3mFA02IZy8OJC3nhjT7fcgyo
KzL+Dx6TCw+kMBt1zYBEthd3wuO5IFmZKHvdbkS6DU4zpe1cGF1bqok3P0cO
3FmPmE4uNK7/KrfHbRQF002CD/RcKN++ixXiP4oUDrrvzw9zYeOXq0v8jo6i
vPsVbsq5hf6yIs7x31HEPsZm69bxAPyazddXjCFx04449/M8+F1goS7dNI4C
kvX2lEs8iCRbhEGJ48j8NlmmquWBY82p3pT8cbQvTNQZ28iDnKWBEvXNcSR4
WIcqdAt7hnxyr8CE5qaW+tIoBAwVO2sVm81IdfZc56HFBJQLHjN7kszo4GZe
1p9uBISS9eIZsRkNFoEiiUaAMiF6Q7jGjG6sEFKrAggo8KmUW7dMIJH/oOPH
mQR49rGEwdssaN39DIXwMAH64mld2n4LGhNNottHCJAItIT0hAXtaXUVZ54g
YLz60LPhVgvaGLV1svYsAU0iVcSPyIos9k7Z3AUCcnyKapQpVlRTEe8bUUMA
0xD3dqDQilYN5WaZVQSURMw2EresaCpbMezbRUCC5zZmL9hQ/TJ/8XE9AS59
7uLZVBtKVzdTex8SoCk2DjB/sKH+Vw/icp8TwCYlUmGbDZVeSJvEJgIGq+PH
5EYbCtluky23E1CWQGzXvkcidYlz1/U3BMy1db+khpAo27ciy2ERH5SiC7Eh
6SRi6ZlOce/zIdUnV3m4iERPhFcV1e58WGUA50oFiU57CGD6Qz7crliZ3tpO
ogM29xNCBv//P0H/AfHbFzM=
      "]], LineBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAAymt4KoMoKUBAJMpnvd7vv7gC4Bjm
KClAIE14jcXc779wpmy2Ni8pQHCYpjKcvO+/3s8blQ42KUBQxXf/wZnvv035
ynPmPClAKPJIzOd2778qTCkxlkopQOhL62UzMe+/5PHlq/VlKUBo/y+ZyqXu
v1c9X6G0nClAYGa5//iO7b8+1FGMMgoqQFg0zMxVYeu/DAI3Yi7lKkBA0PFm
Dwbnv7yyzL46RixA7P//////379FbVSVKpMsQFAJaddT8Ny/GLkdb0UkLkBA
BjnTafXJv144VSl6ai9A4zduYf2dy7yScoiRMNcvQADm/MpYTbE/UoZPLZ22
MEAQ5WxGNXvUPwHf7slcRzFAAwAAAAAA4D8qW4RVpH0xQMDLldziKOI/WXG2
EgSBMUCQZ9jVQEviP4iH6M9jhDFAaAMbz55t4j/ls0xKI4sxQAg7oMFasuI/
oAwVP6KYMUBQqqqm0jvjPxW+pSigszFA2Ii/cMJO5D8AIcf7m+kxQPhF6QSi
dOY/Lzf5uPvsMUDQ4Sv+/5bmP15NK3Zb8DFAoH1u91255j+7eY/wGvcxQEC1
8+kZ/uY/dtJX5ZkEMkCIJP7OkYfnP+uD6M6XHzJAGAMTmYGa6D/W5gmik1Uy
QDDAPC1hwOo/xlSJnLlYMkDg/23OcuDqP7bCCJffWzJAkD+fb4QA6z+WngeM
K2IyQPi+AbKnQOs/VVYFdsNuMkCwvcY27sDrP9TFAErzhzJAKLtQQHvB7D/E
M4BEGYsyQOD6geGM4ew/tKH/Pj+OMkCQOrOCngHtP5R9/jOLlDJA8LkVxcFB
7T9TNfwdI6EyQKi42kkIwu0/0qT38VK6MkAotmRTlcLuP8ISd+x4vTJA2PWV
9Kbi7j+ygPbmnsAyQIg1x5W4Au8/klz12+rGMkDotCnY20LvP4LKdNYQyjJA
mPRaee1i7z9yOPTQNs0yQFA0jBr/gu8/YqZzy1zQMkAAdL27EKPvP1EU88WC
0zJAqLPuXCLD7z9AgnLAqNYyQEjzH/4z4+8/DAfA+1XYMkD4nkEcSPTvPwjy
jBI=
      "]], LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAmDymAqPaMkDwnkEcSPTvvyBecbX0
3DJAUI19v6jc778QzPCvGuAyQKBNTB6XvO+/ADpwqkDjMkDwDRt9hZzvv/Cn
76Rm5jJAQM7p23N877/Qg+6ZsuwyQOBOh5lQPO+/wPFtlNjvMkAwD1b4Phzv
v7Bf7Y7+8jJAgM8kVy387r+QO+yDSvkyQBhQwhQKvO6/T/PpbeIFM0BgUf2P
wzvuv85i5UESHzNA4FNzhjY77b/hBKf4lSIzQHACYB1qF+2/9KZorxkmM0D4
sEy0nfPsvxnr6xwhLTNAGA4m4gSs7L9kc/L3LzszQEjI2D3THOy/+oP/rU1X
M0CwPD71b/7qvyalGRqJjzNAgCUJZKnB6L85R9vQDJMzQBDU9frcnei/TOmc
h5CWM0CYguKREHrov3EtIPWXnTNAuN+7v3cy6L+8tSbQpqszQPCZbhtGo+e/
UsYzhsTHM0BYDtTS4oTmv2Vo9TxIyzNA4LzAaRZh5r94Crfzy84zQGhrrQBK
Pea/nU46YdPVM0CIyIYusfXlv+jWQDzi4zNAwII5in9m5b/6eALzZeczQFAx
JiGzQuW/DRvEqenqM0DY3xK45h7lvzJfRxfx8TNA+Dzs5U3X5L9FAQnOdPUz
QIjr2HyBs+S/WKPKhPj4M0AQmsUTtY/kv2pFjDt8/DNAoEiyquhr5L99503y
//8zQDD3nkEcSOS/GGIa1g==
      "]]}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQXfvc99P//8YHGtw4Psvuv7v/WbXY19t/jA8weJSz
Gu+/s99P4P737T+BfM9n4h77b+9XsCz4m/8ZyPc5YlO0/+b+Q12TOB48A/ID
G9qO7b+6n0PvutyBs0D+9g/G9xpO759SkuDdMBvIr9jz4+/HhfZ/OTT9YmYA
+TkuqaEfV9qnzf0YYDEVyDd8lhH2Y4O9+bGmsA99QL563tW133fY3xJfmpjQ
BHQfh324XvURe4XdL8sdMoH8SvUZ72wu2a9mLF7CYG58wGHT7B3nZB/aWwSv
YptpbHwgYfWNCe0rHtofW/Iww9AAKL9ENNPB+JH9A/cA3SRNoP5p/ZKbPB7b
i/XpbjssbXxgQVVz1dTip/ZL7qdIxEgA+cUHgvz+PbU3NJxT9UUEyM/5q8Xe
+cze5wqXvSqf8YEDceW3K+Y9t2+SenG8jcH4wAOnbJuYky/tBXLkteT/Gh04
YL1CRDTklf3cvWE9238aHXhg8vTN2Xuv7HckHA148QnIV4ufa//ltb3rpj+b
Gt4bHWBQmFP6o+6N/SVmE1HJN0YHFCRv+m7kfGv/dtmim55PgXzu4H9K8u/s
q37ctH700OiAA8uEa7dXvrPn8BKcV3UPyP97Zt0Uk/f2U2d7MAjfNjqQ8I2z
3Xf/e/vpt45w8ID4m74lZh54bw8A/LP6gA==
      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAIu1/YqvXMsCAELmg+bXvv7A+t8RD
1DLAoBd8yEAr7789kO4m3NAywIAeP/CHoO6/WDNd6wzKMsCALMU/Fovtv+aE
lE2lxjLAgDOIZ10A7b9z1suvPcMywGA6S4+kdey/jnk6dG68MsBgSNHeMmDr
v8O/F/3PrjLAIGTdfU816b8uTNIOk5MywMCb9buI3+S/BWVHMhldMsBAFkxw
9mfYv9JeMVfrWTLAgAVdgOdk17+eWBt8vVYywID0bZDYYda/NkzvxWFQMsBA
0o+wulvUv2Yzl1mqQzLAAI7T8H5P0L/IAeeAOyoywAAMtuIObsC/jJ6Gz133
McAAKFg2nue/P1iYcPQv9DHAgDYK++z5wT8kkloZAvExwIBY6NoKAMQ/vYUu
Y6bqMcAAnKSaRgzIP+5s1vbu3THAAJIODV8S0D9QOyYegMQxwEAah4zWKtg/
E9jFbKKRMcBAFbzF4i3kP8AroYiEjjHAACasyN+s5D9sf3ykZosxwOA2nMvc
K+U/xiYz3CqFMcBAWHzR1inmP3p1oEuzeDHAIJs83col6D8nyXtnlXUxwOCr
LODHpOg/1BxXg3dyMcCgvBzjxCPpPy7EDbs7bDHAAN786L4h6j/iEnsqxF8x
wOAgvfSyHew/j2ZWRqZcMcCgMa33r5zsPzy6MWKIWTHAYEKd+qwb7T/pDQ1+
alYxwABTjf2pmu0/lmHomUxTMcDAY30ApxnuP0O1w7UuUDHAgHRtA6SY7j/w
CJ/REE0xwECFXQahF+8/nVx67fJJMcDglU0JnpbvPyzt6FHuSDHAIM4WJhjA
7z9VbDZO
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQfe3CF8fTroYHEs6JqUkceL//O7Oh6nZnwwMLPC59
SM9+v39JOI/jTAfDAwwWj95mvXm3/9+/QxWxVoYHGsSYXhS8e7t/k6/Bi6e6
QPWXHe/UfHq9P34hN8sJLcMDDw4F3qwvfr2f5+sz+VXqhgccNiVea/ryan/a
nLnheYqGBw5MaLzQ8e3lfqnXXMe/iQDV+x48MuXX8/1NHU+Xsv8xOKBwwmHt
GqYn+4MOz0rWPGVwwKGy/s8O1Rv7Va48uXf8mMGBAynbjC2Eru//9kQvKu2w
wQGGgLdZ2/9d3T+T7XDA4j1Avlr0za3XL+9/4PnaVna9wYGGpbk5qcLn9+de
sJYQnAKU37Bj/8Ztu/d33L1z5kcskO/sZnlgyhH7qHdqHtOjgOpzbpw6uPuY
vc7/gsOm4UD5aVkxhx+dsD+vwLqrKAAo/7Kv/pjBWXuxFN3lb5yA7jvxOint
2SX7xa9qGx+oA9Xnm6zMabptX/3eNmfCY/0DCfcezbKJfWY/J9H8hcNd/QMO
Pxjnn777zH7PZYOUj9f0DygIKS6Ointu/2+7ckzQKf0DDG7xqyviX9g3NXD6
iGzUP9Cw9vbuLYmv7Bd/YjpxZBXQvOO/9js/emV/JOWPc+kSoHkPJY9cSnpt
z+b53vradKB+0YgzH5Lf2KvvfrG9bSKQr19+of7JG3sP3UfG5t36Bx54TLvC
l/rWvkvwqvaMOv0DC2qu3NFJe2e/uvncco8KoH3TPj/Y/eyd/Zmvx5V/FgLt
2yD01Cv9vf3b9IPzV2YD7Ttl+PLmc0w+AHTMQc4=
      "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAADtq6G1plL8DgG68Sl5fvvy9MtJcK
Xy/AAAKQDggX779Qvq0Tu1gvwCDocAp5lu6/kqKgCxxML8BAtDICW5Xtv7MU
mofMRS/AYJoT/ssU7b/UhpMDfT8vwICA9Pk8lOy/FmuG+90yL8DATLbxHpPr
v5ozbOufGS/AQOU54eKQ6b+7pWVnUBMvwGDLGt1TEOm/3Bdf4wANL8BgsfvY
xI/ovx78UdthAC/AoH290KaO57+ixDfLI+cuwCAWQcBqjOW/qVUDq6e0LsDg
Rkif8ofhv7h3mmqvTy7AQFGtugT+0r8iZHGl2EguwAAqhu9f59G/jVBI4AFC
LsAAA18ku9DQv2Ip9lVUNC7AgGkhHONGzb8L21FB+RguwIAv6MK8kcS/Xj4J
GEPiLcAA6K2DgDuZvwMFeMXWdC3AgClvVCmtzz9u8U4AAG4twMC7XnU57dA/
2N0lOylnLcAA44VA3gPSP6y207B7WS3AgDHU1icx1D9WaC+cID4twEDOcAO7
i9g/qMvmcmoHLcDgA1WucKDgPxK4va2TAC3AgJfoE8Mr4T99pJTovPkswAAr
fHkVt+E/Un1CXg/sLMBAUqNEus3iP/sunkm00CzAoKDx2gP75D9OklUg/pks
wGA9jgeXVek/ejIPSUeTLMAgWRr4Xt7pP6bSyHGQjCzA4HSm6CZn6j/+EjzD
In8swICsvsm2eOs/KrP162t4LMBgyEq6fgHsP1ZTrxS1cSzAIOTWqkaK7D+t
kyJmR2QswMAb74vWm+0/2DPcjpBdLMCgN3t8niTuPwTUlbfZVizAgFMHbWat
7j8wdE/gIlAswEBvk10uNu8/XBQJCWxJLMAAix9O9r7vP801otxbSSzAwF2y
yT/A7z/22UdT
      "]], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAiLTCMbVCLMAgWVTBQbjvv7RUfFr+
OyzAYD3I0Hkv77/g9DWDRzUswKAhPOCxpu6/DJXvq5AuLMDABbDv6R3uvzg1
qdTZJyzAAOoj/yGV7b9k1WL9IiEswCDOlw5aDO2/vBXWTrUTLMCgln8tyvrr
v2uWvPHZ+CvAYCdPa6rX6b/Kl4k3I8MrwOBI7uZqkeW/9jdDYGy8K8AgLWL2
ogjlvyLY/Ii1tSvAQBHWBdt/5L96GHDaR6grwKDZvSRLbuO/KZlWfWyNK8Bg
ao1iK0vhv4iaI8O1VyvAABhZvNcJ2r9Hnb1OSOwqwIA8q1Wz4cG/8I3c/ATm
KsAAHyEpssa/v5p++6rB3yrAAMXrpv3Ju7/sXzkHO9MqwAAQgaKU0LO/kiK1
vy26KsAAOF3NFO6Ov96nrDATiCrAACr/d+EHvD92spsS3iMqwEAz1WbK9NY/
IKO6wJodKsDAiWKH9/PXP8mT2W5XFyrAgODvpyTz2D8cdRfL0AoqwICNCul+
8do/wjeTg8PxKcDA5z9rM+7ePw69ivSovynAAE7VN85z4z+4ramiZbkpwED5
G8hk8+M/YZ7IUCKzKcCgpGJY+3LkP7R/Bq2bpinAIPvveChy5T9aQoJljo0p
wECoCrqCcOc/psd51nNbKcBgAkA8N23rP5kydkOpVCnAYCf7LZH36z+MnXKw
3k0pwGBMth/rgew/cnNriklAKcBAliwDn5btP2XeZ/d+OSnAQLvn9Pgg7j9Y
SWRktDIpwEDgouZSq+4/SrRg0ekrKcBABV7YrDXvPz0fXT4fJSnAQCoZygbA
7z+XoEnpHCUpwOA+ok02wO8/8ZVFAQ==
      "]], LineBox[CompressedData["
1:eJxlj2tI02EUxpeGl0oZuFlo5Zz5d0uNIVqK5qt4Q1ZelmkZbkt0luaSkUtK
U8yMdKRWKEq24YdaDW1YlobxvtYs7xfSZeRsm5epc9OZZmlhb5/7cDj8eB6e
5xz39MucTCsSieSN599mVZxVJB1kohGld6S0bRnS10/vq9jLRKgyjxPlvQyp
fM4tSMa6oI1vlJmhXX/c6po95vBNYY2zGW4FsHmHrZlIux8UHZOYoFkWM8D7
zUDajZuVmh0mOCYOe9xnZqCVZgc502SEH3UhTqR5BiLd4bwaTjfCNyeCSgJ0
mDPqVPkTi1BG90uVfWIgsou7ruv9AswZ8nAUtzMQrdzfJbXBAK0IW7F7KQMl
cM9JKmKm4Xq19XTydQbiB8kaWG/1cH5rO15yBTNlVq7208Oh0Z/MDQED5fUJ
u+kHdbC+aFEzwMZ9uTv/5C9oIGt8MKqAiv0HODp1xDjklj2gDsu9EMmSE9+t
eg6HwA/bgibMz8iBIa1PINhK2aQ9xPwhO1wApJAmcv0mqsLM90Q6RQLQ85rk
zmIvVOLxuq0rSwkEwcpgbgTWaffsv5/pAcLV/vMmDYHCHhW/qEycBFPNvkm1
nwlEs81RT57SgPiLVdFglECkvORfvslTgKXleNeoCKSV1bpd8NWC1cEva/4K
AslEuZm7/PRA/NRwu7CAQCxnV0tc8ByYy4i95ikikLKvuvRq5xxIoSkuDeUQ
iFxsQ5EdN4DAOmEijUegFYPlqAXMg82ydRdVFIFQR0/h/chFkB2W4pALcJ4w
1LGzexF83WrfpgbhPvpL6Uy0EXSKCmeyfAhUUil9FxC7BHyOTKnJBL43jJrE
7VsCjQugt8ONQPy1itlytgnc4Fu37HbC/6aJ7SZOmoFyOObu2B7cXz9zSDxg
BvpQibDRBuerOeEU9jKgtIzECUjY79SV1tr7P/8FeEVYwg==
      "]], 
     LineBox[CompressedData["
1:eJxljn1Mk2cUxZsiDIfboKtzQBzQt69gFKmWAMq2B+RjoFarSOIWQFZRoQhD
zFaijtUo02yUANkYY4pVhAAZ0hLESoDnhrHq+NBidXwqb1dqW9fSBmSdwGCP
f/vHzc3Jufd3TpDkiwNH2SwWS0jm1U5cvzYsbIEGb5WupPW2AxeVfvrOv3M0
FJyS5Phsd+DmxSsOsNMAES/2nOqcwW+Pb1AdMBC/ex03stuOY5Jzy/0naNDJ
m1zVH9txoaa1YPoRDYHx0RML2Ib/rIra+tU94vdnXO/p/RvXpuxq+7mVBsFo
vSDxnhXressqJU00yH+J5DYmWzF7m75wUx0NTMYfrtUDFnzMO03YXUVDucnW
MzRkxluG8tqZr2lwzgpFqXoTxokVHcF7SL+3enOynhrw7K3HVc4Ekj+cItIe
NmA+7Se7gwj/B5MgxMDgS251kbuFNGRGcJwjd6ewGNo1+X7kfr9yjfnhBGa2
j3besvBB/m1XgrtVj1mhATiuhA8srX7KI1WFz74Xm1FSTHTwWcP8u43YtSL5
TysjWn7No2uxFs88bIjeJSValVnub5KiiaItGvE+whseqz7k1oY6+j5Sp/vy
Iab9N8/J0H607eZh8VUO8RV7WZKUQdTy0zkH40X+j4+5zEX30Q3p76FZyxSw
FLK5l58Po0pvUbPUSAEgxV/uLY9RXlpanayFAmW9BtbHPUWWhOKddxooyOQU
dzGpUygrTGlYuEqBHAdN7g9n0Gfs6YDiSgpiNptHuJ8YUFJj7uULMgpU7oUP
ak4YUV+FIlpbQPK6DoqW5o0InWkdf0NKeIWRA+nfTKOIvXPvf59GQeDUkjaw
0oT4L07/WBFL+JqLPQ23zUj55HK4fgcFunzph56xFuR/t0fPDadAQIs6c/ot
iFPD5lRvoMBZwenY/MSKFOf56rEACsRJ88KyY8+RZ16i2N+X9FkeUTscz9EK
+q6s1ovk515paWPb0OmNv4Yyqwg/SL6JW2pD/3DuDwYt8yBwVNL05Vo7Ornk
yD3i4oG8LCF4pNaObCYfr3onD5j4kPqokBmU/UDY/MzKA8Him1SNegYZNanJ
IUYeKNV25eIOB8q4LrPkTPKAla37IL3vdf0/QOan4A==
      "]], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQfat7Zvvqq0oHNjz0SXbc9H7/5aMKaxLOKx14MHu9
q6DR+/1n/i+/IHpS6YBAmJDGw43v9u8r3ibZsEfpQMKp628aNr7dvyj68uqQ
xUD5zUllBza83p+lzXvhb4HSgYKWik779c/3/z7VIBHAo3Sgwc8jvjri/v4v
LBy2rGxA8w/xqkhH3Nv/zq4/cdd/xQMJ5pdf7Aq/u//BprmrVD4rHmBQiCv6
FXZ7/5FZu2x+3gTKfyxurQy9vr8n60vCouWKBxw07MPfLzm3X4YrY+UXJ6D6
MyqMjYVt9nH7zvQo2QD5EaeSDKbPsV9YZFgQYArkqzQqXfi1zF7t9i+zNepA
flcM0wKdLfb6a3qPJPMoHjhg6/Wp/egheye/zfcvXVU4kCDu+Oq34CX7FiaJ
wwznFQ40TEt58Uj9sv3xbTXL9E4A+aIdz07aXrH3kXfL7dqlcGCB8PlH0zOv
2Yd9uPHLcb7CgQP8sbeND96yz5z0T3RjhsIBhRabZ6Y7HtqvcUv+eS8RqN7Z
L1XT+ZH9u1/H7/BEKxwwYE54InPukX1R8sTFGb4KBwKamh8xP3lsX2OiYqhg
BHRPw6l7F/mf2e970SHip61w4IP9ndijs57ZM859+71aReFAwf+3d3aoPrdv
Y92+77oY0H11grfnW7+wl1s7eYbcd/kDG2oiruemv7JfLBobX/VS/oCBTVZY
4qdX9hp1amrXbgPlf1dfDal9bW/ov3Nz7wH5Axeq5l+2nvzGftv2pqqXm+QP
BFhtDNKXe2tvpeDj6LpU/sCDn4cuKq18a+/y8d65P53yBz5UPDvPuf+d/cnI
FVMjauQPFFj88Pvr+d7e71BhzJY8oPx3znMfrmDyAfsOTI8=
      "]], 
     LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA0yo7IxBhH8CASOSyG6Dvv1iTBOpr
Ux/AAInSMygV77/d+82wx0UfwIDJwLQ0iu6/YmSXdyM4H8DwCa81Qf/tv2s1
KgXbHB/A4IqLN1rp7L9yBbmndg8fwBBDgS3xYOy/etVHShICH8Bg+3YjiNjr
v4p1ZY9J5x7A4GtiD7bH6r+qtaAZuLEewPBMOecRpui/6TUXLpVGHsAAD+eW
yWLkv2c2BFdPcB3AICaF7HG4179uBpP56mIdwKCWcNifp9a/dtYhnIZVHcAg
B1zEzZbVv4Z2P+G9Oh3AQOgynCl107+mtnprLAUdwIBUwZfCY86/5Tbxfwma
HMCAufCsQq26v2M33qjDwxvAwJIZLKHDxD9mqDdWRrcbwIDvLNN/wMY/ahmR
A8mqG8BATEB6Xr3IP3D7Q17OkRvAAAZnyBu3zD98v6kT2V8bwMA8WjJLVdI/
lEd1fu77GsAgsKfOxUjaP5e4zitx7xrAoF4xIjVH2z+aKSjZ8+IawAANu3Wk
Rdw/oAvbM/nJGsDgac4cg0LeP63PQOkDmBrAwJF6NSAe4T/GVwxUGTQawHBL
oYPdF+U/ychlAZwnGsCgImYtFZflP8w5v64eGxrA4Pkq10wW5j/SG3IJJAIa
wFCotCq8FOc/39/Xvi7QGcAgBcjRmhHpP+JQMWyxwxnAUNyMe9KQ6T/mwYoZ
NLcZwICzUSUKEOo/7KM9dDmeGcDwYdt4eQ7rP/hnoylEbBnA0L7uH1gL7T/7
2PzWxl8ZwACWs8mPiu0//klWhElTGcAwbXhzxwnuPwG7rzHMRhnAcEQ9Hf+I
7j8ELAnfTjoZwKAbAsc2CO8/B51ijNEtGcDg8sZwbofvP2xIB4s9KBnAwAir
+z/A7z/NYkR1
      "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAxBGBHbkbGcDACKv7P8Dvvw5/FefW
FBnAwF6vOyJ6778R8G6UWQgZwIiH6pHq+u6/FGHIQdz7GMBQsCXosnvuvxjS
Ie9e7xjAKNlgPnv87b8etNRJZNYYwLgq1+oL/uy/Kng6/26kGMDgzcNDLQHr
v8DdTirjlhjA+HyKODJ36r9WQ2NVV4kYwBAsUS037em/gg6Mqz9uGMA4it4W
Qdnov9mk3VcQOBjAkEb56VSx5r+I0YCwscsXwEC/LpB8YeK/5irHYfTyFsBQ
YTO5l4PTv3yQ24xo5RbAgL/AoqFv0r8S9u+33NcWwLAdToyrW9G/PsEYDsW8
FsAAtNG+fmfOv5VXarqVhhbAYKU8C87Hxb9EhA0TNxoWwIAgSpCyIaK/od1T
xHlBFcCAskEqVvbNPzLkMvrUNBXAADQR1nz5zz/E6hEwMCgVwLBa8MBR/tA/
5vfPm+YOFcBA3L9seAHTPyoSTHNT3BTAUN9exMUH1z+yRkQiLXcUwHDlnHNg
FN8/Q00jWIhqFMAgU8Lk+QrgP9RTAo7jXRTAgDO2j8OL4D/2YMD5mUQUwED0
neVWjeE/O3s80QYSFMDAdW2RfZDjP8SvNIDgrBPA0HgM6cqW5z9VthO2O6AT
wDBZAJSUF+g/5rzy65aTE8CQOfQ+XpjoPwjKsFdNehPAWPrblPGZ6T9N5Cwv
ukcTwNh7q0AYnes/3uoLZRU7E8A4XJ/r4R3sP3Dx6ppwLhPAkDyTlque7D+S
/qgGJxUTwFj9euw+oO0/IwWIPIIIE8C43W6XCCHuP7QLZ3Ld+xLAGL5iQtKh
7j9FEkaoOO8SwICeVu2bIu8/1hgl3pPiEsDgfkqYZaPvPz/ZKJHE3xLAmD33
VATA7z8YY1MS
      "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAZWo9bTTTEsCYPfdUBMDvv/gl40lK
yRLAWMDNEQdb77+JLMJ/pbwSwPjf2WY92u6/GjOhtQCwEsCY/+W7c1nuv6s5
gOtboxLAOB/yEKrY7b88QF8ht5YSwNA+/mXgV+2/Xk0djW19EsAQfhYQTVbs
v+9T/MLIcBLAqJ0iZYPV67+AWtv4I2QSwEi9Lrq5VOu/omeZZNpKEsCA/EZk
JlPqv+eBFTxHGBLAAHt3uP9P6L8Kfa/vkwoSwOggD6xyxOe/LnhJo+D8EcDQ
xqaf5Tjnv3ZufQp64RHAqBLWhssh5r8GW+XYrKoRwFiqNFWX8+O/JDS1dRI9
EcBQs+PjXS7fv2LmVK/dYRDAQOGwrXh5y7+G4e5iKlQQwOB4D3xES8m/qtyI
FndGEMCgEG5KEB3Hv/LSvH0QKxDAAEAr56fAwr8Cf0mYhugPwEA9S0GuD7S/
PzHp0VEND8CAkJaxKaetP7qVKEXoVg3A0BQ+w4Ym1T8IW+djATwNwGDZ//GL
ONY/ViCmghohDcDwncEgkUrXP/KqI8BM6wzAICdFfptu2T8pwB47sX8MwIA5
TDmwtt0/mOoUMXqoC8AgL63XbCPjP+av00+TjQvAcBEOb2+s4z80dZJurHIL
wLjzbgZyNeQ/z/8PrN48C8BYuDA1d0flPwYVCydD0QrAiEG0koFr5z91PwEd
DPoJwOhTu02Ws+s/wgTAOyXfCcA4NhzlmDzsPxDKflo+xAnAgBh9fJvF7D+s
VPyXcI4JwBjdPqug1+0/+hm7tolzCcBgv59Co2DuP0jfedWiWAnAsKEA2qXp
7j+WpDj0uz0JwPiDYXGocu8/5Gn3EtUiCcBAZsIIq/vvP+Rp9xLVIgnAQGbC
CKv77z9L8EsP
      "]], LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAMi+2Me4HCcBwt9xfUnvvv4D0dFAH
7QjAKNV7yE/y7r/OuTNvINIIwNzyGjFNae6/G3/yjTm3CMCMELqZSuDtv2hE
saxSnAjAPC5ZAkhX7b+2CXDLa4EIwPBL+GpFzuy/UpTtCJ5LCMBYhzY8QLzr
v6BZrCe3MAjADKXVpD0z67/uHmtG0BUIwMTCdA07quq/iqnogwLgB8As/rLe
NZjpv8G+4/5mdAfA+HQvgSt0578w6dn0L50GwJxiKMYWLOO/dPAtKReEBsDU
8AyPRaziv7j3gV3+agbAEH/xV3Qs4r9BBirGzDgGwIybuunRLOG/UiN6l2nU
BcD4qJkaGlvev3VdGjqjCwXAwIziqAZe1r+60Vp/FnoDwEBR0RV/j7m//tiu
s/1gA8Agw/Vc9ZC1v0LgAujkRwPA4DQapGuSsb/L7qpQsxUDwIAxxmSwKqO/
3Av7IVCxAsAAfyzEOpOZP/9Fm8SJ6AHAQMjzO44swz9EutsJ/VYAwJgcaAFu
kNk/rqqlOcc7AMCA84cyl6XaPxibb2mRIADAcMqnY8C62z/W9waSS9T/v1h4
58US5d0/JXtWEJ36/r8IajPF2xzhP8KB9QxAR/2/yMWyiYBx5T+WYols1BD9
vzyxQiIV/OU/aUMdzGja/L+4nNK6qYbmPxAFRYuRbfy/qHPy69Kb5z9fiJQJ
45P7v4QhMk4lxuk/MmkoaXdd+7/8DMLmuVDqPwZKvMgLJ/u/dPhRf07b6j+u
C+SHNLr6v2DPcbB38Os/gux358iD+r/YugFJDHvsP1XNC0ddTfq/UKaR4aAF
7T/8jjMGhuD5v0R9sRLKGu4/0G/HZRqq+b+4aEGrXqXuP6NQW8Wuc/m/NFTR
Q/Mv7z92Me8kQz35v6w/YdyHuu8/JsxCNAQ7+b9kshLvP8DvP+TSbTI=
      "]], 
     LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAShKDhNcG+b/e1A6L47rvvx7zFuRr
0Pi/aOl+8k4w77/y06pDAJr4v/D97lm6pe6/mZXSAikt+L8AJ88okZDtv2x2
ZmK99ve/hjs/kPwF7b9AV/rBUcD3vxBQr/dne+y/6BgigXpT978ieY/GPmbr
vzaccf/Lefa/QstPZOw76b8KfQVfYEP2v8zfv8tXsei/3V2ZvvQM9r9S9C8z
wybov4QfwX0doPW/Yh0QApoR57/TohD8bsb0v4Rv0J9H5+S/cKmv+BET87/I
E1HbopLgvzAOboNC4PK/1pgGoz8R4L/xciwOc63yv9A7eNW4H9+/cjypI9RH
8r8UUE70Kxrdv3XPok6WfPG/nHj6MRIP2b/z6itJNczvv6jJUq3e+NC/BoP4
oEZy6b8AeG2A9I6Jv4dMdbanDOm/ABDFSGYnaz8IFvLLCKfovwAAaNJTkZM/
Cqnr9srb57/gXYPyEPWpPw/P3kxPRea/4AyRgu8mvT8YG8X4Vxjjv1Dkl8re
v84/VmYjodJ82b8QUJtuVozfP4pxc4iStdi/LquQ+gNF4D+9fMNvUu7Xv1Su
073cw+A/JJNjPtJf1r+gtFlEjsHhP/K/o9vRQtO/NsFlUfG84z8eM0gsohHK
v2TafWu3s+c/hUno+iGDyL+I3cAukDLoP+xfiMmh9Ma/ruAD8mix6D+6jMhm
odfDv/rmiXgar+k/rcyRQkE7u7+Q85WFfarrP3v50d9AHri/tvbYSFYp7D9J
JhJ9QAG1v9z5GwwvqOw/y/8kb3+Orb8oAKKS4KXtP2hZpal+VKe/TgPlVbkk
7j8EsyXkfRqhv3IGKBmSo+4/QBlMPfrAlb+YCWvcaiLvP/CYmWTxmYK/vgyu
n0Oh7z+ycB+lVRt5vwCZTe0QwO8/yqN3qA==
      "]], LineBox[CompressedData["
1:eJxlkn1Qy3EAh3/eDhUlE851jlwuCkWdwn2OFOeGiCMvh9ZW1xvC6c2uyyyc
i0Pemq7z0u7y2sows+8Wk7FE7dJa17Ky3/bbW7S2cd15OX/647nnnv+fOekH
t3JHUxS1+A9/LTk0++72WUX4dW2jI0jpIotucFpYcefhtb/X+x1wkd6ZDU7/
QBE+WU+HxJicJHVpl1y4+g7umZNS0zhOItXvKK8oqYewf/SFsgEHmaS0hb3e
9Rj7+4hWzHWQw7wc6+vLUrC645M9mXZyK34hW93wHK5OT3mo1UZ0AbaH6g9y
aDoaydpsGxGlxSZwBCrwW6PiL+UyhKKe/OIoWkAr50QuOWwh162s6AG2Bs0v
e7N2fKdJTMfR9AzDO4hk1Xf5R2iSUbdMneFrRUrTtNmtx8wkI3yXOmZmO2Ti
icHZxQOkRas/uzS1C+cqv3lvn+wjWYXdLbsX6sELO1oX6DaSCfMMYwVjuiGJ
GLf3c18v2VDSw9c1GrAhbv47nqyHaCOMBcdYRpRuzrlzKq+LZCUWPDAwJsjH
0A1CcRvJrT1eFXrfCmWVyjh1pAorPd7G6BkMyq7tXKG9ehsB7ML2JAEDivdR
WBl9Hw+8hYH5e2x4TPVVnpFI4dxUfEYR4MBgKx08fugVnvEVikdxg7jcZNMl
XWpHQpRKknJ1CBaxI5bb/wWxus4rCs0Qljft+9nGMWFJib04cmQIZ5WfFAkD
JoRrpidOOOBGpP7JuqCv/ZjKze8gC4ZR4MdPe2H+iskBgqdRe4fRHDIYGp5p
hl/j9erq88MICUs3XaDNoEapOcfdw3i2IjmHZ6FhF81yL1J4MJI7+cQUxgo6
MbpLNOgBu6hsdWk2AxOTLPcL86Lm1PdxNMNAv7xAYK7wYk1NZ6XcZoPOWJG1
TebFxfr1qfNz7fgovMlutnthlsqmX7Tb8Ub3llWzxYfTbTW1mQ4HVCW9Pn+B
D92GIG57nhPyue6eIqkPCyzlEaucTjzVTFTRFh9K3W6HON+Ffz//gJbKlAS7
/u/fTq6d2A==
      "]], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAArRc1icNN+T/k8iaJgpDvv6i+Sm0x
gPk/lOa0xBcQ77+kZWBRn7L5P0DaQgCtj+6/nwx2NQ3l+T/szdA7Qg/uv5qz
ixl7F/o/nMFed9eO7b+WWqH96En6P0i17LJsDu2/jKjMxcSu+j+onAgqlw3s
v3hEI1Z8ePs/ZGtAGOwL6r9SfNB26wv9P9gIsPSVCOa/AnYV3GQZAECIhx5b
0wPcv1pgqtK4NABAgHtRD3ft2r+ySj/JDFAAQHBvhMMa19m/Yh9ptrSGAEBg
V+orYqrXv8LIvJAE9ABAOCe2/PBQ07+DG2RFpM4BQLCNmzwdPMW/BMGyruOD
A0BA5wt62B67P1yrR6U3nwNAYBdAqUl4vz+0ldybi7oDQNAjOmzd6ME/ZGoG
iTPxA0DwU26bTkLGP8UTWmODXgRAULTW+TD1zj+GZgEYIzkFQIi6U9t6Ldg/
BwxQgWLuBkCYPRLMn8nkP1gnWsA2CQdA0EvxfENS5T+qQmT/CiQHQAxa0C3n
2uU/Tnl4fbNZB0CEdo6PLuzmP5bmoHkExQdAdK8KU70O6T/oAau42N8HQLS9
6QNhl+k/Oh2196z6B0Dwy8i0BCDqP95TyXVVMAhAaOiGFkwx6z8mwfFxppsI
QFghA9raU+0/eNz7sHq2CECUL+KKftztP8r3BfBO0QhA0D3BOyJl7j8cExAv
I+wIQAxMoOzF7e4/bi4abvcGCUBIWn+daXbvP8BJJK3LIQlAhGheTg3/7z/A
SSStyyEJQIRoXk4N/+8/oogVWg==
      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAEmUu7J88CUBAicIAT3jvv2SAOCt0
VwlAAHvjT6vv7r+2m0JqSHIJQMhsBJ8HZ+6/CLdMqRyNCUCIXiXuY97tv1rS
VujwpwlAUFBGPcBV7b/+CGtmmd0JQNgziNt4ROy/RXaTYupICkDo+gsY6iHq
v5aRnaG+YwpAsOwsZ0aZ6b/orKfgkn4KQHjeTbaiEOm/jOO7Xju0CkAAwo9U
W//nv9RQ5FqMHwtAEIkTkczc5b9kKzVTLvYLQCgXGwqvl+G/g+DWQ3KjDUDg
ZlT45xrSv965S214vA1AcCshVwMc0b86k8CWftUNQBDw7bUeHdC/8EWq6YoH
DkCA8g7nqj7Mv16rfY+jaw5AYBd13YVHxL86diTb1DMPQICDBSnvZKG/+QU5
uRtiEEAADCZcWIPLP6Zy882ebhBAwIKMniGBzT9U363iIXsQQKD58uDqfs8/
sLgiDCiUEECg89+yPr3RP2ZrDF80xhBAMOGsN9G41T/U0N8ETSoRQGC8RkH2
r90/sJuGUH7yEUBwOT0qIM/mP8sThucPABJA2FBL3FVZ5z/mi4V+oQ0SQEBo
WY6L4+c/HHyErMQoEkAQl3Xy9vfoP4hcgggLXxJAsPStus0g6z+j1IGfnGwS
QBAMvGwDq+s/vkyBNi56EkB4I8oeOTXsP/Q8gGRRlRJASFLmgqRJ7T8PtX/7
4qISQLBp9DTa0+0/Ki1/knSwEkAYgQLnD17uP0WlfikGvhJAgJgQmUXo7j9g
HX7Al8sSQOivHkt7cu8/e5V9VynZEkBQxyz9sPzvP3uVfVcp2RJAUMcs/bD8
7z/IoyJJ
      "]], LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAlg197rrmEkBIIcVQGXnvv7GFfIVM
9BJA4Am3nuPu7r/M/Xsc3gETQHjyqOytZO6/53V7s28PE0AQ25o6eNrtvwLu
ekoBHRNAqMOMiEJQ7b843nl4JDgTQNiUcCTXO+y/U1Z5D7ZFE0BwfWJyobHr
v27OeKZHUxNACGZUwGsn67+kvnfUam4TQDg3OFwAE+q/EJ91MLGkE0CY2f+T
KernvysXdcdCshNAMMLx4fNf579Gj3Re1L8TQMiq4y++1ea/fH9zjPfaE0D4
e8fLUsHlv+hfceg9ERRAWB6PA3yY47/AIG2gyn0UQEDGPOacjd6/b6JkEORW
FUCgsvNIzY3Kv455mZyOYxVAQBfRAbyJyL+uUM4oOXAVQMB7rrqqhca/7v43
QY6JFUDARGksiH3Cv2xbC3I4vBVAwK29H4batL9qFLLTjCEWQAAU2KQczaY/
Zob/ljXsFkBg3q/NLfrSP4ZdNCPg+BZAICxBcTb80z+mNGmvigUXQPB50hQ/
/tQ/5eLSx98eF0BgFfVbUALXP2Q/pviJURdAUEw66nIK2z9i+Exa3rYXQChd
YgNcjeE/gs+B5ojDF0AIBCtVYA7iP6KmtnIz0BdA6KrzpmSP4j/hVCCLiOkX
QKD4hEptkeM/YLHzuzIcGEAglKeRfpXlP15qmh2HgRhAGMvsH6Gd6T/72QnO
8Y0YQDD6rfwaHOo/mEl5flyaGEBIKW/ZlJrqP9EoWN8xsxhAcIfxkoiX6z9u
mMePnL8YQIi2sm8CFuw/Cgg3QAfMGECY5XNMfJTsP0TnFaHc5BhAyEP2BXCR
7T/gVoVRR/EYQNhyt+LpD+4/fcb0AbL9GEDwoXi/Y47uPxo2ZLIcChlAENE5
nN0M7z+2pdNihxYZQBgA+3hXi+8/qT1WGLkbGUA40AjHP8DvP6lHUAo=
      "]], 
     LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAhxwykD0oGUAw0AjHP8Dvv/CEssNc
LxlAsKGCzbR377+M9CF0xzsZQKBywfA6+e6/KWSRJDJIGUCQQwAUwXruv8bT
ANWcVBlAcBQ/N0f87b9iQ3CFB2EZQGDlfVrNfe2/nCJP5tx5GUAwh/ug2YDs
vw7hDKiHqxlA4Mr2LfKG6r/0XYgr3Q4aQDBS7Ucjk+a/kM3320cbGkAgIyxr
qRTmvy09Z4yyJxpAAPRqji+W5b9mHEbth0AaQOCV6NQ7meS/2doDrzJyGkCA
2eNhVJ/iv75XfzKI1RpAwMG09wpX3b+JUXY5M5wbQAC+Hb+eD8u/kswqbKyp
G0AAG0fGqerIv5xH354ltxtAwHdwzbTFxr+wPUgEGNIbQIAxw9vKe8K/2Cka
z/wHHECASdHw7c+zvygCvmTGcxxAANIxOcP+rD/GsgWQWUsdQGBT2y2Ax9Q/
0C26wtJYHUAApUaq+tnVP9qobvVLZh1AgPaxJnXs1j/untdaPoEdQMCZiB9q
Edk/FoupJSO3HUAA4DURVFvdP2VjTbvsIh5AUDZI+pP34j9u3gHuZTAeQBDf
fTjRgOM/eFm2IN89HkDgh7N2DgrkP4xPH4bRWB5AcNke84gc5T+0O/FQto4e
QKB89et9Qec/BBSV5n/6HkDwwqLdZ4vrPxLufg4SBx9AIPuSu3ML7D8hyGg2
pBMfQHAzg5l/i+w/Pnw8hsgsH0Dwo2NVl4vtP01WJq5aOR9AMNxTM6ML7j9c
MBDW7EUfQHAURBGvi+4/agr6/X5SH0CwTDTvugvvP3nk4yURXx9A8IQkzcaL
7z/TmzNCN2QfQPDEL/c4wO8/INIrXw==
      "]], LineBox[CompressedData["
1:eJxlj2tIk3EYxVcM0xWk5oVssnevpmkXzdtKl//HSrEwEpemRJniAitKt2kL
Iyy8hJdpXoYKgywM0Q/eNRP7z0uTlGSa15Vlm/d3m9caMqXePvfh4fDjHM7D
4SY+jBLuZTAYx+n7p9RYunV3Cgdm+71MZ5SrWF7RkeYv5UAxy5zOlaziGlG1
YiCLA5GjrEr7LSNujcj/GPeSA4wqpy4riRH3uqUZKAUH1AmeM7ubBjzCiLd/
WseBTI/AP+tiAza2+ghf93HAujPugkasx7sydqGfmgPKzGTh8CaFDyRbtKm+
0fnwx7m9Ygp7OGuY1C+6f6piqE68gpt7YfSwHQEM06QgQ7yE9Z5LqYlhNPvH
JLHFc3jLcSa7PoKAxh1hjvWmDpuZo5VbUQSk9KfVMsU6zPrR1ZMTT8CaoFyv
F2mxe2mRTb2UZtGYpFs0ixPNAU2bdQQoE2pY3XNTeHIoey3rIBeghV/5XNWD
y4IVodEOXMicFPDyAzCOamqtOurMBUb4Kb7N7Hs8LNddVHnS/jFdqLNvM1Yl
hFTuC6N9UHjUu93D7aadkLwnNA+uoisGJZK7SEqLlrmgdJEVyNTT6Jo8fyl+
jQuvcq/vP7mgQbZWb855m+g+isgbMn9FMuPIoppJwu2WllxL9+8op9OLb0uQ
UFx9P6Qn+CdKv0rNlcWQAKdL+EHl88ivd2+g8CYJ3rrfGSxiAW34ORX5J5FA
lN/omq5bQA+cLp2dSCXBets1UKpcRHfm3xY6FpKwpuzgtVHLyDX2g3axlIRZ
EftRVvoK0g6O895VkaB2fdYu2EOhW41MbWwtCcoXl/03HPSI7cLmeTTQHNgg
6anWI025b8F2GwmN+kOtxScMKDojMaCqj4TMyBkfr/NGJFfYWZg+kcAo2bH5
3GdEE1g1LlDT+74cWb8buooctNKaxgn6n12Q2nLgf/4L4bNSlw==
      "]], 
     LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAVgQrdQ3dIkDQqaVQWbfvv5Ym3URq
4yJAYGiGcbs177/XSI8Ux+kiQPAmZ5IdtO6/WI3zs4D2IkAQpCjU4bDtv5iv
pYPd/CJAoGIJ9UMv7b/Y0VdTOgMjQEAh6hWmrey/WRa88vMPI0BgnqtXaqrr
v1qfhDFnKSNAsJgu2/Kj6b+awTYBxC8jQFBXD/xUIum/2+Po0CA2I0DQFfAc
t6Dov1woTXDaQiNA8JKxXnud579dsRWvTVwjQFCNNOIDl+W/YMOmLDSPI0Dg
gTrpFIrhv6DlWPyQlSNAcEAbCncI4b/hBwvM7ZsjQAD/+yrZhuC/Ykxva6eo
I0BA+HrZOgffv2PVN6oawiNA4OyA4Ev62r9m58gnAfUjQADWjO5t4NK/bAvr
Is5aJEAAQyVVkGWlv+t5ugQLYSRAAFBRZ7Pomr9q6InmR2ckQAA4sEiMDIa/
Z8UoqsFzJEAATJphlL6UP2J/ZjG1jCRAAMdfWxIStT9Z8+E/nL4kQEAYqXB2
a8o/RtvYXGoiJUCAwE17KBjdP8VJqD6nKCVAwFN9T08W3j9EuHcg5C4lQCDn
rCN2FN8/QZUW5F07JUDABgbmYYjgPzxPVGtRVCVAUC1ljq+E4j8yw895OIYl
QGB6I99KfeY/sTGfW3WMJUAQRDtJXvzmPzCgbj2ykiVAsA1Ts3F75z8tfQ0B
LJ8lQPCggoeYeeg/KDdLiB+4JUBwx+Ev5nXqP6elGmpcviVAIJH5mfn06j8m
FOpLmcQlQMBaEQQNdOs/JPGIDxPRJUAQ7kDYM3LsP6NfWPFP1yVAsLdYQkfx
7D8izifTjN0lQGCBcKxacO0/H6vGlgbqJUCQFKCAgW7uP1SfuLnK8CVA4Fcs
TFj47j+Kk6rcjvclQFCbuBcvgu8/YZzHYJ36JUDgbgxhdMDvP2npRU4=
      "]], 
     LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAibKvctoAJkDQbgxhdMDvv/R7jiIX
BSZAIN4uUSNq778qcIBF2wsmQLCaooVM4O6/X2RyaJ8SJkBwVxa6dVbuv8pM
Vq4nICZAsND9IshC7b8AQUjR6yYmQFCNcVfxuOy/NTU69K8tJkAASuWLGi/s
v6AdHjo4OyZAUMPM9Gwb67927uXFSFYmQPC1m8YR9Oi/rOLX6AxdJkCQcg/7
Omrov+HWyQvRYyZAQC+DL2Tg579Mv61RWXEmQJCoapi2zOa/IpB13WmMJkAw
mzlqW6Xkv80xBfWKwiZAcIDXDaVW4L8CJvcXT8kmQGB6loScmd+/OBrpOhPQ
JkCA833t7oXev6ICzYCb3SZAYOZMv5Ne3L9405QMrPgmQIDL6mLdD9i/JHUk
JM0uJ0AALE1U4eTOv3u4Q1MPmydAAFAddoyGnD8yXNDwX6EnQADTe++cTaY/
6v9cjrCnJ0AAAemj81euP1pHdslRtCdAgK1hhlA2tz861qg/lM0nQAAEnvd+
pcM/+PMNLBkAKEDgLjwwFt3RP7CXmslpBihAgNTJBmHe0j9oOydnugwoQCB6
V92r39M/2IJAolsZKEBgxXKKQeLVP7cRcxieMihA4Fup5Gzn2T92L9gEI2Uo
QHBEi8zh+OA/LtNkonNrKEBAF9I3h3nhP+Z28T/EcShAEOoYoyz64T9Vvgp7
ZX4oQKCPpnl3++I/NE098aeXKEDg2sEmDf7kP+zwyY74nShAsK0IkrJ+5T+k
lFYsSaQoQICAT/1X/+U/FNxvZ+qwKEAgJt3TogDnP/Nqot0syihAYHH4gDgD
6T+qDi97fdAoQCBEP+zdg+k/YrK7GM7WKEDwFoZXgwTqP9L51FNv4yhAkLwT
Ls4F6z+KnWHxv+koQGCPWplzhus/QkHujhDwKEAwYqEEGQfsP7KIB8qx/ChA
4Acv22MI7T9qLJRnAgMpQLDadUYJie0/ItAgBVMJKUCArbyxrgnuP9pzraKj
DylAUIADHVSK7j+RFzpA9BUpQBBTSoj5Cu8/SLvG3UQcKUDQJZHznovvP6A0
+DXaHilA0CVFwD/A7z9gunxc
      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAkCWQchwlKUDAJUXAP8Dvv7gC4Bjm
KClAgDThNRZz779wpmy2Ni8pQMBhmspw8u6/3s8blQ42KUBAFd/9B2fuv035
ynPmPClAoMgjMZ/b7b8qTCkxlkopQKAvrZfNxOy/5PHlq/VlKUCg/b9kKpfq
v1c9X6G0nClAgJnl/uM75r8+1FGMMgoqQMCiYWauCtu/rP0AawoRKkDACevM
3PPZvxsnsEniFypAgHB0Mwvd2L/4eQ4HkiUqQIA+hwBor9a/sh/LgfFAKkCA
2qyaIVTSvyVrRHewdypAgCTwnSk7w78MAjdiLuUqQAD4xSETPr8/uXcDU+br
KkAAT7LvgsLBP2btz0Oe8ipAAKKBTvzlwz/A2GglDgArQABIIAzvLMg/c6+a
6O0aK0DAya5Dal3QP9pc/m6tUCtAQBXsvk/r2D+H0spfZVcrQMC+U24M/dk/
NEiXUB1eK0BAaLsdyQ7bP44zMDKNaytAALuKfEIy3T9BCmL1bIYrQGCwFJ2a
vOA/qLfFeyy8K0AgVrNajQPlP1UtkmzkwitA4CpnsmuM5T8Co15dnMkrQKD/
GgpKFeY/XI73PgzXK0AgqYK5BifnPw9lKQLs8StAAPxRGIBK6T+82vXyo/gr
QMDQBXBe0+k/aFDC41v/K0BgpbnHPFzqP8I7W8XLDCxAwE4hd/lt6z92Eo2I
qycsQMCh8NVyke0/I4hZeWMuLECAdqQtURruP9D9JWobNSxAQEtYhS+j7j99
c/Ja0zssQAAgDN0NLO8/Kum+S4tCLECg9L807LTvP0ylPKAZQyxA4DHauj/A
7z9Yox2j
      "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAALMBc3VtJLEDAMdq6P8Dvv4TUVy37
TyxA4GHYG1c5778xSiQes1YsQCCNJMR4sO6/3r/wDmtdLEBguHBsmifuv4s1
vf8iZCxAoOO8FLye7b84q4nw2mosQOAOCb3dFe2/kpYi0kp4LECAZaENIQTs
v0VtVJUqkyxAoBLSrqfg6b90krsAb5ksQICuY7f6YOm/pLcibLOfLEBASvW/
TeHovwIC8UI8rCxA4IEY0fPh57/Alo3wTcUsQADxXvM/4+W/OsDGS3H3LECA
z+s32OXhvy4TOQK4Wy1AABkLghHW079dOKBt/GEtQMBQLpO31tK/jF0H2UBo
LUBAiFGkXdfRv+un1a/JdC1AAO8vjVOxz7+oPHJd240tQACsSRaEtse/I2ar
uP6/LUAAlvShlAOvvxi5HW9FJC5AAOcbs1gqyD/+Y6cbESsuQIBepxYaVMo/
5A4xyNwxLkAA1jJ6233MP7BkRCF0Py5AwOKkIK9o0D9HEGvTolouQMDRu+cx
vNQ/dme4NwCRLkAAsOl1N2PdP1wSQuTLly5AwGuvJxh43j9CvcuQl54uQIAn
ddn4jN8/DhPf6S6sLkCgT4AeXdvgP6a+BZxdxy5AQMcLgh4F4z/VFVMAu/0u
QGC2IkmhWOc/usDcrIYEL0BAlAWiEePnP6BrZllSCy9AIHLo+oFt6D9swXmy
6RgvQOAtrqxiguk/BG2gZBg0L0CApTkQJKzrP+oXKhHkOi9AYIMcaZQ27D/Q
wrO9r0EvQGBh/8EEwew/nBjHFkdPL0AgHcVz5dXtP4LDUMMSVi9AAPunzFVg
7j9obtpv3lwvQODYiiXG6u4/ThlkHKpjL0Dgtm1+NnXvP5gi2k5ZZy9AIDTO
JUXA7z9OWjf9
      "]], LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAGm93dUFxL0BgjczP6HXvvwAaASIN
eC9AgK/pdnjr7r/mxIrO2H4vQIDRBh4IYe6/zG8Ue6SFL0Cg8yPFl9btv7Ia
nidwjC9AwBVBbCdM7b+YxSfUO5MvQOA3XhO3wey/Yxs7LdOgL0AgfJhh1qzr
v0jGxNmepy9AQJ61CGYi678ucU6Gaq4vQGDA0q/1l+q/+sZh3wG8L0CgBA3+
FIPpv5JyiJEw1y9AAI2BmlNZ57/6zKy4iN0vQKAf5KEU2Oa/YifR3+DjL0BA
skap1VbmvzPcGS6R8C9AgNcLuFdU5b/qolXl+AQwQCAiltVbT+O/jAzngVke
MEBAblUhyIrev87fCbsaUTBAgIVPG9LFzL8CDZzORlQwQADQ2TjWwMq/Njou
4nJXMECAGmRW2rvIv56UUgnLXTBAALB4keKxxL9vSZtXe2owQAC0Qw/mO7m/
ELMs9NuDMEAAjF5gYE+cP1KGTy2dtjBAQJSzGdXs0T+mWfBJubkwQMB/3yA+
6tI/+SyRZtW8MEDAagsop+fTP6DT0p8NwzBAAEFjNnni1T/tIFYSfs8wQIDt
ElMd2Nk/iLtc917oMEBgIznGsuHgP9yO/RN76zBAABnPSWdg4T8vYp4wl+4w
QIAOZc0b3+E/1gjgac/0MEDA+ZDUhNziPyNWY9w/ATFAANDo4lbX5D++8GnB
IBoxQIB8mP/6zOg/EsQK3jwdMUBAci6Dr0vpP2WXq/pYIDFAwGfEBmTK6T8M
Pu0zkSYxQABT8A3Nx+o/XxGOUK0pMUCASIaRgUbrP7LkLm3JLDFAAD4cFTbF
6z9Zi3CmATMxQCApSByfwuw/rF4Rwx02MUCgHt6fU0HtPwAyst85OTFAYBR0
IwjA7T9TBVP8VTwxQOAJCqe8Pu4/ptjzGHI/MUBg/58qcb3uP/qrlDWOQjFA
APU1riU87z9NfzVSqkUxQKDqyzHauu8/Xlv4fc1FMUBggAcwc8DvP6eNXqU=

      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAApGLlFexIMUAggAcwc8Dvv/Qld4vi
SzFAQCoIx7xH779I+Reo/k4xQKA0ckMIye6/m8y4xBpSMUAAP9y/U0ruv0Jz
+v1SWDFA4FOwuOpM7b+PwH1ww2QxQKB9WKoYUuu/KluEVaR9MUAA0aiNdFzn
v1lxthIEgTFAwGGeqPzS5r+Ih+jPY4QxQGDyk8OESea/5bNMSiOLMUDgE3/5
lDblv6AMFT+imDFAwFZVZbUQ478VvqUooLMxQEC5A3rsid2/ACHH+5vpMUCA
oGux37XIvy83+bj77DFAAONBHQCQxr9eTSt2W/AxQAAmGIkgasS/u3mP8Br3
MUAArMRgYR7Av3bSV+WZBDJAAN52QIwbrr/rg+jOlx8yQABjYCIzULM/1uYJ
opNVMkCAAeZpCQPWP8ZUiZy5WDJAAP9vc5YD1z+2wgiX31syQID8+XwjBNg/
lp4HjCtiMkDA9w2QPQXaP1VWBXbDbjJAgO01tnEH3j/UxQBK84cyQKDsQgHt
BeM/xDOARBmLMkCA6weGM4bjP7Sh/z4/jjJAQOrMCnoG5D+Uff4zi5QyQMDn
VhQHB+U/UzX8HSOhMkCg4monIQjnP9Kk9/FSujJAoNiSTVUK6z/CEnfseL0y
QGDXV9Kbius/soD25p7AMkAg1hxX4grsP5Jc9dvqxjJAoNOmYG8L7T+CynTW
EMoyQGDSa+W1i+0/cjj00DbNMkBA0TBq/AvuP2Kmc8tc0DJAAND17kKM7j9R
FPPFgtMyQKDOunOJDO8/QIJywKjWMkAgzX/4z4zvPwwHwPtV2DJA4HsGcSDR
7z8isyj4
      "]], LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAmDymAqPaMkDAewZxINHvvyBecbX0
3DJAQDX2/aJy778QzPCvGuAyQIA2MXlc8u6/ADpwqkDjMkDAN2z0FXLuv/Cn
76Rm5jJAADmnb8/x7b/Qg+6ZsuwyQIA7HWZC8ey/wPFtlNjvMkDAPFjh+3Ds
v7Bf7Y7+8jJAAD6TXLXw67+QO+yDSvkyQGBACVMo8Oq/T/PpbeIFM0CARfU/
Du/ov85i5UESHzNAgE/NGdrs5L/hBKf4lSIzQMAJgHWoXeS/9KZorxkmM0Dg
wzLRds7jvxnr6xwhLTNAYDiYiBOw4r9kc/L3LzszQCAhY/dMc+C/+oP/rU1X
M0CA5fGpf/PXvyalGRqJjzNAALAkgSw1uL85R9vQDJMzQACCul6fu7O/TOmc
h5CWM0AApqB4JISuv3EtIPWXnTNAANzv3d87mb+8tSbQpqszQACEWSR5Lqc/
UsYzhsTHM0CAGr/S0rHHP2Vo9TxIyzNAADL0Y5nuyT94Crfzy84zQIBJKfVf
K8w/nU46YdPVM0DAu8mLdlLQP+jWQDzi4zNAAOozrgPM1D/6eALzZeczQIB1
zvZm6tU/DRvEqenqM0BAAWk/ygjXPzJfRxfx8TNAQBie0JBF2T9FAQnOdPUz
QMCjOBn0Y9o/WKPKhPj4M0CAL9NhV4LbP2pFjDt8/DNAALttqrqg3D99503y
//8zQIBGCPMdv90/pwQOPw==
      "]]}, {}}, {{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-20, 20}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.470972052764222*^9, {3.470972110991791*^9, 3.470972131342209*^9}, 
   3.471039942172957*^9, 3.4710433918728027`*^9, {3.471044097198851*^9, 
   3.471044104510466*^9}, 3.471044360293852*^9, 3.471044411380115*^9, 
   3.4710446129976788`*^9, 3.471044945640677*^9, 3.5061290701352177`*^9}]
}, Open  ]],

Cell["\<\
We can once again approximate the waves using Fourier series, and below we've \
plotted things in real space.\
\>", "Text",
 CellChangeTimes->{{3.471043776289856*^9, 3.471043819875207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Wave", "[", 
     RowBox[{"x", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "]"}], ",", " ", 
    RowBox[{"ApproximateWave", "[", 
     RowBox[{"x", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "]"}], ",", " ", 
    RowBox[{"Wave", "[", 
     RowBox[{"x", ",", " ", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
    RowBox[{"ApproximateWave", "[", 
     RowBox[{"x", ",", " ", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "20"}], ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.470972148844575*^9, 3.470972227709622*^9}, {
  3.4710399695074387`*^9, 3.471039974335327*^9}, {3.471043406663168*^9, 
  3.4710434091801977`*^9}, {3.471044347736864*^9, 3.471044348525812*^9}, {
  3.471044417333323*^9, 3.471044439644622*^9}, {3.471044476363772*^9, 
  3.4710444879037523`*^9}, {3.4710445805337*^9, 3.471044680700992*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAfedN8v//M8Aw955BHEjkP+Z7FvXb
/DPAABdRnxlo5D9OEN/3t/kzwOA2A/0WiOQ/IDlw/W/zM8CAdme4EcjkP8KK
kgjg5jPA4PUvLwdI5T8ILtcewM0zwJD0wBzyR+Y/lHRgS4CbM8Dg8eL3x0fo
P/0IKU5cmDPAsBGVVcVn6D9mnfFQOJUzwIgxR7PCh+g/N8aCVvCOM8A4catu
vcfoP9oXpWFggjPAiPBz5bJH6T8gu+l3QGkzwDDvBNOdR+o/qwFzpAA3M8CQ
7Cauc0fsPzhTqgaZMzPA2Co25CFq7D/GpOFoMTAzwBBpRRrQjOw/4EdQLWIp
M8Cg5WOGLNLsPxaOLbbDGzPAqN6gXuVc7T+k32QYXBgzwOgcsJSTf+0/MTGc
evQUM8AoW7/KQaLtP0zUCj8lDjPAsNfdNp7n7T+CGujHhgAzwLjQGg9Xcu4/
EGwfKh/9MsDwDipFBZXuP529Voy3+TLAOE05e7O37j+4YMVQ6PIywLjJV+cP
/e4/RbL8soDvMsAACGcdvh/vP9IDNBUZ7DLASEZ2U2xC7z/tpqLZSeUywMjC
lL/Ih+8/evjZO+LhMsAQAaT1dqrvPwhKEZ563jLAUD+zKyXN7z8rQU1qwNwy
wEAkyme93u8/BR70Cg==
      "]], LineBox[CompressedData["
1:eJwBEQPu/CFib1JlAgAAADAAAAACAAAAeQIZlDjWMsBIJMpnvd7vv7A+t8RD
1DLA6AUfMtDK7789kO4m3NAywKDHD/whqO+/WDNd6wzKMsAgS/GPxWLvv+aE
lE2lxjLA4AziWRdA779z1suvPcMywJjO0iNpHe+/jnk6dG68MsAYUrS3DNju
v8O/F/3PrjLACFl331NN7r8uTNIOk5MywPBm/S7iN+2/BWVHMhldMsDIggnO
/gzrv9JeMVfrWTLAsKAL8Jzs6r+eWBt8vVYywJC+DRI7zOq/NkzvxWFQMsBI
+hFWd4vqv2Yzl1mqQzLAwHEa3u8J6r/IAeeAOyoywMBgK+7gBum/jJ6Gz133
McDAPk0OwwDnvxPYxWyikTHAsPqQTof04r8B3+7JXEcxwAUAAAAAAOC/UsOa
YynKMMBQ3h8/bgnWv3vvPWyQ4y/AQEM6yoZFs79fOFUpemovwJApbx7Rcsi8
uHeaaq9PLsBgV6mi/YDGP06SVSD+mSzAsB7Hg8uq3D/Cssy+OkYswKn/////
/98/R529TkjsKsA4TKXK5OHmP/CN3PwE5irACPe2bsoB5z+afvuqwd8qwNih
yBKwIec/7F85BzvTKsCA9+tae2HnP5Iitb8tuirAyKIy6xHh5z/ep6wwE4gq
wFD5vws/4Og/drKbEt4jKsBoptpMmd7qPyCjusCaHSrAOFHs8H7+6j/Jk9lu
VxcqwBD8/ZRkHus/HHUXy9AKKsCwUSHdL17rP8I3k4PD8SnA+Pxnbcbd6z8O
vYr0qL8pwIBT9Y3z3Ow/uK2pomW5KcBQ/gYy2fzsP2GeyFAisynAKKkY1r4c
7T+0fwatm6YpwMj+Ox6KXO0/WkKCZY6NKcAQqoKuINztP6bHedZzWynAmAAQ
z03b7j+ZMnZDqVQpwNjJfkvk/e4/jJ1ysN5NKcAYk+3HeiDvP3Jza4pJQCnA
kCXLwKdl7z9l3mf3fjkpwNDuOT0+iO8/WElkZLQyKcAQuKi51KrvP0q0YNHp
KynAUIEXNmvN7z/Ka3gqgygpwEAkyme93u8/njqYog==
      "]], 
     LineBox[CompressedData["
1:eJwBMQTO+yFib1JlAgAAAEIAAAACAAAAZu4PfnMbKcBEJMpnvd7vvyL1VRiK
FynA8CKcVNHK778VYFKFvxApwLRZLdg6qO+/CMtO8vQJKcB0kL5bpIXvv/s1
S18qAynAOMdP3w1j77/uoEfMX/wowPj94GJ3QO+/1HZApsruKMB8awNqSvvu
v8fhPBMA6CjAQKKU7bPY7r+6TDmANeEowADZJXEdtu6/oCIyWqDTKMCERkh4
8HDuv2vOIw52uCjAiCGNhpbm7b8CJgd2IYIowJTXFqPi0ey/9ZAD41Z7KMBY
DqgmTK/sv+j7/0+MdCjAGEU5qrWM7L/O0fgp92YowJyyW7GIR+y/mX3q3cxL
KMCgjaC/Lr3rvzDVzUV4FSjArEMq3Hqo6r9ehJQVz6gnwMSvPRUTf+i/zj/2
B3iiJ8CoQuDwyF7ovz/7V/ognCfAjNWCzH4+6L8gchvfco8nwFT7x4Pq/ee/
4l+iqBZ2J8DkRlLywXznv2Y7sDteQyfAAN5mz3B65r9u8sth7d0mwDgMkInO
deS/fmADrgsTJsCwaOL9iWzgv3Wnu+m7/SXACAAAAAAA4L8ALR+/Q4UkwGA8
/W1QBdG/0iEzf3zZIsByxNOSLemxvBwKaKn0QiHAmEkCAuMs0D9fOFUpemof
wPv//////98/azUqBdscH8BIHR1yqcXgP3IFuad2Dx/APK+ftMPn4D961UdK
EgIfwChBIvfdCeE/inVlj0nnHsAIZSd8Ek7hP6q1oBm4sR7AxKwxhnvW4T/p
NRculUYewEA8RppN5+I/ZzYEV09wHcA8W2/C8QjlP24Gk/nqYh3ALO3xBAwr
5T921iGchlUdwBx/dEcmTeU/hnY/4b06HcD4onnMWpHlP6a2emssBR3AuOqD
1sMZ5j/lNvF/CZocwDR6mOqVKuc/YzfeqMPDG8AsmcESOkzpP2aoN1ZGtxvA
+M4y/Qds6T9qGZEDyaobwMQEpOfVi+k/cPtDXs6RG8BgcIa8ccvpP3y/qRPZ
XxvAmEdLZqlK6j+UR3V+7vsawAT21LkYSes/l7jOK3HvGsDUK0ak5mjrP5op
KNnz4hrAoGG3jrSI6z+gC9sz+ckawDzNmWNQyOs/rc9A6QOYGsBwpF4NiEfs
P8ZXDFQZNBrA3FLoYPdF7T/JyGUBnCcawKiIWUvFZe0/zDm/rh4bGsB4vso1
k4XtP9IbcgkkAhrAFCqtCi/F7T/f39e+LtAZwEgBcrRmRO4/4lAxbLHDGcAU
N+OeNGTuP+bBihk0txnA4GxUiQKE7j/soz10OZ4ZwHzYNl6ew+4/+GejKURs
GcC0r/sH1kLvP/vY/NbGXxnAgOVs8qNi7z/+SVaESVMZwEwb3txxgu8/Abuv
McxGGcAcUU/HP6LvPwQsCd9OOhnA6IbAsQ3C7z97qqwACy8ZwEQkyme93u8/
wTgctQ==
      "]], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAta/bp+sUGcBGJMpnvd7vvw5/FefW
FBnAsNfrjoje778R8G6UWQgZwOKheqS6vu+/FGHIQdz7GMAUbAm67J7vvxjS
Ie9e7xjASjaYzx5/778etNRJZNYYwK7KtfqCP++/Kng6/26kGMB48/BQS8Du
v8DdTirjlhjAPp8ijsyd7r9WQ2NVV4kYwARLVMtNe+6/gg6Mqz9uGMCOordF
UDbuv9mk3VcQOBjApFF+OlWs7b+I0YCwscsXwNCvCyRfmOy/5irHYfTyFsAq
bCb3cnDqv6HdU8R5QRXA2ORbnZog5r/SITN/fNkSwP///////9+/54EVPEcY
EsCAvTvc/yfcv7qVKEXoVg3AmPVgnrxsxb8ZLURU+yEJwM46RHGIqqE8MOnZ
9C+dBsDAOq9z0qe5P0S62wn9VgDAKAdagBtk1j8ULURU+yH5vwQAAAAAAOA/
cKmv+BET878OuytJV9vjPzAOboNC4PK/ylk+F7D74z/xciwOc63yv4b4UOUI
HOQ/cjypI9RH8r/+NXaBulzkP3XPok6WfPG/7LDAuR3e5D/z6itJNczvv8ym
VSrk4OU/BoP4oEZy6b+Ikn8LcebnP4dMdbanDOm/RDGS2ckG6D8IFvLLCKfo
vwDQpKciJ+g/Cqnr9srb5794DcpD1GfoPw/P3kxPRea/ZogUfDfp6D8YG8X4
Vxjjv0Z+qez96+k/VmYjodJ82b8CatPNivHrP4pxc4iStdi/zCqk/kAR7D+9
fMNvUu7Xv5brdC/3MOw/JJNjPtJf1r8obRaRY3DsP/K/o9vRQtO/TnBZVDzv
7D8eM0gsohHKv5h239rt7O0/hUno+iGDyL9iN7ALpAzuP+xfiMmh9Ma/LPiA
PFos7j+6jMhmodfDv755Ip7Ga+4/rcyRQkE7u7/kfGVhn+ruP3v50d9AHri/
rj02klUK7z9JJhJ9QAG1v3j+BsMLKu8/y/8kb3+Orb8KgKgkeGnvP2hZpal+
VKe/1EB5VS6J7z8EsyXkfRqhv5wBSobkqO8/QBlMPfrAlb9mwhq3msjvP4fG
+tBYH4q/RiTKZ73e7z/rQa/E
      "]], LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAicb60Fgfij9GJMpnvd7vvy6aY8cU
No8/PvtytkLY77/eGbHuCw+cP3Q6ooWMuO+/UzPYvIZBpD+redFU1pjvv7bZ
V4KHe6o/4bgAJCB5778NwOsjxFqwPxj4L/NpWe+/cWZr6cSUtj+Fdo6R/Rnv
v6I5K0zFsbk/vLW9YEf67r/UDOuuxc68P/L07C+R2u6/nFk1OmOEwT9gc0vO
JJvuvwAAtf9jvsc/OnAIC0wc7r+Z6RQx5EzJP3CvN9qV/O2/MtN0YmTbyj+n
7map39ztv2SmNMVk+M0/FG3FR3Od7b9kJlrFMhnSP+5pgoSaHu2/x8zZijNT
2D+jY/z96CDsv2h42sdbK9k/bYTO9IH+678IJNsEhAPaPzaloOsa3Ou/Snvc
ftSz2z/J5kTZTJfrv8wp33J1FN8/8GmNtLAN679oQ3Kt2+riPzxwHmt4+um/
bKB3lR2s6T/UfEDYB9TnvzotwbJQl/M/BpaEsiaH478ZLURU+yH5P/3/////
/9+/AnYV3GQZAEDiocfW9ADXvwcMUIFi7gZA0ITbZ8Bstr8ZLURU+yEJQKLU
t0kpKJu8g+DWQ3KjDUCQzNUDjPLGP7CbhlB+8hFAuJweFZBn2z/SITN/fNkS
QAIAAAAAAOA/b6JkEORWFUDWxHArI1fmP455mZyOYxVAjO7iP2R35j+uUM4o
OXAVQEQYVVSll+Y/7v43QY6JFUC0azl9J9jmP2xbC3I4vBVAkhICzytZ5z9q
FLLTjCEWQFBgk3I0W+g/Zob/ljXsFkDM+7W5RV/qP4ZdNCPg+BZAhCUozoZ/
6j+mNGmvigUXQD5PmuLHn+o/5eLSx98eF0Cson4LSuDqP2Q/pviJURdAiklH
XU5h6z9i+Exa3rYXQEqX2ABXY+w/gs+B5ojDF0ACwUoVmIPsP6KmtnIz0BdA
uuq8Kdmj7D/hVCCLiOkXQCg+oVJb5Ow/YLHzuzIcGEAI5WmkX2XtP15qmh2H
gRhAxjL7R2hn7j/72QnO8Y0YQIx+K78Gh+4/mEl5flyaGEBSyls2pabuP9Eo
WN8xsxhA3GG8JOLl7j9umMePnL8YQKKt7JuABe8/Cgg3QAfMGEBm+RwTHyXv
P0TnFaHc5BhA8pB9AVxk7z/gVoVRR/EYQLbcrXj6g+8/fcb0AbL9GEB8KN7v
mKPvPxo2ZLIcChlARHQOZzfD7z+1r9un6xQZQEYkyme93u8/TN/Prg==
      "]], 
     LineBox[CompressedData["
1:eJw1lGtMk2ccxTsEYYiizkkvOEvXy1suomAY1svzF5lAxkWGIgiTy0AUWZir
drCibKxMRknFDXTRirMQQaizNiTiKDwC2smlWFAUFaSNyGhp+5YAgujm8MN+
ycnJyUnOx+OVnvt5pgOFQtm5oHcurldSlvjTIJTdldXyjMR2ibojeSHn1KUG
WodJXDbtdfSvzTSoS16viW4lMT/jNDsgnAajyymfqqpIrL1PGZDvpoHnnXu6
FYUkTt/xdbFzGg0S8i/GC1NILGfFjA3l06DHuO1gEJPEy4xudScbaNCkPi7V
XLLh6S9KfIaX0aFs9+u+uzVWXK6bfRrGoMNdl+593sVW7Lc1q0zNowOl5dxz
aaYVH/DcaT0JdMjjCGaiuVb8+MmiawHf0CH1ZR51oNaCW/cWBpQM0CH4t5f7
jfUT+OdY0aZAOQMMTycnXqlM+Jce7xzlFQaojmTI62UmLA8bqeLcYECB86PI
pBwTVm0Nd6T2M4AaqLmq4ZnwIJ9+742zJ0SW/pRbWDWOCYfWDK3QE5qCGVOO
ZX9jrdqpPPGzNVBRGTrvnvUCO66qHCuc/whCY866cNcY8YHgPfzvstdC/9t3
jOBH3cV2ibsXHDzDi9MH9+M94vSgcx0soMx597sNS3G/V2BhwWMWwKnIgM6O
3i05SyZYvfvYoG+4On/5Si9a26A9s9jMgXDXXbfgkxG0+2LTzS47B+w+q7m+
BSOo9Nf6IdksB+qihqQebSPoWG2zqfkfDrhS3mFA02IZy8OJC3nhjT7fcgyo
KzL+Dx6TCw+kMBt1zYBEthd3wuO5IFmZKHvdbkS6DU4zpe1cGF1bqok3P0cO
3FmPmE4uNK7/KrfHbRQF002CD/RcKN++ixXiP4oUDrrvzw9zYeOXq0v8jo6i
vPsVbsq5hf6yIs7x31HEPsZm69bxAPyazddXjCFx04449/M8+F1goS7dNI4C
kvX2lEs8iCRbhEGJ48j8NlmmquWBY82p3pT8cbQvTNQZ28iDnKWBEvXNcSR4
WIcqdAt7hnxyr8CE5qaW+tIoBAwVO2sVm81IdfZc56HFBJQLHjN7kszo4GZe
1p9uBISS9eIZsRkNFoEiiUaAMiF6Q7jGjG6sEFKrAggo8KmUW7dMIJH/oOPH
mQR49rGEwdssaN39DIXwMAH64mld2n4LGhNNottHCJAItIT0hAXtaXUVZ54g
YLz60LPhVgvaGLV1svYsAU0iVcSPyIos9k7Z3AUCcnyKapQpVlRTEe8bUUMA
0xD3dqDQilYN5WaZVQSURMw2EresaCpbMezbRUCC5zZmL9hQ/TJ/8XE9AS59
7uLZVBtKVzdTex8SoCk2DjB/sKH+Vw/icp8TwCYlUmGbDZVeSJvEJgIGq+PH
5EYbCtluky23E1CWQGzXvkcidYlz1/U3BMy1db+khpAo27ciy2ERH5SiC7Eh
6SRi6ZlOce/zIdUnV3m4iERPhFcV1e58WGUA50oFiU57CGD6Qz7crliZ3tpO
ogM29xNCBv//P0H/AfHbFzM=
      "]], LineBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAAymt4KoMoKUBAJMpnvd7vv7gC4Bjm
KClAIE14jcXc779wpmy2Ni8pQHCYpjKcvO+/3s8blQ42KUBQxXf/wZnvv035
ynPmPClAKPJIzOd2778qTCkxlkopQOhL62UzMe+/5PHlq/VlKUBo/y+ZyqXu
v1c9X6G0nClAYGa5//iO7b8+1FGMMgoqQFg0zMxVYeu/DAI3Yi7lKkBA0PFm
Dwbnv7yyzL46RixA7P//////379FbVSVKpMsQFAJaddT8Ny/GLkdb0UkLkBA
BjnTafXJv144VSl6ai9A4zduYf2dy7yScoiRMNcvQADm/MpYTbE/UoZPLZ22
MEAQ5WxGNXvUPwHf7slcRzFAAwAAAAAA4D8qW4RVpH0xQMDLldziKOI/WXG2
EgSBMUCQZ9jVQEviP4iH6M9jhDFAaAMbz55t4j/ls0xKI4sxQAg7oMFasuI/
oAwVP6KYMUBQqqqm0jvjPxW+pSigszFA2Ii/cMJO5D8AIcf7m+kxQPhF6QSi
dOY/Lzf5uPvsMUDQ4Sv+/5bmP15NK3Zb8DFAoH1u91255j+7eY/wGvcxQEC1
8+kZ/uY/dtJX5ZkEMkCIJP7OkYfnP+uD6M6XHzJAGAMTmYGa6D/W5gmik1Uy
QDDAPC1hwOo/xlSJnLlYMkDg/23OcuDqP7bCCJffWzJAkD+fb4QA6z+WngeM
K2IyQPi+AbKnQOs/VVYFdsNuMkCwvcY27sDrP9TFAErzhzJAKLtQQHvB7D/E
M4BEGYsyQOD6geGM4ew/tKH/Pj+OMkCQOrOCngHtP5R9/jOLlDJA8LkVxcFB
7T9TNfwdI6EyQKi42kkIwu0/0qT38VK6MkAotmRTlcLuP8ISd+x4vTJA2PWV
9Kbi7j+ygPbmnsAyQIg1x5W4Au8/klz12+rGMkDotCnY20LvP4LKdNYQyjJA
mPRaee1i7z9yOPTQNs0yQFA0jBr/gu8/YqZzy1zQMkAAdL27EKPvP1EU88WC
0zJAqLPuXCLD7z9AgnLAqNYyQEjzH/4z4+8/DAfA+1XYMkD4nkEcSPTvPwjy
jBI=
      "]], LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAmDymAqPaMkDwnkEcSPTvvyBecbX0
3DJAUI19v6jc778QzPCvGuAyQKBNTB6XvO+/ADpwqkDjMkDwDRt9hZzvv/Cn
76Rm5jJAQM7p23N877/Qg+6ZsuwyQOBOh5lQPO+/wPFtlNjvMkAwD1b4Phzv
v7Bf7Y7+8jJAgM8kVy387r+QO+yDSvkyQBhQwhQKvO6/T/PpbeIFM0BgUf2P
wzvuv85i5UESHzNA4FNzhjY77b/hBKf4lSIzQHACYB1qF+2/9KZorxkmM0D4
sEy0nfPsvxnr6xwhLTNAGA4m4gSs7L9kc/L3LzszQEjI2D3THOy/+oP/rU1X
M0CwPD71b/7qvyalGRqJjzNAgCUJZKnB6L85R9vQDJMzQBDU9frcnei/TOmc
h5CWM0CYguKREHrov3EtIPWXnTNAuN+7v3cy6L+8tSbQpqszQPCZbhtGo+e/
UsYzhsTHM0BYDtTS4oTmv2Vo9TxIyzNA4LzAaRZh5r94Crfzy84zQGhrrQBK
Pea/nU46YdPVM0CIyIYusfXlv+jWQDzi4zNAwII5in9m5b/6eALzZeczQFAx
JiGzQuW/DRvEqenqM0DY3xK45h7lvzJfRxfx8TNA+Dzs5U3X5L9FAQnOdPUz
QIjr2HyBs+S/WKPKhPj4M0AQmsUTtY/kv2pFjDt8/DNAoEiyquhr5L99503y
//8zQDD3nkEcSOS/GGIa1g==
      "]]}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
SdlKgm1uq9CUIxPdNPA8/9hREqRqS4v/Peeua56cXbHeWxIi+pIuzcwwUanq
2fSaQEnwOB8fZWHIQl3JZ0yORknCdtJeX0dPFvopdqZuPFkS7MtrSqcesdCa
SA/noBxJ+FMT8iqujoXIvB6LYm8koY0lXvFnhoUs/d0TMsokYUebGPM//ROO
U27ahvWSsLB07vY10n/227uVVXVLwkWFI7cCTdgoue/0IbsRSXjvz4hYidjo
tf3pyaFfkvDxeve2A1xc1+gadllACkoOzr55uI6Nhre7KglLSEGPlmHSdh02
4i93efNAVQogk3e+SoaNVExddurrScGLJ1d3P1xiIdNXzv2lZlIgkRBo59vL
Qge0nf33b5eCsnzmuz8fWcgrw0ls8KAUDLgZWs0nsVCsf0pq7CkpkH90x1vo
PAu92FdHWu8tBSfFTIi+O1hoYslkY2ykFMQop50L/M1EItx15Lq7UqBASftV
0MhEus8f2Q9kSIGvShvfuTwm2hXayozJlwLJS9ln48KZ6MyRVefXfZCCaPpf
M6YLE0VTYan/ixR41p45Y76DiZ6t8L0Z0yIF6JJvxUkqE33vzZVe18+1/03A
XVlVJhp9x8jon5CCIQX/+/KSTLTyloR+zB8uH+ZV5VKiTKTtYlVislwaqs8Z
qj5dw0Q7NgRa9ktKw2gnHnJVZCJ3yVfN0WulwTPmW2StPjc/RlnHTfSkgWr7
k7F1FxM9LVcY6zOVhoQnpCjieSaqSdnnF20pDd4idv4vHjHRsPcNfpMD0vC6
UCWSv4uJllu9v913QhpYixIexsosRFKZVIw+Kw30AqUCE4//9Puo5xpfloZd
qoKifWUsdLr2kFFfmDQ0tL/qn1zLRhFZMWVRCdJwYpw6IBDFRk8Cyncbp0vD
PrROIXeRjdhaZJeoYmnwPV/lRvw1hAR5T04bVUuDxRYVwxtXhxGxPfFqb5M0
hJ0NWH9l1QhyCft312hMGm45mfBqU0dR2DFD9d55rj9ez99mfR1FOYZu+TcF
ZIBMqJvf5DiGmP1Nn3uUZSDLd74vK24c8b8XOnBTRwZYijvNMggTSCPOvNdw
nQwUbpX3Nns7gZxQznyktQxwfvad2FM2iUKlu0INHWTAZOhpqqMSB2WNi67p
cZeBsAvTP0cPcFBl5ZYHkZdkgLCD1yk0jIMG7vtrGYbKwEMxzwveLzmIz+fF
W8ZtGdA7pZXx+wcHqe0Y2Bj5QAYOnSLVeHE4aNNa2TraUxkg1co81F42hRzn
dx1mFMqA2JWFNVHCUyikPpgVUSEDd/dkP19cxV3n5hSepzXIwAxNtf8nzxQq
DxxdonfLAG+p2IalEQ7qO6AaFTEsA/cLfKOzv3IQD9lWhvZTBnIkNYZjUzlI
ddnNTDqfLNwbyc45c4qDoPOTfoSoLGwt2EPkU+agEy9nSqiKsvBakSSzPXkS
XYsgWdFJsnBDYeLhxa4JlH782I9wI1mQ0pBzDxaYQKXG8Seom2QhZd0MMVR6
HPWs/jzWvUcWbgvyCpeKjKGlwT9+4UdkIcZLpDd1YgQpfzAQoJ6WhY8udz89
KRxGDu73lMKDZaHspuymTXxs9KdjRd1UjCxUJuds3n2LiZK3+189ek8Wqh8/
fz2zfBA1kg71UF7LwuyZv3/6q3vRFrbUo+5BWfDfKkx8qtWMeg/esLackoUf
z2U3nntbhwKrZ3lf/ZUFVPDj+I6FalSY3ewYLi0HN/r4+7WIz//X3wF3fDoq
otr1kJZTnAbVSg6G3vxGevpfcHUzT0vqATnoOB8Qs5lVjx03e98QOikHzd0u
RwNwM05V28vq9peDWqeUBzGKXXhd/Ke7lmFyYDs9vP52DgO38OpZvoqXg4du
FSo8K/uwSJ/wk/A8OZD4+TTq87ZBnLfvyqHpd3LAU9RqS6lhYqvS0eXHKuVg
d7nhzZWmbDyof6T4c4Mc6OzzTd2eOISDH9a4UelyYLn4RVGgaxgri5rKPxiW
Awe10ZELK0fx+6u5NUI/5YC0r017Rm0M203IBpznk4eYZ5m/F9XH8eyxCB26
iDw4PrjSR109gW/X/uqyVJCH9bybhO0ZE1h3g2v0K015uDFXY2iXNIlrnrWa
KxnKQ82DZzqKihzsorhtPBzk4QpTfU3iCQ5eFv32wfQuefg5iSQtUjg4/Y/G
nmP28jDGpnvsreZgc487S5+d5YEpEiW/ZoiDOzqX5VPPy4PPQXdK5xIHX9zh
c/zBVXmo3+v8W3TVFBZ/3y+6PEoeUizD+Qmrp3C+1v7S80nyMFQaq5UsMIV3
pZR50zPlYWH/iMfMLAcPLaestSqQhyK6f1NNFwff8EtvfPVBHgQao/RL3nOw
2pBoiNJXeXj55HH36XgO/mQXRI1o4fp/q+bM1VMcfOTzRP90nzwMG361y9Pj
4Hljh4RjE/LgdVJj89bhSUyR3jBLFVIAIdsi/mj2BK678SzrgYQCtDGU/UqO
TmD3OQXb5aoKEKmwY4JUO46zfiy8pa9TgNd7zQzMsscwbHF3sdqqAHcLg1hh
omOY/rpD+rW1AtBnPYfsL49i6YSiSxHuCjD89EHWzoMj+DUfiTRzUQFKbIVb
k78O433nk9qPXVeAjYlornrjMI60vrielqoAEQ1nWjZsGcLx37XPPMtVgDtS
Gz4GVbNxqmVPGuGdAkiZLW2R3c/GOeUJjWmVCuAn0dzwlM3CBRus+GWbFCDE
Od3jXTgLvy9aNI7rUQD/58yCe1QWrqS9dFs5rgC3eptFYoeYuO6Fc+r1BQXY
esfH4UkuE7drydcvCilClk17HcOXifuz6ngvSimCgXOiiuBuJh5TuW44qaYI
x7+PEH7oMfHPeyaupw0UIbHwXFKfPBPzSI+l9G1QBPFLXpLPxJh4ZVz698M7
FaHU2NUjWZSJJYVt/zUfUgTtDgHROWkmVg5fQd3togiS3vLvFglMTOL75FTt
owhVdfMaHWZMTA08n4SCFWFS3GlZjh0Tm88Ta4piFUG6crbDx4+Jt/l0LVJS
FaEjv2PVzgdMvG/iln5eriIYTTR36FUx8WG3LY4a7xThFDgfV51kYqfB+TsP
KhVhb5PN9bXyLHyp8+TCrR5FiA6Os/TyYuFrttK6K8YV4diibld3EgvfbKg5
HrKgCF+9bIUefWThOzuD4v8IKYG9+rzgSA8Lp1XTqi5IKcFF+f7hub8s/GTj
0K9xNSVYaXDNU1KGjV99SNV2NVCCn5aDaU+02fiDifWx3g1KIGr7QVd7HRtX
vxK4bb9TCYIi824TERs36L4vbzqkBLImRq0bubjziefcThclOJKgY2zCHT+o
rk6q8lGCshy7ox1abDyR1nbYIlgJxMUbz4pLsvG8XHTMu1iuvt/rawZ+sjBf
IpQapCpBsc23m85NLCwsNjedm6sEIRJ1ZVU5LCwdlUtQf6cE12IqAy0vsLCq
oMOh1Eol6BBUv7PRjIW1g8WjpJqUINVVYJ3SIhNbXArgCI0rgXr02tXeZ7nf
s2l99eAFrj3y1fsFVZh4/9lB2wUhZej26HAq+j6InU/tLhlTU4ZjQ9uDVFQG
sSeDd8LZQBkeFxhrmFUNYD/7QtWeDcow9DTpqJn7AI7eqxLWeEgZdq/by//l
dT++W9NctMNFGWp3u1/5YN+P07dGjFb4KMNGn1TPk7z9+I3Z1L7CWGXoKPtO
3XioD38qzL6un6oM8W1TrzKX9+EvlMOFT3KVASod6Xwfe3HTM5Hhte+Uwbcp
SbPRtxd3a1Yo3K9UhgPTo17naL2YlXFpj2QT114pBfkzYz2Yo0QOjulRhpWd
WwilV3rwQnLva8FxZZitlk3ZINuD+SUTWUELyqBQrT+gjBnY5f/7z+GLmO74
SFY3bvt2gxMquhbKrAn1F6zqsW2Ao/G9CjW4f6EAZXnQ/tfPDgNSbkrtBpHo
zKpRtbrDGnBEbfh3yc9aNOr/nn/VSQ042SJky5moRe5DkSxLVw1wlvET7xmu
RUMH7b+EntUAYphm5dxQLXKtIj0t89EA64zO68njtYhFm49a8tcAC/81msq/
a5FTxuezZtc0oHggLu67cB0aEEva6xemAcFlgQYtWnXIMciF8jZaA6yWBT62
tq5DfeNGEtPxGqB6YlUxhNahE0cF5vRSNOD0Vbfz1yvqUE/Nj1aPhxpQcWxl
ZqdoPXJYn1X0JFsDdqWm5Ay61SP6Y597zDwNmAhhhys01aOj0puvqL3SgDc2
EmVuGg2oM1Tc4XiRBsjsDJhWdG1A9jN9KPWTBnxsP6qv/bIBtZ98ubajUgPe
n2q1u8bXiA42XFsm/U0Dwt4knFo43IgOPFf5fKtNAw6M2m91Um1CzQqTT77T
NeCQafZIbnQT2n/z080VgxqgVnj1QelSE9rnemzPdY4GZCeUFO6dbkb1LWSD
0p8a4FlZH3Dv/A+0Z8vimr+LGqAzG8Tv8PMH2rn2fsvFFQTYe9PSx0egFW3r
aj/qrkaAhbrJ4wfI7ahq+xOLxyQuJvFnmr9uR1uKLqkO6hGgosB70zmTDrQx
UXrwmBkBSnhnXbFhJypdxqq6t5EANUccz3k+60QW598+brMkgGacU2Oychcy
33vAw/oAAfiqaEYSnC5U8lF9d+xhAnwenet22tONTMkzet9OEMDjsLnUuuxu
VHSvXGy5KwHkKxrbzGa7kcmK+OktZwkg/JSQSjOjo8JLJ38E+xDg5SpMmven
I0OWQeEnfwLcPTyk61dAR68P8CT/CSJA2XTY4yIGHVEr6v3XhRFANvwhfws/
A72kPDziG02Am5ceSPxTYyCDdM8Nr+IJkNOy8vXV9Qz0QsRCZTKZAG9qeSxf
WjGQbuBqXvJDAmREU2eXWzPQs9Hu/tPZBOCoiGSssmEg7cPPKrPzCDBzX6Da
ei8D5X4JyOl/SQBWUvZC6DYGIpnsjFApIoDn+jxnB678x9ny7kc/EeCteRMn
i8RARMmRnSmVBOgkx9nrSDFQdkixbmsNAcLkPRXr/tGRxlSEqEQjAS5u/wfn
huko8/ihqb1tBEg+s1x4qYmO1Oo0m6PpBEiS9H1w4iMdpZv/evN1gAAmq2nX
buTSkUpe9V3BEQL0lqlR7ZLp6MDDouIaDgGCbn9pqIqko5sJT7tjfxEgUgs9
D71GR//drwKF+zqm+gPpaDYgVk1GgAjxxRP+SiF0pO19bWvXKiJUMGBXTywd
HXc6f/qhOBEyyp2z32fR0Z1DTlGn5Ijw68iNBddKOqrZdfCFpioRpvK+zIdM
0BHPRqvGUSIRvhh+MY5QZyAjI9PZfF0i6KSDRfMpBnLXIstcMCRC5C2tudR8
BkpXUjZdZ0aE5UsbzywI9qDWNWLHFjdysdxy2W63HrRKkO9aqRURVssOXFrd
3oNgYSYjdC8RlDuXJd0j9aKLE8wqq4NECDqXV+nu3oue9bcNCR8jQrhAQinx
ZS/qa/26qvEUEWzGqsTOLvaiXfi5tf05Ijwd3v6xIq0Pqd32pbtFEyHOa3lu
M98AOhTqyqOXQASCxstTqQ4DKMbPXn06hQgCY78DZN8PoPkTG9wuPybCvc3n
/8LZQaRrqx9t8YIIu44J+1+uGESO29fm870lgogdgy9MmolqKQJzN8uJsL1C
T9y1gIn4iL9k9n4lglTh/NzSHBOtkx82lWggwt9TP3umjFjorEjXsbZWIhgp
C3wr92KhDL7aa/fpRAhYSUgVyGSh9p+fMo8PEkHd4+3nE/UstHq0oFp9lAi5
NvXVsbMstKknY5g9RYSbVWl2x8XZyK/5jvCzeSI8dFIOLSKx0YvPYfre/4jw
b5zskWTCRgMlfvsNBTXBZDzhixhiI9kCd995YU14QNm83pqL92QdTf4goQnj
V9+vf7COjUKT95Rck9eErqVD9H06bFQcDYwtazWhV1LEokeGjSauUXlXkDTh
onV+VuMSC2n4amjU6mlC4Hpej+peFjrsJm0ZZ6QJdaY7Urw+sdCtY8vdbc01
IcBKZFNcMgstbB3Lp2/XhMv8t+dSt7KQgSmj6dE+TYgQFthoJ89CznoNc852
mtBwWOw1YZKJGqTfmE04acJTP+Onv1OZSHBVjsMrD03AYlt6+PyYyOxfUvDF
85rAE2H4fK0dE3nPRGaZ+mvCMj79jn1mTJTDDvi8FKQJZrmzjSEEJurqOjtS
HqYJc+En09O48RNrOL46PEYTfvWVD1wRZaJtldYGO+9w9Ss69Q+KMVFA0WYb
0fuaQAx8UBipwETUow2c44+4fPVLRRzSY6KRf0djCx5rwmNKeiVxBxNlZA7r
8L7QBMZr8dc7vJjosOXFr9ZvNOHoCmFz/jQmEh/lc814rwknXnsmB7QyUU3s
Lf6ZUk1Y3eOvVyrLQiFUxYzNnzXhUMpg+mcnFjJtfYLu1HL5LfwtfvY9C037
G9EHmzVBqn1zlrccGz1VKr9s1KkJX9cMEC4Fs5Gcc9fbVpYmSA6k3k1yH0IN
y0/baI5z45/H2ewzMoQins1yLs1w5WmLebV6D6P5mdVkOR4SCF5/kn4/ZgQV
JN376iZIgse2DUM/146i02aaru+FSVD0O0SxvmgUtYdAxhE5Enhn+BwQGh5D
t4m16JkKCURKL7hWB40jqxp7+iKBBCvNSv5WSkygd2t8ZNOoJIjl9T73XncS
eb7993ZiHQn8e/Q1PxZMIqJ9tA1CJFC/qL0zVoqDGIuyU7e2kkB5w4zc890c
dDc9O7Z3Jwn4WjS9/wZxuP9DKpmynwSfsyzGKvM4SHDo09fgQySQPQ3Nuxs4
6FPUTtcmBxJY3qy+MTTGQRf12/nVnUmwHN+eGOOZQnrNThk+HiQwVcxkl6ya
QqyLU6jyHAm+Z43GlwpPoTT5q3RJPxLMJoZknls2hWw/rQxwvkqCXcWv7+yf
5CBhxyTZwlAS3N+p+n22noMqBTQKBaNI4ObpnTWfxUFXcgts7OJI8HH7OgcR
Tw4y3L1h6nESCSJS2bM/tTlojPM1dv4BCcQJWXkr3k2irDsHyduzSKD20mhy
3b8JdHTdwNeUpySwVlF85KY3gSS7vVxHCkiQW3PGNn/LOPoetMhv9o4EU9vD
czdvGkOh6pEZUR+5mIUcwjRH0Yx7Bp1cw7XX+BvY5A2hpyL6AYENJGjfl5B8
aCcbOb4qka1rJUEtv3QfDzf/mn7/sPEaIMENh625r/P70asIoZqXiyRQ/XBB
5oJRG3In33HlW6YFy29W6Da5NSO1BlUBmxVa4FYR/xek61GcjCnMSmlB9s1D
jd6x/9u/ogV8u/fPVWjxIO+cM4XG+lpQmiv+sfh7KWbUKySKGGtBcF6/5oDT
V7z7d40Py1wL4mu91L5NNmDtXVqUuzu04M99x0ERnQ6c7Nsu6mmtBeYtR1dX
qNCx0MPwia2HtKDD2oZR4N+LB6eYeXPOWkCXtbf8KDGI9ysk3qw9owVzX41i
HEqZuGzLFrdsHy2YeW0qvsWWjQ08ZywDL2uBxcLG/asah3BaUgbRNpirPy10
fzB1BAuXWQvoRmhBXNPOiCy/UXx5hGeQ/5YWfBm13ZuTMYaHJArKuxO1oGmY
OD6aP47tNhx/9CaVa19uiopo+gSudhG5Fp2pBR/WaRozzk9iw9sfHZyeasG8
/oYuXUkOzig+s8H8pRbsz+b97HCCg8UGFBQli7Tgc23esFEaB18V/rYw+kkL
TCMfxPyr5eBxo8sdFVVaYNQuS1PhcPDR41pF979rwZnM9QdFBKZwTUT7XZ9m
7vPEIKEjq6fwulfhvjs7uf6Hvzycs2IKP+4yPqDepwWSY5sLMhY4WFqARf3D
1oLbBqX0NX0cHKqXuKZ5QgtEu2fWV3zk4Gm7LZync1pgPDscFxfHwSeDZ+pC
FrUghrd31cljHNzwNOP54WXasHV55F9FNQ62+GEdTV2pDQe6hC56lE3iZ395
PFau0YYjRT2fzQ0nsYJmwfZ+GW3IyeI5nZg2gef9RYTiCdqgymprcTk5jl0y
PzLdyNqg+IIUGftxDLd8P1O5kaYNX0vEPBNkx/ArlW/BU6AN5dr7iumNI1h1
++UTXy21IfF6+JQ5bQTfOq+FHu3RhrZic6nHKcN46X67kr+tNswINeeeFBzG
Z6rCF/cd1YamN1cux10ewp0Txl2kU9rgpzr2Y90vNraSZRXzuGtDSe4SwTiQ
jQs3Jia3e2tD7cU985tWszHBY8ulgkva4Hw1wXbmMbfevjNjG3FVG5aa3918
u5tbz37KMDxxQxuSWcG7m5aY2JttLbEuWhvWfC3ZeLaEiRlivNOiCVx/d33r
vHGdiXeZFjSwU7QhlVadOH+QiUtOHc/H6dpA8aWGXzNiYu0Ykdikx9ow4tFq
XKzMxMmFH894vdAGsNpUoSrOxIK9Z3ZavtUGWqTkNnlRJvZdoait8kEbfO6d
PseRZOJB6rflv8q14eFaR4d2NW79e/Qyu+6rNrRSHUNnTZi49IZWdU6DNqz1
IjbY2TCxfn571tU2bai7Tm9cfoGJ09rDrx9kaIM+z9rf/ClMLMxn4qjH1IaV
i2Utm8uYuPjSMhvWqDY4rRh8wxlhYpfx+s1p09rwswT5VkqxcGn7aYIIjw4Y
1uatWObBwmf3GElXC+rA88nCztv/6Yep5BW6uloHiLkOcbeLWbh6fd0vI0kd
br6eDzToZmGf/HtD4/I63P+R1IkXC9z6n+Dakb1WB3wZr7baS7Lx93u0mmMk
HUhi39VIILGxvxhPiZS+DtQSO82bjNmYGPY9r9ZIB4oT+E0yLNi4+U9y6g1z
Hdi+GPkvC7HxtXPOMRs264CP2r9jCevZWJdNuTq3XQcoIjmWG8hs3Hl0yfP5
Ph2YzXg+HinDxuFNNced7XQg/J1pxKU/LGxolbRPyUEHJqsEeuXbWbjv46mN
LU464DAskJL2nIVjaQbUGA8d6AzZtnHTFRY2y11U23peB7za0zTtt7DwkPJX
ib9+OlD69faSleB/8imR/22QDoQNSeyLKGfijSsd586E6YB75vXPqf5MPBGk
x9KI0YHBfCs7OTIT35tbaO1O0IHd94mQ2jmIZ3sTinY90oGo7E8Gh/UG8ZN3
VQHkDzpQuPT88u7KfmyrG39msJw7n1/zwmb3fsyX6XAs9asOvOkZiv+yph8f
jf1lIdymA6y4NDfB0314BX+lfiVdB+7lD38akunDhf63Va8M6gBKS9389Fsv
FnXW4hub0oEXKTd8YqAXf+icm86c5+r/NOrmxteLT+8rHzjyTwfuHGpv0Uvo
wVLVsT8kBMkQe0WQcIfcg8vNjlR9EybDx8zk7VsaGdjrpWbhdQkyJCeKdB4N
ZmBFzdkcM3kydz02lN1mzsBfU0uTZlTJUOuosjNqGQNfFI+JyNMkQ1WwCY3c
QsfqEfb+p/TI8DemcGb3Szpu+EtwVzAigzZKEnZOouNAn+nDzWZkCPzksvQl
jI4//P/5amDu3CBx7SodtzlEmW/eToa244Jrbbg49Ied7p+9ZJieur7vRSgd
U3ZoKL8+SIY1u7xPV9+mYwbmiHgcI8MD294VUY/oOMro4z81JzKY5Jrh3rd0
vC4vktPpTgYbUmxo1nc6Zqoe7Is/R4aIj6wj+YN0HH9XrWmHHxlsfSf6Oxbp
GAlPlvMFkSGcs8j4J8HAY8Elr9/fIMNOCuntMi0GTv4VnnU+mgzDHI3KRlMG
3nr2QKJ2Ahke1cDdU1YMfCG+hMcrhQxhekN7Tu5j4Kx3amdeP+TyMyXMUbFh
4ObuyLZf2WTguR507edeBubjm9pk/owM0m6Cn3dvY2Cq5qEX116RoTCG+OqR
EQOf3IXlqorIkJqaFxmixMC3zxFvrMBkeLzbmp34l45L78ZwdleR4WFp+IUk
Lv+TJbNH4r+R4d7BEQ/7bDpW7jvyubWRDC7C6fTKM3S8R7CCqtBOhlvvrhR2
6HDjoaOddpxBhou8h2++6O/Gz/bFrcgaJANj1Qc177hu3O07f2FohAxJRZ7N
J9Z1Y9PS6p3nfpHh9wa3eQvvLuzG1H339i+Xj8anVRJ8XTh5ZaLawjJdCOX7
dH8gphP/OnDqd4iYLlTdbRqdTezAb4b/5dzR0oW+oNhVAwFteEDEVbxDXxcG
ulr15KdasbhhXaCSsS4ELxXvXe/Sis9dTT2Qs0kXTkU9YzvbtGA9ifV8RUd0
Ab1lJ3zc04yPrUs/u3iSq082WfpSexOOPibUAad1wTv6Tcp71yb8IcRzyw1P
XZhR+cAv8LcRjz5uyf96QRdKnkkuliU3YvlacwWRAF0o97jYtcOsEe+Yzgzb
H6wLk8/n+pmDDdhfZtX03XCuPfo3k6sSG/AT8/PHumJ0Ifm6y/Hlexpw+8mO
Lyp3dEEttH9r0eoGLBQOhk73dGF/ma3k3dx6bPzs8cMn6brgUPXi6ZZt9dil
UWTVeI4u0E/P2clO1eHEn74XKc91YfGdMyE8tw5XKtD7fF/rQpC679d+zzo8
C1t2vy/m6uObe30Y6rC6S17REtYFlibyWVKsw/ujxDU2V+tyv2cJHqXL6nBI
gf+t8O+6cN6Lp8Nvpha/bOld+NbE5UPBQ2J4pBb3Lli6iHXowuyaD6vwUC0W
U81vPNDD5Zc/bj55tBajrdIbUpi6AB98SSuma7Gne+AT+qguCJdsnUxZqMVp
twYl1KZ1IV5fJauRq6/2zc4gl3ldoBEMso2F6/Bix6uRp0u6YHc386CNeB0m
/5M7OMmvB6ZCq8XfS9bhIxrBZbRVehArw/qznPv85vYhst8aPeB34n07vrwO
v/fcm/xBRg8CNgODNF+LhxMKl/Eq64EK6ahzHKMWyxYreW3V0IPLO/TjZUpq
scP/nwcLV27+kCJVPcLx5yPiDNr04a6pf/PNvodof9he3QeFBtDkcm3lH+8m
lGPP2V5cbADk3ITf1n1N6Dc5zqXlgwFst888KWHXjNKbmx6urjAAnuiB1an7
fqBx1YPiV+sNwEU/ovW8WyuC2Z9695oMwGNtoZTlTCu68zlpZ2GLAZjbrQzk
CWxDpp4doRNdBrC0Jm3zr+h2FLvx8qOVPQZgkVBPylzTgfokFT4R+w3gC9s/
QCqhA0WUHP3lMGQAd6pdo90jO1F37F+JgFHufC3bN7OLnUjfMc0gacIATBuT
epPcu1CIEdr9esoAVrDjB780dqHW5b1u9bMG8Dno/jdhajfS6r4WNvrLAL6K
zW5ZuNmNruSvzRT6YwCtBYaDpt3dqCGkHKsvGcBP9SBqNIGO1A+e6ka8FGgu
2BdT6kJHF7X4fx/hp0BcDGrAD+moZjFLyk+IApY+vp/DG+hIqWEr9c5KCmjr
b3Yj/6Yj70zWnoLVFPiXWNTSJsdAlRfDPb6LUeD7C6xQQ2UgmR2kiCEJCkRU
1lcc2sJA7kpfs/hlKPCGPaA6sYeBPnHcylTluePLf55ebsNA4pUrGeZKFOib
7bi7zpqBnJPyFg6pUsBzTYPM2h0MVOS+S8ZXnQLMTd2WFywYSNhinBZHpECn
MZRO6zHQ8TWx+55rUWBbvfIVN0UGejWod/YrmQJ7f71oyxdiIPso7xxeGgUO
ytn26nfR0TOHNRVKxhS4p6EfsK6Kjnior3rWr6fABt3BrtwCOrIRsFm0NafA
w3VFQWfT6CinfUb2PKLAI3vpA2636Ggh745R7CYKgN5Jq8BQOvrvecpQ8/ra
KoerdJS+v9Wz2ooCp+/5CW7k4lnCpaj+nRSQTzT3/894q98yT5b2UMA2u/En
K46O7n8vqpTfT4Hyx3dFlR7T0cRD+z5jWwp8WLl937NKOtrks/B3/yGu/rNC
t4VH6Shx2315ryMUWG9H9Xooz0BDcuYmUQ4UuBuUuiqfy6f5eLfN45MUUF/P
O3HmLgPdKg30rnCigIArxXCqn4H6E5Rjelwp4HyybWH9+h5k7Ipz/7hz+XKU
W6GT0oMiTU9Uy3hSYMeavp5tvL2oezXvAO0cBTglfjkRpr3IoO/Rv70XKKDs
ejCe4NeLrr/ZpHjmEgXG9v5ldBX3Iu0jobZZgRR4zRGh7bfqQ/bnCsX5g7nx
v63AM3qvD0WED9WfCqVAyAbL0tucPsR8vWuHehSXL82e9KSMfiRZc1Xoeiw3
v36JcZ7+7Uebegsq++O4+egruJNmP4DShaVQRjIFCkOKND6LDKI6NctF3lTu
/PTgNydcB9Hfdf7FJx9SIF4O99z6OIjIe/MulmVQwC50suyRGBMddqbT1uZQ
IOzPxfHh40wUGSA6dS2XAhu1zR5WPmWioriNL3qfUSA/kNSfzGEi1mMfDyig
wJcVq1M7DVhI6lM2Kf01BV4gh0BhDxba8qON+a+QAimc4tqyNBY6P7Ii8/h7
CtxvAdH0byz0iMf8BP5IgWvrrXxOTLFQg7SnkkoZBewf71NoFGWjJXJ659VK
CiRG5K9tJbKR7uamJMZnCqgYDTm7G7PRUXt+W4tvXP1vdsmlW7DRTS9j8bQ6
CvyoJqx4hNio+Mbp+r+NFDCd35/1Yv1/zg+9F32shQLsDuGStbpsJP3q+/aP
7RQg1VPn3eTZaOuXJUGlbgq0nLeWXM3HRhcYBpVXeijgpXGgInuQhTJmHYO7
+ymw9luKQ385CzWuTLQwZ1EgmTi0+/oDFuJZ+/nP/WGuPXOXqPa+LKRv8rvo
zxgFkkqE2zftZCGH3ToXj3AokD70nqOtykLRp47RSmYo0PYuK11gjolK/G9x
5H9x+Ta81VNbw0Qjt8qeX16gAI1VUhiSwUSyOTPunX8p8Glk4qRGIBNZfiCQ
THmpELZh5vDLI0x0scmOmcJPhT/+2+zUERNlDUVm/Baiwlb1DnSGxETNSyXH
7VdRYeLjP20fWSbik5pQLBahgt5EzYk13Pgb6Kh2yopT4QWH57woFx/fuD/J
T4oK0S29bmpyTBRrF3qgXZbKrSfz1YZ1mOjD2cI16xSpEPKhuXLYiolGrw/V
JalQARsNXbrlzUTy9+Sjf6lRgdexfRcpk4msCnZttyNSIdj/hutALxNdqr4q
+E6LCiba82frtVgop7ugQlqXChJb/DZ1BLLQj+n+axcNqDB723j1t24WWrZC
yqKVRgWztRdTdm5jI6qK5R8jEypoH7FbwShmoxNG/kWJplRwK4zr7zMeQrd2
5vnObaDC4tYo34QPQ+jTSTrVdiMVLKztHwrvGEYKsRufS1pRIUq1ZlLGbwS1
slZkJNhS4X6xwqeDi2Oo+kBkavEhKjw/qCniGD+OCsuXJ/UcoULgcpi+TphA
OQYRcQLHufIYjf173kygu2lC0TqOVGBNmHfv3jCJwoTDw6yduf4HSogK4Ul0
8bJg8KXTVFiTb2rzT4GDXIZuBDzwoMKdmYD6ozYcZHtQ4GKFJxU2sXUO9IZy
0JbKUO/hc1T4dlUwrDGfgwyp/B6ivlQw/nz865VmDtJIv+5s5EcFmwqrl4aT
HCQpsuzEkQAq+FPlTtvwTSH+KyGHg69S4TP1hIi58BSaHea1fRxMhY43O1cf
5eJBu+C9taFUeI/y7Mnc8T+qeHbMhHP5PlubRR3noEratS1yUVx+MpP9+Go5
6M2jfxYolgoHr7qYWzzioCzRoPXOcVQwVTmomuzGQXcCl2hRd6hgve3PWBOB
g0JHA/VeJlHhXOdqjxt5k+iC/V9S2z0qfDULabk3PYGcPl9R//uACuQLLfda
VSeQjdGikvojrjyf0sA9xuNoU2aA7PYsKqjymzA20MYQdc0fca/HVHBKn60T
kB1FakGXVyc+pUI8eXKAzBxG4uO/hUqeU+EZLb3Y4f4Q4jviz9dXQIVtxblG
HmZsNP1lflHwDRUSUieDt1YzUVPWr6n976nQfK8orj29H5WLXxrz+0gFqeBG
LYWZXvTq2k9WWikVPhwx6rzozkDxR+e6RqqpsNn1r8gb5TZkLTlTFdJMhba0
0Rffj35CEHK+9EkrFRJFXSf1vzz73/044DB10+3owy+fxL5z8uV7qTCc5SW2
WFuKG65PpLwao4Loq+fjHX1tuHTq7J32SS6/EEZ4dqsLFxwfj12apgKN4r7E
VuvBt83Gru/4zY2XWFzkmZ/9+Fqux1XvRS7eEdLdEjuIvWVG/e7+o8Llkh+8
0pIsvHdm+Gy/AA3knvGoBPUOYYuTbqeXr6DB88CsV88JI1ivfshRT5gG/jrx
y8tsRrHyhtPHDojSYPF2loCU+xgWyWPbXRanQfzOh2+1T4/jJVnX/elSNJgT
cHn7ZPcEnghj7aqWpUHWEd6DR+QnMWPW2XJMgQYzS2l+hnWTuM6RuVFchQY7
SZrx2YYc3Mf/eD5RjQYrBuVMSq5w8GzO6Xw5Ig1e1tYnfn/LwYLbtV0eaNHg
PRU9NenlYLnRUcW1ulx5962f+SxyMDnmeXOWAQ1+No7d+k9/lIW+102SIQ3G
st5bFwhPYetGg43PTGjwejZASpRvCjv5TP/SN6MBFakr/Brl4EtSb168tqBx
61Wb25u/cfDNd77OJptoIEI33EJP5+BUexPFkq00MOqo3Fx0loPz/8w3WWyn
wbVOUedGKgeXP3gfWb6LBsYhwbfs+ifxD3QFtu2jwVm2fmaqzSReuP7v+W47
GugJ2mZJK07g1cQyp8bDNGgOmDI6cWkcq34JUbB1oIFKtMeAff0Y3iosGHnU
mQar0v+tmrkyig+9+Ix6T9MgRfjaamLrCHbfF/nz1BkaHDlh/IFEG8G37wg7
efjQIKpz+mDo0hDONK6Tn7xIA2uPpR3+XkO4sP1W4/nLNMienL91bpiNv1y2
jvgZSIMF/vUuh8+ycZeiBLocTAM+PqehX39YeOLTj7m/oTQ4B9OnBhNZmOfk
3WfBEVz/3wcQbpuxsMSyQ6cEomlA+7Xt3cZxJiZmy8lH3qKBspTDLek8Jl5v
2dUgnECD/tRNWvy+TLxrODX89l0unyTzsI4dTOwQ5WAheY8GkxFUkY1kJj6n
qzqX9IAGpStX15TLMnFofV+ewiMa3BEpmKwWZeK75zIdH2bRwIl/tDBZjIlz
JZzl1J/QoODm4lk3eSb+8JbYkJNHg1dL5RU2XHn1dkNh2vk0+GZnseH4Vibu
/5274cUrGrgXvv123YmJZ+97zFIKaWBhle73PIKJhSx0894W02BknYNiaQET
y/dOnFz/kZsfW7sk73cxMTmkQPZjKQ0yC05MKS5n4f3VtLDKzzTY/uPhdPpJ
FnY+PWdu9Y0GiXUzjQHRLOy38t3MtzoauMbU+b59w8I3n/k93dtEg/FZS9Mj
HSz8YI/pyeYW7vuUfeNp9G8WLuD8kbHroAEhLqYzUJKNy+M/1nV206CM/NLH
X4uNWwyDbjj00oA3f9az34SNh1rBvH+ABob1Xf5GiI0X/PhmnNk0MO0SX7aS
i1crVOYOj9DgKvHKuDh3vOrHGyfOTnD9/2Y2rKzJxtTjljJTUzR4YOLhIyvK
xlt5V9RdmKPBjz7NqwKTLHwosyZ0fp4Gu+peVgh+ZmH3rdFmVxZpQN+05cvB
JBb+732G8N/7DPH/Aa9SFYQ=
      "]]}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQXfvc99P//8YHGtw4Psvuv7v/WbXY19t/jA8weJSz
Gu+/s99P4P737T+BfM9n4h77b+9XsCz4m/8ZyPc5YlO0/+b+Q12TOB48A/ID
G9qO7b+6n0PvutyBs0D+9g/G9xpO759SkuDdMBvIr9jz4+/HhfZ/OTT9YmYA
+TkuqaEfV9qnzf0YYDEVyDd8lhH2Y4O9+bGmsA99QL563tW133fY3xJfmpjQ
BHQfh324XvURe4XdL8sdMoH8SvUZ72wu2a9mLF7CYG58wGHT7B3nZB/aWwSv
YptpbHwgYfWNCe0rHtofW/Iww9AAKL9ENNPB+JH9A/cA3SRNoP5p/ZKbPB7b
i/XpbjssbXxgQVVz1dTip/ZL7qdIxEgA+cUHgvz+PbU3NJxT9UUEyM/5q8Xe
+cze5wqXvSqf8YEDceW3K+Y9t2+SenG8jcH4wAOnbJuYky/tBXLkteT/Gh04
YL1CRDTklf3cvWE9238aHXhg8vTN2Xuv7HckHA148QnIV4ufa//ltb3rpj+b
Gt4bHWBQmFP6o+6N/SVmE1HJN0YHFCRv+m7kfGv/dtmim55PgXzu4H9K8u/s
q37ctH700OiAA8uEa7dXvrPn8BKcV3UPyP97Zt0Uk/f2U2d7MAjfNjqQ8I2z
3Xf/e/vpt45w8ID4m74lZh54bw8A/LP6gA==
      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAIu1/YqvXMsCAELmg+bXvv7A+t8RD
1DLAoBd8yEAr7789kO4m3NAywIAeP/CHoO6/WDNd6wzKMsCALMU/Fovtv+aE
lE2lxjLAgDOIZ10A7b9z1suvPcMywGA6S4+kdey/jnk6dG68MsBgSNHeMmDr
v8O/F/3PrjLAIGTdfU816b8uTNIOk5MywMCb9buI3+S/BWVHMhldMsBAFkxw
9mfYv9JeMVfrWTLAgAVdgOdk17+eWBt8vVYywID0bZDYYda/NkzvxWFQMsBA
0o+wulvUv2Yzl1mqQzLAAI7T8H5P0L/IAeeAOyoywAAMtuIObsC/jJ6Gz133
McAAKFg2nue/P1iYcPQv9DHAgDYK++z5wT8kkloZAvExwIBY6NoKAMQ/vYUu
Y6bqMcAAnKSaRgzIP+5s1vbu3THAAJIODV8S0D9QOyYegMQxwEAah4zWKtg/
E9jFbKKRMcBAFbzF4i3kP8AroYiEjjHAACasyN+s5D9sf3ykZosxwOA2nMvc
K+U/xiYz3CqFMcBAWHzR1inmP3p1oEuzeDHAIJs83col6D8nyXtnlXUxwOCr
LODHpOg/1BxXg3dyMcCgvBzjxCPpPy7EDbs7bDHAAN786L4h6j/iEnsqxF8x
wOAgvfSyHew/j2ZWRqZcMcCgMa33r5zsPzy6MWKIWTHAYEKd+qwb7T/pDQ1+
alYxwABTjf2pmu0/lmHomUxTMcDAY30ApxnuP0O1w7UuUDHAgHRtA6SY7j/w
CJ/REE0xwECFXQahF+8/nVx67fJJMcDglU0JnpbvPyzt6FHuSDHAIM4WJhjA
7z9VbDZO
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQfe3CF8fTroYHEs6JqUkceL//O7Oh6nZnwwMLPC59
SM9+v39JOI/jTAfDAwwWj95mvXm3/9+/QxWxVoYHGsSYXhS8e7t/k6/Bi6e6
QPWXHe/UfHq9P34hN8sJLcMDDw4F3qwvfr2f5+sz+VXqhgccNiVea/ryan/a
nLnheYqGBw5MaLzQ8e3lfqnXXMe/iQDV+x48MuXX8/1NHU+Xsv8xOKBwwmHt
GqYn+4MOz0rWPGVwwKGy/s8O1Rv7Va48uXf8mMGBAynbjC2Eru//9kQvKu2w
wQGGgLdZ2/9d3T+T7XDA4j1Avlr0za3XL+9/4PnaVna9wYGGpbk5qcLn9+de
sJYQnAKU37Bj/8Ztu/d33L1z5kcskO/sZnlgyhH7qHdqHtOjgOpzbpw6uPuY
vc7/gsOm4UD5aVkxhx+dsD+vwLqrKAAo/7Kv/pjBWXuxFN3lb5yA7jvxOint
2SX7xa9qGx+oA9Xnm6zMabptX/3eNmfCY/0DCfcezbKJfWY/J9H8hcNd/QMO
Pxjnn777zH7PZYOUj9f0DygIKS6Ointu/2+7ckzQKf0DDG7xqyviX9g3NXD6
iGzUP9Cw9vbuLYmv7Bd/YjpxZBXQvOO/9js/emV/JOWPc+kSoHkPJY9cSnpt
z+b53vradKB+0YgzH5Lf2KvvfrG9bSKQr19+of7JG3sP3UfG5t36Bx54TLvC
l/rWvkvwqvaMOv0DC2qu3NFJe2e/uvncco8KoH3TPj/Y/eyd/Zmvx5V/FgLt
2yD01Cv9vf3b9IPzV2YD7Ttl+PLmc0w+AHTMQc4=
      "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAADtq6G1plL8DgG68Sl5fvvy9MtJcK
Xy/AAAKQDggX779Qvq0Tu1gvwCDocAp5lu6/kqKgCxxML8BAtDICW5Xtv7MU
mofMRS/AYJoT/ssU7b/UhpMDfT8vwICA9Pk8lOy/FmuG+90yL8DATLbxHpPr
v5ozbOufGS/AQOU54eKQ6b+7pWVnUBMvwGDLGt1TEOm/3Bdf4wANL8BgsfvY
xI/ovx78UdthAC/AoH290KaO57+ixDfLI+cuwCAWQcBqjOW/qVUDq6e0LsDg
Rkif8ofhv7h3mmqvTy7AQFGtugT+0r8iZHGl2EguwAAqhu9f59G/jVBI4AFC
LsAAA18ku9DQv2Ip9lVUNC7AgGkhHONGzb8L21FB+RguwIAv6MK8kcS/Xj4J
GEPiLcAA6K2DgDuZvwMFeMXWdC3AgClvVCmtzz9u8U4AAG4twMC7XnU57dA/
2N0lOylnLcAA44VA3gPSP6y207B7WS3AgDHU1icx1D9WaC+cID4twEDOcAO7
i9g/qMvmcmoHLcDgA1WucKDgPxK4va2TAC3AgJfoE8Mr4T99pJTovPkswAAr
fHkVt+E/Un1CXg/sLMBAUqNEus3iP/sunkm00CzAoKDx2gP75D9OklUg/pks
wGA9jgeXVek/ejIPSUeTLMAgWRr4Xt7pP6bSyHGQjCzA4HSm6CZn6j/+EjzD
In8swICsvsm2eOs/KrP162t4LMBgyEq6fgHsP1ZTrxS1cSzAIOTWqkaK7D+t
kyJmR2QswMAb74vWm+0/2DPcjpBdLMCgN3t8niTuPwTUlbfZVizAgFMHbWat
7j8wdE/gIlAswEBvk10uNu8/XBQJCWxJLMAAix9O9r7vP801otxbSSzAwF2y
yT/A7z/22UdT
      "]], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAiLTCMbVCLMAgWVTBQbjvv7RUfFr+
OyzAYD3I0Hkv77/g9DWDRzUswKAhPOCxpu6/DJXvq5AuLMDABbDv6R3uvzg1
qdTZJyzAAOoj/yGV7b9k1WL9IiEswCDOlw5aDO2/vBXWTrUTLMCgln8tyvrr
v2uWvPHZ+CvAYCdPa6rX6b/Kl4k3I8MrwOBI7uZqkeW/9jdDYGy8K8AgLWL2
ogjlvyLY/Ii1tSvAQBHWBdt/5L96GHDaR6grwKDZvSRLbuO/KZlWfWyNK8Bg
ao1iK0vhv4iaI8O1VyvAABhZvNcJ2r9Hnb1OSOwqwIA8q1Wz4cG/8I3c/ATm
KsAAHyEpssa/v5p++6rB3yrAAMXrpv3Ju7/sXzkHO9MqwAAQgaKU0LO/kiK1
vy26KsAAOF3NFO6Ov96nrDATiCrAACr/d+EHvD92spsS3iMqwEAz1WbK9NY/
IKO6wJodKsDAiWKH9/PXP8mT2W5XFyrAgODvpyTz2D8cdRfL0AoqwICNCul+
8do/wjeTg8PxKcDA5z9rM+7ePw69ivSovynAAE7VN85z4z+4ramiZbkpwED5
G8hk8+M/YZ7IUCKzKcCgpGJY+3LkP7R/Bq2bpinAIPvveChy5T9aQoJljo0p
wECoCrqCcOc/psd51nNbKcBgAkA8N23rP5kydkOpVCnAYCf7LZH36z+MnXKw
3k0pwGBMth/rgew/cnNriklAKcBAliwDn5btP2XeZ/d+OSnAQLvn9Pgg7j9Y
SWRktDIpwEDgouZSq+4/SrRg0ekrKcBABV7YrDXvPz0fXT4fJSnAQCoZygbA
7z+XoEnpHCUpwOA+ok02wO8/8ZVFAQ==
      "]], LineBox[CompressedData["
1:eJxlj2tI02EUxpeGl0oZuFlo5Zz5d0uNIVqK5qt4Q1ZelmkZbkt0luaSkUtK
U8yMdKRWKEq24YdaDW1YlobxvtYs7xfSZeRsm5epc9OZZmlhb5/7cDj8eB6e
5xz39MucTCsSieSN599mVZxVJB1kohGld6S0bRnS10/vq9jLRKgyjxPlvQyp
fM4tSMa6oI1vlJmhXX/c6po95vBNYY2zGW4FsHmHrZlIux8UHZOYoFkWM8D7
zUDajZuVmh0mOCYOe9xnZqCVZgc502SEH3UhTqR5BiLd4bwaTjfCNyeCSgJ0
mDPqVPkTi1BG90uVfWIgsou7ruv9AswZ8nAUtzMQrdzfJbXBAK0IW7F7KQMl
cM9JKmKm4Xq19XTydQbiB8kaWG/1cH5rO15yBTNlVq7208Oh0Z/MDQED5fUJ
u+kHdbC+aFEzwMZ9uTv/5C9oIGt8MKqAiv0HODp1xDjklj2gDsu9EMmSE9+t
eg6HwA/bgibMz8iBIa1PINhK2aQ9xPwhO1wApJAmcv0mqsLM90Q6RQLQ85rk
zmIvVOLxuq0rSwkEwcpgbgTWaffsv5/pAcLV/vMmDYHCHhW/qEycBFPNvkm1
nwlEs81RT57SgPiLVdFglECkvORfvslTgKXleNeoCKSV1bpd8NWC1cEva/4K
AslEuZm7/PRA/NRwu7CAQCxnV0tc8ByYy4i95ikikLKvuvRq5xxIoSkuDeUQ
iFxsQ5EdN4DAOmEijUegFYPlqAXMg82ydRdVFIFQR0/h/chFkB2W4pALcJ4w
1LGzexF83WrfpgbhPvpL6Uy0EXSKCmeyfAhUUil9FxC7BHyOTKnJBL43jJrE
7VsCjQugt8ONQPy1itlytgnc4Fu37HbC/6aJ7SZOmoFyOObu2B7cXz9zSDxg
BvpQibDRBuerOeEU9jKgtIzECUjY79SV1tr7P/8FeEVYwg==
      "]], 
     LineBox[CompressedData["
1:eJxljn1Mk2cUxZsiDIfboKtzQBzQt69gFKmWAMq2B+RjoFarSOIWQFZRoQhD
zFaijtUo02yUANkYY4pVhAAZ0hLESoDnhrHq+NBidXwqb1dqW9fSBmSdwGCP
f/vHzc3Jufd3TpDkiwNH2SwWS0jm1U5cvzYsbIEGb5WupPW2AxeVfvrOv3M0
FJyS5Phsd+DmxSsOsNMAES/2nOqcwW+Pb1AdMBC/ex03stuOY5Jzy/0naNDJ
m1zVH9txoaa1YPoRDYHx0RML2Ib/rIra+tU94vdnXO/p/RvXpuxq+7mVBsFo
vSDxnhXressqJU00yH+J5DYmWzF7m75wUx0NTMYfrtUDFnzMO03YXUVDucnW
MzRkxluG8tqZr2lwzgpFqXoTxokVHcF7SL+3enOynhrw7K3HVc4Ekj+cItIe
NmA+7Se7gwj/B5MgxMDgS251kbuFNGRGcJwjd6ewGNo1+X7kfr9yjfnhBGa2
j3besvBB/m1XgrtVj1mhATiuhA8srX7KI1WFz74Xm1FSTHTwWcP8u43YtSL5
TysjWn7No2uxFs88bIjeJSValVnub5KiiaItGvE+whseqz7k1oY6+j5Sp/vy
Iab9N8/J0H607eZh8VUO8RV7WZKUQdTy0zkH40X+j4+5zEX30Q3p76FZyxSw
FLK5l58Po0pvUbPUSAEgxV/uLY9RXlpanayFAmW9BtbHPUWWhOKddxooyOQU
dzGpUygrTGlYuEqBHAdN7g9n0Gfs6YDiSgpiNptHuJ8YUFJj7uULMgpU7oUP
ak4YUV+FIlpbQPK6DoqW5o0InWkdf0NKeIWRA+nfTKOIvXPvf59GQeDUkjaw
0oT4L07/WBFL+JqLPQ23zUj55HK4fgcFunzph56xFuR/t0fPDadAQIs6c/ot
iFPD5lRvoMBZwenY/MSKFOf56rEACsRJ88KyY8+RZ16i2N+X9FkeUTscz9EK
+q6s1ovk515paWPb0OmNv4Yyqwg/SL6JW2pD/3DuDwYt8yBwVNL05Vo7Ornk
yD3i4oG8LCF4pNaObCYfr3onD5j4kPqokBmU/UDY/MzKA8Him1SNegYZNanJ
IUYeKNV25eIOB8q4LrPkTPKAla37IL3vdf0/QOan4A==
      "]], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQfat7Zvvqq0oHNjz0SXbc9H7/5aMKaxLOKx14MHu9
q6DR+/1n/i+/IHpS6YBAmJDGw43v9u8r3ibZsEfpQMKp628aNr7dvyj68uqQ
xUD5zUllBza83p+lzXvhb4HSgYKWik779c/3/z7VIBHAo3Sgwc8jvjri/v4v
LBy2rGxA8w/xqkhH3Nv/zq4/cdd/xQMJ5pdf7Aq/u//BprmrVD4rHmBQiCv6
FXZ7/5FZu2x+3gTKfyxurQy9vr8n60vCouWKBxw07MPfLzm3X4YrY+UXJ6D6
MyqMjYVt9nH7zvQo2QD5EaeSDKbPsV9YZFgQYArkqzQqXfi1zF7t9i+zNepA
flcM0wKdLfb6a3qPJPMoHjhg6/Wp/egheye/zfcvXVU4kCDu+Oq34CX7FiaJ
wwznFQ40TEt58Uj9sv3xbTXL9E4A+aIdz07aXrH3kXfL7dqlcGCB8PlH0zOv
2Yd9uPHLcb7CgQP8sbeND96yz5z0T3RjhsIBhRabZ6Y7HtqvcUv+eS8RqN7Z
L1XT+ZH9u1/H7/BEKxwwYE54InPukX1R8sTFGb4KBwKamh8xP3lsX2OiYqhg
BHRPw6l7F/mf2e970SHip61w4IP9ndijs57ZM859+71aReFAwf+3d3aoPrdv
Y92+77oY0H11grfnW7+wl1s7eYbcd/kDG2oiruemv7JfLBobX/VS/oCBTVZY
4qdX9hp1amrXbgPlf1dfDal9bW/ov3Nz7wH5Axeq5l+2nvzGftv2pqqXm+QP
BFhtDNKXe2tvpeDj6LpU/sCDn4cuKq18a+/y8d65P53yBz5UPDvPuf+d/cnI
FVMjauQPFFj88Pvr+d7e71BhzJY8oPx3znMfrmDyAfsOTI8=
      "]], 
     LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA0yo7IxBhH8CASOSyG6Dvv1iTBOpr
Ux/AAInSMygV77/d+82wx0UfwIDJwLQ0iu6/YmSXdyM4H8DwCa81Qf/tv2s1
KgXbHB/A4IqLN1rp7L9yBbmndg8fwBBDgS3xYOy/etVHShICH8Bg+3YjiNjr
v4p1ZY9J5x7A4GtiD7bH6r+qtaAZuLEewPBMOecRpui/6TUXLpVGHsAAD+eW
yWLkv2c2BFdPcB3AICaF7HG4179uBpP56mIdwKCWcNifp9a/dtYhnIZVHcAg
B1zEzZbVv4Z2P+G9Oh3AQOgynCl107+mtnprLAUdwIBUwZfCY86/5Tbxfwma
HMCAufCsQq26v2M33qjDwxvAwJIZLKHDxD9mqDdWRrcbwIDvLNN/wMY/ahmR
A8mqG8BATEB6Xr3IP3D7Q17OkRvAAAZnyBu3zD98v6kT2V8bwMA8WjJLVdI/
lEd1fu77GsAgsKfOxUjaP5e4zitx7xrAoF4xIjVH2z+aKSjZ8+IawAANu3Wk
Rdw/oAvbM/nJGsDgac4cg0LeP63PQOkDmBrAwJF6NSAe4T/GVwxUGTQawHBL
oYPdF+U/ychlAZwnGsCgImYtFZflP8w5v64eGxrA4Pkq10wW5j/SG3IJJAIa
wFCotCq8FOc/39/Xvi7QGcAgBcjRmhHpP+JQMWyxwxnAUNyMe9KQ6T/mwYoZ
NLcZwICzUSUKEOo/7KM9dDmeGcDwYdt4eQ7rP/hnoylEbBnA0L7uH1gL7T/7
2PzWxl8ZwACWs8mPiu0//klWhElTGcAwbXhzxwnuPwG7rzHMRhnAcEQ9Hf+I
7j8ELAnfTjoZwKAbAsc2CO8/B51ijNEtGcDg8sZwbofvP2xIB4s9KBnAwAir
+z/A7z/NYkR1
      "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAxBGBHbkbGcDACKv7P8Dvvw5/FefW
FBnAwF6vOyJ6778R8G6UWQgZwIiH6pHq+u6/FGHIQdz7GMBQsCXosnvuvxjS
Ie9e7xjAKNlgPnv87b8etNRJZNYYwLgq1+oL/uy/Kng6/26kGMDgzcNDLQHr
v8DdTirjlhjA+HyKODJ36r9WQ2NVV4kYwBAsUS037em/gg6Mqz9uGMA4it4W
Qdnov9mk3VcQOBjAkEb56VSx5r+I0YCwscsXwEC/LpB8YeK/5irHYfTyFsBQ
YTO5l4PTv3yQ24xo5RbAgL/AoqFv0r8S9u+33NcWwLAdToyrW9G/PsEYDsW8
FsAAtNG+fmfOv5VXarqVhhbAYKU8C87Hxb9EhA0TNxoWwIAgSpCyIaK/od1T
xHlBFcCAskEqVvbNPzLkMvrUNBXAADQR1nz5zz/E6hEwMCgVwLBa8MBR/tA/
5vfPm+YOFcBA3L9seAHTPyoSTHNT3BTAUN9exMUH1z+yRkQiLXcUwHDlnHNg
FN8/Q00jWIhqFMAgU8Lk+QrgP9RTAo7jXRTAgDO2j8OL4D/2YMD5mUQUwED0
neVWjeE/O3s80QYSFMDAdW2RfZDjP8SvNIDgrBPA0HgM6cqW5z9VthO2O6AT
wDBZAJSUF+g/5rzy65aTE8CQOfQ+XpjoPwjKsFdNehPAWPrblPGZ6T9N5Cwv
ukcTwNh7q0AYnes/3uoLZRU7E8A4XJ/r4R3sP3Dx6ppwLhPAkDyTlque7D+S
/qgGJxUTwFj9euw+oO0/IwWIPIIIE8C43W6XCCHuP7QLZ3Ld+xLAGL5iQtKh
7j9FEkaoOO8SwICeVu2bIu8/1hgl3pPiEsDgfkqYZaPvPz/ZKJHE3xLAmD33
VATA7z8YY1MS
      "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAZWo9bTTTEsCYPfdUBMDvv/gl40lK
yRLAWMDNEQdb77+JLMJ/pbwSwPjf2WY92u6/GjOhtQCwEsCY/+W7c1nuv6s5
gOtboxLAOB/yEKrY7b88QF8ht5YSwNA+/mXgV+2/Xk0djW19EsAQfhYQTVbs
v+9T/MLIcBLAqJ0iZYPV67+AWtv4I2QSwEi9Lrq5VOu/omeZZNpKEsCA/EZk
JlPqv+eBFTxHGBLAAHt3uP9P6L8Kfa/vkwoSwOggD6xyxOe/LnhJo+D8EcDQ
xqaf5Tjnv3ZufQp64RHAqBLWhssh5r8GW+XYrKoRwFiqNFWX8+O/JDS1dRI9
EcBQs+PjXS7fv2LmVK/dYRDAQOGwrXh5y7+G4e5iKlQQwOB4D3xES8m/qtyI
FndGEMCgEG5KEB3Hv/LSvH0QKxDAAEAr56fAwr8Cf0mYhugPwEA9S0GuD7S/
PzHp0VEND8CAkJaxKaetP7qVKEXoVg3A0BQ+w4Ym1T8IW+djATwNwGDZ//GL
ONY/ViCmghohDcDwncEgkUrXP/KqI8BM6wzAICdFfptu2T8pwB47sX8MwIA5
TDmwtt0/mOoUMXqoC8AgL63XbCPjP+av00+TjQvAcBEOb2+s4z80dZJurHIL
wLjzbgZyNeQ/z/8PrN48C8BYuDA1d0flPwYVCydD0QrAiEG0koFr5z91PwEd
DPoJwOhTu02Ws+s/wgTAOyXfCcA4NhzlmDzsPxDKflo+xAnAgBh9fJvF7D+s
VPyXcI4JwBjdPqug1+0/+hm7tolzCcBgv59Co2DuP0jfedWiWAnAsKEA2qXp
7j+WpDj0uz0JwPiDYXGocu8/5Gn3EtUiCcBAZsIIq/vvP+Rp9xLVIgnAQGbC
CKv77z9L8EsP
      "]], LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAMi+2Me4HCcBwt9xfUnvvv4D0dFAH
7QjAKNV7yE/y7r/OuTNvINIIwNzyGjFNae6/G3/yjTm3CMCMELqZSuDtv2hE
saxSnAjAPC5ZAkhX7b+2CXDLa4EIwPBL+GpFzuy/UpTtCJ5LCMBYhzY8QLzr
v6BZrCe3MAjADKXVpD0z67/uHmtG0BUIwMTCdA07quq/iqnogwLgB8As/rLe
NZjpv8G+4/5mdAfA+HQvgSt0578w6dn0L50GwJxiKMYWLOO/dPAtKReEBsDU
8AyPRaziv7j3gV3+agbAEH/xV3Qs4r9BBirGzDgGwIybuunRLOG/UiN6l2nU
BcD4qJkaGlvev3VdGjqjCwXAwIziqAZe1r+60Vp/FnoDwEBR0RV/j7m//tiu
s/1gA8Agw/Vc9ZC1v0LgAujkRwPA4DQapGuSsb/L7qpQsxUDwIAxxmSwKqO/
3Av7IVCxAsAAfyzEOpOZP/9Fm8SJ6AHAQMjzO44swz9EutsJ/VYAwJgcaAFu
kNk/rqqlOcc7AMCA84cyl6XaPxibb2mRIADAcMqnY8C62z/W9waSS9T/v1h4
58US5d0/JXtWEJ36/r8IajPF2xzhP8KB9QxAR/2/yMWyiYBx5T+WYols1BD9
vzyxQiIV/OU/aUMdzGja/L+4nNK6qYbmPxAFRYuRbfy/qHPy69Kb5z9fiJQJ
45P7v4QhMk4lxuk/MmkoaXdd+7/8DMLmuVDqPwZKvMgLJ/u/dPhRf07b6j+u
C+SHNLr6v2DPcbB38Os/gux358iD+r/YugFJDHvsP1XNC0ddTfq/UKaR4aAF
7T/8jjMGhuD5v0R9sRLKGu4/0G/HZRqq+b+4aEGrXqXuP6NQW8Wuc/m/NFTR
Q/Mv7z92Me8kQz35v6w/YdyHuu8/JsxCNAQ7+b9kshLvP8DvP+TSbTI=
      "]], 
     LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAShKDhNcG+b/e1A6L47rvvx7zFuRr
0Pi/aOl+8k4w77/y06pDAJr4v/D97lm6pe6/mZXSAikt+L8AJ88okZDtv2x2
ZmK99ve/hjs/kPwF7b9AV/rBUcD3vxBQr/dne+y/6BgigXpT978ieY/GPmbr
vzaccf/Lefa/QstPZOw76b8KfQVfYEP2v8zfv8tXsei/3V2ZvvQM9r9S9C8z
wybov4QfwX0doPW/Yh0QApoR57/TohD8bsb0v4Rv0J9H5+S/cKmv+BET87/I
E1HbopLgvzAOboNC4PK/1pgGoz8R4L/xciwOc63yv9A7eNW4H9+/cjypI9RH
8r8UUE70Kxrdv3XPok6WfPG/nHj6MRIP2b/z6itJNczvv6jJUq3e+NC/BoP4
oEZy6b8AeG2A9I6Jv4dMdbanDOm/ABDFSGYnaz8IFvLLCKfovwAAaNJTkZM/
Cqnr9srb57/gXYPyEPWpPw/P3kxPRea/4AyRgu8mvT8YG8X4Vxjjv1Dkl8re
v84/VmYjodJ82b8QUJtuVozfP4pxc4iStdi/LquQ+gNF4D+9fMNvUu7Xv1Su
073cw+A/JJNjPtJf1r+gtFlEjsHhP/K/o9vRQtO/NsFlUfG84z8eM0gsohHK
v2TafWu3s+c/hUno+iGDyL+I3cAukDLoP+xfiMmh9Ma/ruAD8mix6D+6jMhm
odfDv/rmiXgar+k/rcyRQkE7u7+Q85WFfarrP3v50d9AHri/tvbYSFYp7D9J
JhJ9QAG1v9z5GwwvqOw/y/8kb3+Orb8oAKKS4KXtP2hZpal+VKe/TgPlVbkk
7j8EsyXkfRqhv3IGKBmSo+4/QBlMPfrAlb+YCWvcaiLvP/CYmWTxmYK/vgyu
n0Oh7z+ycB+lVRt5vwCZTe0QwO8/yqN3qA==
      "]], LineBox[CompressedData["
1:eJxlkn1Qy3EAh3/eDhUlE851jlwuCkWdwn2OFOeGiCMvh9ZW1xvC6c2uyyyc
i0Pemq7z0u7y2sows+8Wk7FE7dJa17Ky3/bbW7S2cd15OX/647nnnv+fOekH
t3JHUxS1+A9/LTk0++72WUX4dW2jI0jpIotucFpYcefhtb/X+x1wkd6ZDU7/
QBE+WU+HxJicJHVpl1y4+g7umZNS0zhOItXvKK8oqYewf/SFsgEHmaS0hb3e
9Rj7+4hWzHWQw7wc6+vLUrC645M9mXZyK34hW93wHK5OT3mo1UZ0AbaH6g9y
aDoaydpsGxGlxSZwBCrwW6PiL+UyhKKe/OIoWkAr50QuOWwh162s6AG2Bs0v
e7N2fKdJTMfR9AzDO4hk1Xf5R2iSUbdMneFrRUrTtNmtx8wkI3yXOmZmO2Ti
icHZxQOkRas/uzS1C+cqv3lvn+wjWYXdLbsX6sELO1oX6DaSCfMMYwVjuiGJ
GLf3c18v2VDSw9c1GrAhbv47nqyHaCOMBcdYRpRuzrlzKq+LZCUWPDAwJsjH
0A1CcRvJrT1eFXrfCmWVyjh1pAorPd7G6BkMyq7tXKG9ehsB7ML2JAEDivdR
WBl9Hw+8hYH5e2x4TPVVnpFI4dxUfEYR4MBgKx08fugVnvEVikdxg7jcZNMl
XWpHQpRKknJ1CBaxI5bb/wWxus4rCs0Qljft+9nGMWFJib04cmQIZ5WfFAkD
JoRrpidOOOBGpP7JuqCv/ZjKze8gC4ZR4MdPe2H+iskBgqdRe4fRHDIYGp5p
hl/j9erq88MICUs3XaDNoEapOcfdw3i2IjmHZ6FhF81yL1J4MJI7+cQUxgo6
MbpLNOgBu6hsdWk2AxOTLPcL86Lm1PdxNMNAv7xAYK7wYk1NZ6XcZoPOWJG1
TebFxfr1qfNz7fgovMlutnthlsqmX7Tb8Ub3llWzxYfTbTW1mQ4HVCW9Pn+B
D92GIG57nhPyue6eIqkPCyzlEaucTjzVTFTRFh9K3W6HON+Ffz//gJbKlAS7
/u/fTq6d2A==
      "]], LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAArRc1icNN+T/k8iaJgpDvv6i+Sm0x
gPk/lOa0xBcQ77+kZWBRn7L5P0DaQgCtj+6/nwx2NQ3l+T/szdA7Qg/uv5qz
ixl7F/o/nMFed9eO7b+WWqH96En6P0i17LJsDu2/jKjMxcSu+j+onAgqlw3s
v3hEI1Z8ePs/ZGtAGOwL6r9SfNB26wv9P9gIsPSVCOa/AnYV3GQZAECIhx5b
0wPcv1pgqtK4NABAgHtRD3ft2r+ySj/JDFAAQHBvhMMa19m/Yh9ptrSGAEBg
V+orYqrXv8LIvJAE9ABAOCe2/PBQ07+DG2RFpM4BQLCNmzwdPMW/BMGyruOD
A0BA5wt62B67P1yrR6U3nwNAYBdAqUl4vz+0ldybi7oDQNAjOmzd6ME/ZGoG
iTPxA0DwU26bTkLGP8UTWmODXgRAULTW+TD1zj+GZgEYIzkFQIi6U9t6Ldg/
BwxQgWLuBkCYPRLMn8nkP1gnWsA2CQdA0EvxfENS5T+qQmT/CiQHQAxa0C3n
2uU/Tnl4fbNZB0CEdo6PLuzmP5bmoHkExQdAdK8KU70O6T/oAau42N8HQLS9
6QNhl+k/Oh2196z6B0Dwy8i0BCDqP95TyXVVMAhAaOiGFkwx6z8mwfFxppsI
QFghA9raU+0/eNz7sHq2CECUL+KKftztP8r3BfBO0QhA0D3BOyJl7j8cExAv
I+wIQAxMoOzF7e4/bi4abvcGCUBIWn+daXbvP8BJJK3LIQlAhGheTg3/7z/A
SSStyyEJQIRoXk4N/+8/oogVWg==
      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAEmUu7J88CUBAicIAT3jvv2SAOCt0
VwlAAHvjT6vv7r+2m0JqSHIJQMhsBJ8HZ+6/CLdMqRyNCUCIXiXuY97tv1rS
VujwpwlAUFBGPcBV7b/+CGtmmd0JQNgziNt4ROy/RXaTYupICkDo+gsY6iHq
v5aRnaG+YwpAsOwsZ0aZ6b/orKfgkn4KQHjeTbaiEOm/jOO7Xju0CkAAwo9U
W//nv9RQ5FqMHwtAEIkTkczc5b9kKzVTLvYLQCgXGwqvl+G/g+DWQ3KjDUDg
ZlT45xrSv965S214vA1AcCshVwMc0b86k8CWftUNQBDw7bUeHdC/8EWq6YoH
DkCA8g7nqj7Mv16rfY+jaw5AYBd13YVHxL86diTb1DMPQICDBSnvZKG/+QU5
uRtiEEAADCZcWIPLP6Zy882ebhBAwIKMniGBzT9U363iIXsQQKD58uDqfs8/
sLgiDCiUEECg89+yPr3RP2ZrDF80xhBAMOGsN9G41T/U0N8ETSoRQGC8RkH2
r90/sJuGUH7yEUBwOT0qIM/mP8sThucPABJA2FBL3FVZ5z/mi4V+oQ0SQEBo
WY6L4+c/HHyErMQoEkAQl3Xy9vfoP4hcgggLXxJAsPStus0g6z+j1IGfnGwS
QBAMvGwDq+s/vkyBNi56EkB4I8oeOTXsP/Q8gGRRlRJASFLmgqRJ7T8PtX/7
4qISQLBp9DTa0+0/Ki1/knSwEkAYgQLnD17uP0WlfikGvhJAgJgQmUXo7j9g
HX7Al8sSQOivHkt7cu8/e5V9VynZEkBQxyz9sPzvP3uVfVcp2RJAUMcs/bD8
7z/IoyJJ
      "]], LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAlg197rrmEkBIIcVQGXnvv7GFfIVM
9BJA4Am3nuPu7r/M/Xsc3gETQHjyqOytZO6/53V7s28PE0AQ25o6eNrtvwLu
ekoBHRNAqMOMiEJQ7b843nl4JDgTQNiUcCTXO+y/U1Z5D7ZFE0BwfWJyobHr
v27OeKZHUxNACGZUwGsn67+kvnfUam4TQDg3OFwAE+q/EJ91MLGkE0CY2f+T
KernvysXdcdCshNAMMLx4fNf579Gj3Re1L8TQMiq4y++1ea/fH9zjPfaE0D4
e8fLUsHlv+hfceg9ERRAWB6PA3yY47/AIG2gyn0UQEDGPOacjd6/b6JkEORW
FUCgsvNIzY3Kv455mZyOYxVAQBfRAbyJyL+uUM4oOXAVQMB7rrqqhca/7v43
QY6JFUDARGksiH3Cv2xbC3I4vBVAwK29H4batL9qFLLTjCEWQAAU2KQczaY/
Zob/ljXsFkBg3q/NLfrSP4ZdNCPg+BZAICxBcTb80z+mNGmvigUXQPB50hQ/
/tQ/5eLSx98eF0BgFfVbUALXP2Q/pviJURdAUEw66nIK2z9i+Exa3rYXQChd
YgNcjeE/gs+B5ojDF0AIBCtVYA7iP6KmtnIz0BdA6KrzpmSP4j/hVCCLiOkX
QKD4hEptkeM/YLHzuzIcGEAglKeRfpXlP15qmh2HgRhAGMvsH6Gd6T/72QnO
8Y0YQDD6rfwaHOo/mEl5flyaGEBIKW/ZlJrqP9EoWN8xsxhAcIfxkoiX6z9u
mMePnL8YQIi2sm8CFuw/Cgg3QAfMGECY5XNMfJTsP0TnFaHc5BhAyEP2BXCR
7T/gVoVRR/EYQNhyt+LpD+4/fcb0AbL9GEDwoXi/Y47uPxo2ZLIcChlAENE5
nN0M7z+2pdNihxYZQBgA+3hXi+8/qT1WGLkbGUA40AjHP8DvP6lHUAo=
      "]], 
     LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAhxwykD0oGUAw0AjHP8Dvv/CEssNc
LxlAsKGCzbR377+M9CF0xzsZQKBywfA6+e6/KWSRJDJIGUCQQwAUwXruv8bT
ANWcVBlAcBQ/N0f87b9iQ3CFB2EZQGDlfVrNfe2/nCJP5tx5GUAwh/ug2YDs
vw7hDKiHqxlA4Mr2LfKG6r/0XYgr3Q4aQDBS7Ucjk+a/kM3320cbGkAgIyxr
qRTmvy09Z4yyJxpAAPRqji+W5b9mHEbth0AaQOCV6NQ7meS/2doDrzJyGkCA
2eNhVJ/iv75XfzKI1RpAwMG09wpX3b+JUXY5M5wbQAC+Hb+eD8u/kswqbKyp
G0AAG0fGqerIv5xH354ltxtAwHdwzbTFxr+wPUgEGNIbQIAxw9vKe8K/2Cka
z/wHHECASdHw7c+zvygCvmTGcxxAANIxOcP+rD/GsgWQWUsdQGBT2y2Ax9Q/
0C26wtJYHUAApUaq+tnVP9qobvVLZh1AgPaxJnXs1j/untdaPoEdQMCZiB9q
Edk/FoupJSO3HUAA4DURVFvdP2VjTbvsIh5AUDZI+pP34j9u3gHuZTAeQBDf
fTjRgOM/eFm2IN89HkDgh7N2DgrkP4xPH4bRWB5AcNke84gc5T+0O/FQto4e
QKB89et9Qec/BBSV5n/6HkDwwqLdZ4vrPxLufg4SBx9AIPuSu3ML7D8hyGg2
pBMfQHAzg5l/i+w/Pnw8hsgsH0Dwo2NVl4vtP01WJq5aOR9AMNxTM6ML7j9c
MBDW7EUfQHAURBGvi+4/agr6/X5SH0CwTDTvugvvP3nk4yURXx9A8IQkzcaL
7z/TmzNCN2QfQPDEL/c4wO8/INIrXw==
      "]], LineBox[CompressedData["
1:eJxlj2tIk3EYxVcM0xWk5oVssnevpmkXzdtKl//HSrEwEpemRJniAitKt2kL
Iyy8hJdpXoYKgywM0Q/eNRP7z0uTlGSa15Vlm/d3m9caMqXePvfh4fDjHM7D
4SY+jBLuZTAYx+n7p9RYunV3Cgdm+71MZ5SrWF7RkeYv5UAxy5zOlaziGlG1
YiCLA5GjrEr7LSNujcj/GPeSA4wqpy4riRH3uqUZKAUH1AmeM7ubBjzCiLd/
WseBTI/AP+tiAza2+ghf93HAujPugkasx7sydqGfmgPKzGTh8CaFDyRbtKm+
0fnwx7m9Ygp7OGuY1C+6f6piqE68gpt7YfSwHQEM06QgQ7yE9Z5LqYlhNPvH
JLHFc3jLcSa7PoKAxh1hjvWmDpuZo5VbUQSk9KfVMsU6zPrR1ZMTT8CaoFyv
F2mxe2mRTb2UZtGYpFs0ixPNAU2bdQQoE2pY3XNTeHIoey3rIBeghV/5XNWD
y4IVodEOXMicFPDyAzCOamqtOurMBUb4Kb7N7Hs8LNddVHnS/jFdqLNvM1Yl
hFTuC6N9UHjUu93D7aadkLwnNA+uoisGJZK7SEqLlrmgdJEVyNTT6Jo8fyl+
jQuvcq/vP7mgQbZWb855m+g+isgbMn9FMuPIoppJwu2WllxL9+8op9OLb0uQ
UFx9P6Qn+CdKv0rNlcWQAKdL+EHl88ivd2+g8CYJ3rrfGSxiAW34ORX5J5FA
lN/omq5bQA+cLp2dSCXBets1UKpcRHfm3xY6FpKwpuzgtVHLyDX2g3axlIRZ
EftRVvoK0g6O895VkaB2fdYu2EOhW41MbWwtCcoXl/03HPSI7cLmeTTQHNgg
6anWI025b8F2GwmN+kOtxScMKDojMaCqj4TMyBkfr/NGJFfYWZg+kcAo2bH5
3GdEE1g1LlDT+74cWb8buooctNKaxgn6n12Q2nLgf/4L4bNSlw==
      "]], 
     LineBox[CompressedData["
1:eJwBwQI+/SFib1JlAgAAACsAAAACAAAAVgQrdQ3dIkDQqaVQWbfvv5Ym3URq
4yJAYGiGcbs177/XSI8Ux+kiQPAmZ5IdtO6/WI3zs4D2IkAQpCjU4bDtv5iv
pYPd/CJAoGIJ9UMv7b/Y0VdTOgMjQEAh6hWmrey/WRa88vMPI0BgnqtXaqrr
v1qfhDFnKSNAsJgu2/Kj6b+awTYBxC8jQFBXD/xUIum/2+Po0CA2I0DQFfAc
t6Dov1woTXDaQiNA8JKxXnud579dsRWvTVwjQFCNNOIDl+W/YMOmLDSPI0Dg
gTrpFIrhv6DlWPyQlSNAcEAbCncI4b/hBwvM7ZsjQAD/+yrZhuC/Ykxva6eo
I0BA+HrZOgffv2PVN6oawiNA4OyA4Ev62r9m58gnAfUjQADWjO5t4NK/bAvr
Is5aJEAAQyVVkGWlv+t5ugQLYSRAAFBRZ7Pomr9q6InmR2ckQAA4sEiMDIa/
Z8UoqsFzJEAATJphlL6UP2J/ZjG1jCRAAMdfWxIStT9Z8+E/nL4kQEAYqXB2
a8o/RtvYXGoiJUCAwE17KBjdP8VJqD6nKCVAwFN9T08W3j9EuHcg5C4lQCDn
rCN2FN8/QZUW5F07JUDABgbmYYjgPzxPVGtRVCVAUC1ljq+E4j8yw895OIYl
QGB6I99KfeY/sTGfW3WMJUAQRDtJXvzmPzCgbj2ykiVAsA1Ts3F75z8tfQ0B
LJ8lQPCggoeYeeg/KDdLiB+4JUBwx+Ev5nXqP6elGmpcviVAIJH5mfn06j8m
FOpLmcQlQMBaEQQNdOs/JPGIDxPRJUAQ7kDYM3LsP6NfWPFP1yVAsLdYQkfx
7D8izifTjN0lQGCBcKxacO0/H6vGlgbqJUCQFKCAgW7uP1SfuLnK8CVA4Fcs
TFj47j+Kk6rcjvclQFCbuBcvgu8/YZzHYJ36JUDgbgxhdMDvP2npRU4=
      "]], 
     LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAibKvctoAJkDQbgxhdMDvv/R7jiIX
BSZAIN4uUSNq778qcIBF2wsmQLCaooVM4O6/X2RyaJ8SJkBwVxa6dVbuv8pM
Vq4nICZAsND9IshC7b8AQUjR6yYmQFCNcVfxuOy/NTU69K8tJkAASuWLGi/s
v6AdHjo4OyZAUMPM9Gwb67927uXFSFYmQPC1m8YR9Oi/rOLX6AxdJkCQcg/7
Omrov+HWyQvRYyZAQC+DL2Tg579Mv61RWXEmQJCoapi2zOa/IpB13WmMJkAw
mzlqW6Xkv80xBfWKwiZAcIDXDaVW4L8CJvcXT8kmQGB6loScmd+/OBrpOhPQ
JkCA833t7oXev6ICzYCb3SZAYOZMv5Ne3L9405QMrPgmQIDL6mLdD9i/JHUk
JM0uJ0AALE1U4eTOv3u4Q1MPmydAAFAddoyGnD8yXNDwX6EnQADTe++cTaY/
6v9cjrCnJ0AAAemj81euP1pHdslRtCdAgK1hhlA2tz861qg/lM0nQAAEnvd+
pcM/+PMNLBkAKEDgLjwwFt3RP7CXmslpBihAgNTJBmHe0j9oOydnugwoQCB6
V92r39M/2IJAolsZKEBgxXKKQeLVP7cRcxieMihA4Fup5Gzn2T92L9gEI2Uo
QHBEi8zh+OA/LtNkonNrKEBAF9I3h3nhP+Z28T/EcShAEOoYoyz64T9Vvgp7
ZX4oQKCPpnl3++I/NE098aeXKEDg2sEmDf7kP+zwyY74nShAsK0IkrJ+5T+k
lFYsSaQoQICAT/1X/+U/FNxvZ+qwKEAgJt3TogDnP/Nqot0syihAYHH4gDgD
6T+qDi97fdAoQCBEP+zdg+k/YrK7GM7WKEDwFoZXgwTqP9L51FNv4yhAkLwT
Ls4F6z+KnWHxv+koQGCPWplzhus/QkHujhDwKEAwYqEEGQfsP7KIB8qx/ChA
4Acv22MI7T9qLJRnAgMpQLDadUYJie0/ItAgBVMJKUCArbyxrgnuP9pzraKj
DylAUIADHVSK7j+RFzpA9BUpQBBTSoj5Cu8/SLvG3UQcKUDQJZHznovvP6A0
+DXaHilA0CVFwD/A7z9gunxc
      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAkCWQchwlKUDAJUXAP8Dvv7gC4Bjm
KClAgDThNRZz779wpmy2Ni8pQMBhmspw8u6/3s8blQ42KUBAFd/9B2fuv035
ynPmPClAoMgjMZ/b7b8qTCkxlkopQKAvrZfNxOy/5PHlq/VlKUCg/b9kKpfq
v1c9X6G0nClAgJnl/uM75r8+1FGMMgoqQMCiYWauCtu/rP0AawoRKkDACevM
3PPZvxsnsEniFypAgHB0Mwvd2L/4eQ4HkiUqQIA+hwBor9a/sh/LgfFAKkCA
2qyaIVTSvyVrRHewdypAgCTwnSk7w78MAjdiLuUqQAD4xSETPr8/uXcDU+br
KkAAT7LvgsLBP2btz0Oe8ipAAKKBTvzlwz/A2GglDgArQABIIAzvLMg/c6+a
6O0aK0DAya5Dal3QP9pc/m6tUCtAQBXsvk/r2D+H0spfZVcrQMC+U24M/dk/
NEiXUB1eK0BAaLsdyQ7bP44zMDKNaytAALuKfEIy3T9BCmL1bIYrQGCwFJ2a
vOA/qLfFeyy8K0AgVrNajQPlP1UtkmzkwitA4CpnsmuM5T8Co15dnMkrQKD/
GgpKFeY/XI73PgzXK0AgqYK5BifnPw9lKQLs8StAAPxRGIBK6T+82vXyo/gr
QMDQBXBe0+k/aFDC41v/K0BgpbnHPFzqP8I7W8XLDCxAwE4hd/lt6z92Eo2I
qycsQMCh8NVyke0/I4hZeWMuLECAdqQtURruP9D9JWobNSxAQEtYhS+j7j99
c/Ja0zssQAAgDN0NLO8/Kum+S4tCLECg9L807LTvP0ylPKAZQyxA4DHauj/A
7z9Yox2j
      "]], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAALMBc3VtJLEDAMdq6P8Dvv4TUVy37
TyxA4GHYG1c5778xSiQes1YsQCCNJMR4sO6/3r/wDmtdLEBguHBsmifuv4s1
vf8iZCxAoOO8FLye7b84q4nw2mosQOAOCb3dFe2/kpYi0kp4LECAZaENIQTs
v0VtVJUqkyxAoBLSrqfg6b90krsAb5ksQICuY7f6YOm/pLcibLOfLEBASvW/
TeHovwIC8UI8rCxA4IEY0fPh57/Alo3wTcUsQADxXvM/4+W/OsDGS3H3LECA
z+s32OXhvy4TOQK4Wy1AABkLghHW079dOKBt/GEtQMBQLpO31tK/jF0H2UBo
LUBAiFGkXdfRv+un1a/JdC1AAO8vjVOxz7+oPHJd240tQACsSRaEtse/I2ar
uP6/LUAAlvShlAOvvxi5HW9FJC5AAOcbs1gqyD/+Y6cbESsuQIBepxYaVMo/
5A4xyNwxLkAA1jJ6233MP7BkRCF0Py5AwOKkIK9o0D9HEGvTolouQMDRu+cx
vNQ/dme4NwCRLkAAsOl1N2PdP1wSQuTLly5AwGuvJxh43j9CvcuQl54uQIAn
ddn4jN8/DhPf6S6sLkCgT4AeXdvgP6a+BZxdxy5AQMcLgh4F4z/VFVMAu/0u
QGC2IkmhWOc/usDcrIYEL0BAlAWiEePnP6BrZllSCy9AIHLo+oFt6D9swXmy
6RgvQOAtrqxiguk/BG2gZBg0L0CApTkQJKzrP+oXKhHkOi9AYIMcaZQ27D/Q
wrO9r0EvQGBh/8EEwew/nBjHFkdPL0AgHcVz5dXtP4LDUMMSVi9AAPunzFVg
7j9obtpv3lwvQODYiiXG6u4/ThlkHKpjL0Dgtm1+NnXvP5gi2k5ZZy9AIDTO
JUXA7z9OWjf9
      "]], LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAGm93dUFxL0BgjczP6HXvvwAaASIN
eC9AgK/pdnjr7r/mxIrO2H4vQIDRBh4IYe6/zG8Ue6SFL0Cg8yPFl9btv7Ia
nidwjC9AwBVBbCdM7b+YxSfUO5MvQOA3XhO3wey/Yxs7LdOgL0AgfJhh1qzr
v0jGxNmepy9AQJ61CGYi678ucU6Gaq4vQGDA0q/1l+q/+sZh3wG8L0CgBA3+
FIPpv5JyiJEw1y9AAI2BmlNZ57/6zKy4iN0vQKAf5KEU2Oa/YifR3+DjL0BA
skap1VbmvzPcGS6R8C9AgNcLuFdU5b/qolXl+AQwQCAiltVbT+O/jAzngVke
MEBAblUhyIrev87fCbsaUTBAgIVPG9LFzL8CDZzORlQwQADQ2TjWwMq/Njou
4nJXMECAGmRW2rvIv56UUgnLXTBAALB4keKxxL9vSZtXe2owQAC0Qw/mO7m/
ELMs9NuDMEAAjF5gYE+cP1KGTy2dtjBAQJSzGdXs0T+mWfBJubkwQMB/3yA+
6tI/+SyRZtW8MEDAagsop+fTP6DT0p8NwzBAAEFjNnni1T/tIFYSfs8wQIDt
ElMd2Nk/iLtc917oMEBgIznGsuHgP9yO/RN76zBAABnPSWdg4T8vYp4wl+4w
QIAOZc0b3+E/1gjgac/0MEDA+ZDUhNziPyNWY9w/ATFAANDo4lbX5D++8GnB
IBoxQIB8mP/6zOg/EsQK3jwdMUBAci6Dr0vpP2WXq/pYIDFAwGfEBmTK6T8M
Pu0zkSYxQABT8A3Nx+o/XxGOUK0pMUCASIaRgUbrP7LkLm3JLDFAAD4cFTbF
6z9Zi3CmATMxQCApSByfwuw/rF4Rwx02MUCgHt6fU0HtPwAyst85OTFAYBR0
IwjA7T9TBVP8VTwxQOAJCqe8Pu4/ptjzGHI/MUBg/58qcb3uP/qrlDWOQjFA
APU1riU87z9NfzVSqkUxQKDqyzHauu8/Xlv4fc1FMUBggAcwc8DvP6eNXqU=

      "]], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAApGLlFexIMUAggAcwc8Dvv/Qld4vi
SzFAQCoIx7xH779I+Reo/k4xQKA0ckMIye6/m8y4xBpSMUAAP9y/U0ruv0Jz
+v1SWDFA4FOwuOpM7b+PwH1ww2QxQKB9WKoYUuu/KluEVaR9MUAA0aiNdFzn
v1lxthIEgTFAwGGeqPzS5r+Ih+jPY4QxQGDyk8OESea/5bNMSiOLMUDgE3/5
lDblv6AMFT+imDFAwFZVZbUQ478VvqUooLMxQEC5A3rsid2/ACHH+5vpMUCA
oGux37XIvy83+bj77DFAAONBHQCQxr9eTSt2W/AxQAAmGIkgasS/u3mP8Br3
MUAArMRgYR7Av3bSV+WZBDJAAN52QIwbrr/rg+jOlx8yQABjYCIzULM/1uYJ
opNVMkCAAeZpCQPWP8ZUiZy5WDJAAP9vc5YD1z+2wgiX31syQID8+XwjBNg/
lp4HjCtiMkDA9w2QPQXaP1VWBXbDbjJAgO01tnEH3j/UxQBK84cyQKDsQgHt
BeM/xDOARBmLMkCA6weGM4bjP7Sh/z4/jjJAQOrMCnoG5D+Uff4zi5QyQMDn
VhQHB+U/UzX8HSOhMkCg4monIQjnP9Kk9/FSujJAoNiSTVUK6z/CEnfseL0y
QGDXV9Kbius/soD25p7AMkAg1hxX4grsP5Jc9dvqxjJAoNOmYG8L7T+CynTW
EMoyQGDSa+W1i+0/cjj00DbNMkBA0TBq/AvuP2Kmc8tc0DJAAND17kKM7j9R
FPPFgtMyQKDOunOJDO8/QIJywKjWMkAgzX/4z4zvPwwHwPtV2DJA4HsGcSDR
7z8isyj4
      "]], LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAmDymAqPaMkDAewZxINHvvyBecbX0
3DJAQDX2/aJy778QzPCvGuAyQIA2MXlc8u6/ADpwqkDjMkDAN2z0FXLuv/Cn
76Rm5jJAADmnb8/x7b/Qg+6ZsuwyQIA7HWZC8ey/wPFtlNjvMkDAPFjh+3Ds
v7Bf7Y7+8jJAAD6TXLXw67+QO+yDSvkyQGBACVMo8Oq/T/PpbeIFM0CARfU/
Du/ov85i5UESHzNAgE/NGdrs5L/hBKf4lSIzQMAJgHWoXeS/9KZorxkmM0Dg
wzLRds7jvxnr6xwhLTNAYDiYiBOw4r9kc/L3LzszQCAhY/dMc+C/+oP/rU1X
M0CA5fGpf/PXvyalGRqJjzNAALAkgSw1uL85R9vQDJMzQACCul6fu7O/TOmc
h5CWM0AApqB4JISuv3EtIPWXnTNAANzv3d87mb+8tSbQpqszQACEWSR5Lqc/
UsYzhsTHM0CAGr/S0rHHP2Vo9TxIyzNAADL0Y5nuyT94Crfzy84zQIBJKfVf
K8w/nU46YdPVM0DAu8mLdlLQP+jWQDzi4zNAAOozrgPM1D/6eALzZeczQIB1
zvZm6tU/DRvEqenqM0BAAWk/ygjXPzJfRxfx8TNAQBie0JBF2T9FAQnOdPUz
QMCjOBn0Y9o/WKPKhPj4M0CAL9NhV4LbP2pFjDt8/DNAALttqrqg3D99503y
//8zQIBGCPMdv90/pwQOPw==
      "]]}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
t4sSdb/+Gvw7+/bnMwI5duTVll8vWyY4c2l5y72DHNucu947Y/MeRF3VV7Cs
IMeSMwyVWzI+gtbrr+1BOjl2heH9nLx7CWC7Pf/qaDg59jBKuozt5Vdw1QW0
MN8jx3iNGp8Va9eA1IdJB2um5Jh22n3CsjMC47545VF1ckyi6TPVTkwdkHii
dbdelBy7HWtj/yK3AThGxr8tpCHH1Hq7Qpm3m0Fh3ExHwiIZpiGqvo+PaAUn
06PVb34jw3aNVp+riHSDMzUj9PvmZBjlnTTbzZJhUFT4XqNJiwzT6rZSWxcd
A3xvHzgniJFhv/jgX/r4CdC/SZN4sfcfCqcfEj17bBoUDr75M5H+Dyk99fO7
eGUGBFcrmnrd/Yf6vedq491w4EiAOVv6zgHaUxLbu+g9B7aukx6c+HmASN80
W95b40GrdnBHQ+wBqmn7zsIpQwCZwhzHrS0OkFVL+4OuYQLwOngftyR2gG6a
nAk1cieC8xMaS6GkfdRnS3x/ZI4IBLG2S7zl+6jZKd1GS5MEljLtP38M2kcL
MR9pil1IoC5knQka7COqi8Ery94kkHzrmWsv2z4afljxrsKaBJz1hVudhveQ
s2yLMScfCWhLlcjv5+yh1U9pL1w/EwEb9dnohPt7iMpjdTdUgAhws4OkI2p7
iAFobHvYEUBVo+uFGrI95Jbd/OxrIB7E5JEVXm7ZRfS5QQJinnPALuol/UzS
LroYaWM9oz8LlJ1lnB/Z7iJPms98z1ZmAM2F782M0ruoP775+B//aVDEiItU
qdlBGfc/GGo6jIPQhUf45rAd9FZqWepS8zC41sZoYHtpB7FJUCdN7/WDvbiT
NBGT2wgoy2/S4NpA54OmOwKF22i7Y53MLqQB5Jhcbyjy3EaxH4Qa/i5Xgwsc
YeEDNNvonSnZaNfZLCTylwd3r3MLUau0Kb/CVaPVnkJ9sjdbCN9Pf/FnQANK
fdVNIauwhaKp5C70UPcgVx/HW/9tbCJWJ7VE051+BC12fphim+hdh4/HUMMw
4lKPE597tonEj75hJdiPIwKfRIj/lU1k78bJpoabRN+3v06yCG8id3k2yWW/
aRQ/bAhz5jYQjE8lT1+eQbe+jb1TK95A4Sa8iSz6s0g17eG/334bKDU/qO62
x9whP1Hb3dTfQK9N/Z5xBOLRmG1q7RrTBvpLAnvEGwRUrKsg8qx/HaV843nI
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
XFxts8Y3LEUFdn9SFLO5yMVqEcVm1s9UoJZa3mx/hYuTCx21tXJUgGk5vo18
nIvXDcnKSRSogHkh6fWmtVzsLfJxcbxEBdwDflquTufg7+rXOiuqVKBBg272
T56DTc1VCh7W8/hehBsH3Nn4Q3BHzOVWFehdevvdPXcM78gNcjvYpQK5Y9Qz
u9tHcXq3xvFtAyoQuLkpMIK3/wDa/fWtEyrA4op8nCsfwtMme6eezanw7tOF
kjOJg9jCb6bRf0kFlvnaPmp1HsA6bYZhTGEStAlbmdkI9OGsP8schNeTQE6j
Nz0xohvLErP3D0qRIDloITpToRMveK5ZEaVEgkZf4/0shzZsk1I8coFCgpAU
wZvvyS24vd6xcjeLt27rmSy2vAnnbv7o9wNIIPzTdGF+ay3esv/auTp9Ehyq
7veiRVfiu5dU0JPDJOBbsaZc4HAZ/vuwQ97zBAketQ8lLX/+HjtWBS0dNSXB
J4s7X6eN3+KuCY1uZSsSeBUY1k0m5eJ90qOFy+xJUJMWedxo7Qucv/t+XIcL
CfyXzBcb1qRhJYe9V7OvkiCdYBChp5aE792bORHsTQIq64D/vb4YzF+SrHbu
FgmyMp8VHnkRjl3GDMV3hPH69xb/cApu4r51fNNro0mQujJcWGKtOzbQzG4a
e0CCCMmOO2u32uAiK/NXOIkEPyjfnnInDDHpzprw2HQSRDZKB0y6snBcfrGj
80sSEKZj7V8v+1Mi1O94UP8NCTJ9t9TSnSN03FbJkTa/J8GOc4mDKZ4SaJj5
ceV8OQniPMXLrfYAMjK9NtZYRwJFXZ+rQ1qnUOktleq0JhL8R4q78DDCEam+
6kj1/kICHM9Pl1t5HSV2BN007iMBazo0orQ2EInwb7ekjZCgM1Su0+t1JCq8
KnBsdJwE1RSz92nvHyCb75/2JE6TgHLwie+f/idI3CpBzfgXCZSfeoddm01H
pR12SmuWkWHuxXiHAvEVcjqsLlktRAbFmYVH98vykEwl3wpvUTKUUUssdwYV
oOqdjfPqEmTok2EX0EaK0eVX8ezvMmRQZTeLTX4rQ1uUbDufbiWDWahKaza9
CtXHsz6cVSbD0XGfgxXvahEhsP55gzoZJDnXajn6Taj1d1zCLS0ySF+rkgyz
bUG+rufvaO8hg7PwC+dniW2oy/TvxRdHySDV/d1in24nCmr5YH7ehAwUL0uv
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
YBD9D8vK0Rw=
      "]]}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->{613., Automatic},
  PlotRange->{{-20, 20}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.4709722458814363`*^9, 3.471040065853697*^9, 3.471043418554658*^9, 
   3.4710443600955877`*^9, 3.471044450598153*^9, 3.47104450144515*^9, 
   3.4710445872071457`*^9, {3.47104462910454*^9, 3.471044658152565*^9}, 
   3.471044689359603*^9, 3.50612907853389*^9}]
}, Open  ]],

Cell["Here is the Fourier representation:", "Text",
 CellChangeTimes->{{3.471045462631905*^9, 3.471045470117635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FourierCoefficient", "[", 
     RowBox[{
      RowBox[{"Wave", "[", 
       RowBox[{"x", ",", " ", 
        RowBox[{"2", " ", "\[Pi]"}]}], "]"}], ",", " ", "x", ",", " ", "n", 
      ",", 
      RowBox[{"FourierParameters", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"FourierCoefficient", "[", 
     RowBox[{
      RowBox[{"Wave", "[", 
       RowBox[{"x", ",", "  ", 
        RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", " ", "x", ",", " ", "n", 
      ",", 
      RowBox[{"FourierParameters", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"Abs", "[", "%", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "20"}], ",", "20"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", "k", "}"}]}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}]}], "}"}]}]}], "]"}], 
  "//", "Quiet"}]}], "Input",
 CellChangeTimes->{{3.47104383421168*^9, 3.4710439072209053`*^9}, 
   3.47104408330293*^9, {3.471044119165506*^9, 3.4710441329961843`*^9}, {
   3.471044698978743*^9, 3.471044714767769*^9}, {3.471044966985915*^9, 
   3.471044969102975*^9}, {3.4756068803131742`*^9, 3.4756068846801643`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJzt1rFLAnEUB/AjlByFBA2ErkOOU47r9I6GCHxL7UV/QdBWtNVa1NDQ4lRT
DZUkEaFE0BD+hIZahCICaYk2N6t/oMJ3wvs2yA0toSDy4Z2/37vfew9+44ur
80tDmqY9fn9/frsfX72U1rKRleNi1576bOzNTm2csAvqeaR1GKmV2Xk15lHl
bviU7aq5ySdvZqfCdlQzebAbnT5j22pzNPkRdc7ZOZWdiL4fLV+wLfXafFvf
ilbZptrfXqiWSzV2hvO7ZBuczxVb5/2v2Wne74ad4vUb7ASvd8uO8//v2TF+
/oGtcbzF7tS7bgcuSmskn4+RXC9Ocr8EyXxSJPNNk3wfneT7GiTPI0PyvEyS
52mRPO8cyXrYJOvlkKynS7LeeZL9UCDZLx7JfvJJ9psP9fCUJj4FcB7sQv0c
iNvgHNiCepsQz4ANsA79kYZ4CpwAB/3X7vWfjGvgTh1clNZIMgYO+q/d6z/I
F5wG69DfBsQzYBNswTzkIG6DHbAL85OHeAHsgX2YN1/B+mALrIPjaNhPB1tg
91d+YFg//HxIh58PaRPcfz6kw8+H9N/PB+QD7j8f0ga4/3xIh58P6fDzAR7c
Dwb3g8H9YHA/CPIF/9/7wRcfCPu5
   "], {{{}, {}, {}, {}, {}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], LineBox[{91, 1}], LineBox[{92, 2}], 
      LineBox[{93, 3}], LineBox[{94, 4}], LineBox[{95, 5}], LineBox[{96, 6}], 
      LineBox[{97, 7}], LineBox[{98, 8}], LineBox[{99, 9}], 
      LineBox[{100, 10}], LineBox[{101, 11}], LineBox[{102, 12}], 
      LineBox[{103, 13}], LineBox[{104, 14}], LineBox[{105, 15}], 
      LineBox[{106, 16}], LineBox[{107, 17}], LineBox[{108, 18}], 
      LineBox[{109, 19}], LineBox[{110, 20}], LineBox[{111, 21}], 
      LineBox[{112, 22}], LineBox[{113, 23}], LineBox[{114, 24}], 
      LineBox[{115, 25}], LineBox[{116, 26}], LineBox[{117, 27}], 
      LineBox[{118, 28}], LineBox[{119, 29}], LineBox[{120, 30}], 
      LineBox[{121, 31}], LineBox[{122, 32}], LineBox[{123, 33}], 
      LineBox[{124, 34}], LineBox[{125, 35}], LineBox[{126, 36}], 
      LineBox[{127, 37}], LineBox[{128, 38}], LineBox[{129, 39}], 
      LineBox[{130, 40}]}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], LineBox[{81, 41}], 
      LineBox[{82, 45}], LineBox[{83, 49}], LineBox[{84, 53}], 
      LineBox[{85, 57}], LineBox[{86, 64}], LineBox[{87, 68}], 
      LineBox[{88, 72}], LineBox[{89, 76}], LineBox[{90, 80}]}}, {{}, 
     {RGBColor[0, 0, 1], 
      PointBox[{131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 
       157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 
       170}]}, 
     {RGBColor[1, 0, 0], 
      PointBox[{171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
       183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 
       197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
       210}]}, {}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["k", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.4710438845636263`*^9, 3.471044087859714*^9, {3.4710441237209873`*^9, 
   3.471044137303657*^9}, {3.471044705176964*^9, 3.471044718774373*^9}, 
   3.471044972938189*^9, 3.475606887514536*^9, 3.506129080789201*^9}]
}, Open  ]],

Cell["\<\
This is interesting! Remember how this graph tells us what mixtures of \
sinusoids to use, and notice how function with the shorter period (red) \
doesn't \"use\" all of the wavenumbers available to it.  In other words, \
whereas to construct the shorter period (red) wave, we only need to use \
sin(4x), sin(8x), sin(12x), and so on, we need to use a more complete set of \
sines (sin x, sin 2x, sin3x, ...) in order to construct the longer period \
(blue) wave.  To see if this is mere coincidence, we can repeat this \
experiment for waves of even shorter periods:\
\>", "Text",
 CellChangeTimes->{{3.471045474445414*^9, 3.471045484254756*^9}, {
  3.471045550000971*^9, 3.471045567159815*^9}, {3.471045820753647*^9, 
  3.471045928800397*^9}, {3.471045960431203*^9, 3.4710460471829844`*^9}, {
  3.4710466960681458`*^9, 3.471046748468396*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FourierCoefficient", "[", 
      RowBox[{
       RowBox[{"Wave", "[", 
        RowBox[{"x", ",", " ", "\[Pi]"}], "]"}], ",", " ", "x", ",", " ", "n",
        ",", 
       RowBox[{"FourierParameters", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"FourierCoefficient", "[", 
      RowBox[{
       RowBox[{"Wave", "[", 
        RowBox[{"x", ",", " ", 
         RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ",", " ", "x", ",", " ", "n", 
       ",", 
       RowBox[{"FourierParameters", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"FourierCoefficient", "[", 
      RowBox[{
       RowBox[{"Wave", "[", 
        RowBox[{"x", ",", " ", 
         RowBox[{"\[Pi]", "/", "5"}]}], "]"}], ",", " ", "x", ",", " ", "n", 
       ",", 
       RowBox[{"FourierParameters", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"FourierCoefficient", "[", 
      RowBox[{
       RowBox[{"Wave", "[", 
        RowBox[{"x", ",", " ", 
         RowBox[{"\[Pi]", "/", "7"}]}], "]"}], ",", " ", "x", ",", " ", "n", 
       ",", 
       RowBox[{"FourierParameters", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]}], "}"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DiscretePlot", "[", 
   RowBox[{
    RowBox[{"Abs", "[", "%", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", "k", "}"}]}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "1", ",", "0"}], "]"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "0"}], "]"}], "}"}]}], "}"}]}]}], "]"}], 
  "//", "Quiet"}]}], "Input",
 CellChangeTimes->{{3.47104415759336*^9, 3.471044212730804*^9}, {
   3.471044243779608*^9, 3.47104426587243*^9}, {3.471044305276106*^9, 
   3.471044323249688*^9}, {3.471044841593357*^9, 3.471044848759266*^9}, 
   3.4710448957692547`*^9, {3.471044993317019*^9, 3.4710450272592278`*^9}, {
   3.47104532238911*^9, 3.4710453356283913`*^9}, {3.47560690038356*^9, 
   3.475606931316495*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
+mWzftmsXzbrl+X3mvXLZv3y96J++V9ltnJi
   "], {{{}, {}, {}, {}, {}, {}, {}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], LineBox[{667, 1}], LineBox[{668, 3}],
       LineBox[{669, 5}], LineBox[{670, 7}], LineBox[{671, 9}], 
      LineBox[{672, 11}], LineBox[{673, 13}], LineBox[{674, 15}], 
      LineBox[{675, 17}], LineBox[{676, 19}], LineBox[{677, 21}], 
      LineBox[{678, 23}], LineBox[{679, 25}], LineBox[{680, 27}], 
      LineBox[{681, 29}], LineBox[{682, 31}], LineBox[{683, 33}], 
      LineBox[{684, 35}], LineBox[{685, 37}], LineBox[{686, 39}], 
      LineBox[{687, 41}], LineBox[{688, 43}], LineBox[{689, 45}], 
      LineBox[{690, 47}], LineBox[{691, 49}], LineBox[{692, 52}], 
      LineBox[{693, 54}], LineBox[{694, 56}], LineBox[{695, 58}], 
      LineBox[{696, 60}], LineBox[{697, 62}], LineBox[{698, 64}], 
      LineBox[{699, 66}], LineBox[{700, 68}], LineBox[{701, 70}], 
      LineBox[{702, 72}], LineBox[{703, 74}], LineBox[{704, 76}], 
      LineBox[{705, 78}], LineBox[{706, 80}], LineBox[{707, 82}], 
      LineBox[{708, 84}], LineBox[{709, 86}], LineBox[{710, 88}], 
      LineBox[{711, 90}], LineBox[{712, 92}], LineBox[{713, 94}], 
      LineBox[{714, 96}], LineBox[{715, 98}], LineBox[{716, 100}]}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0.2], LineBox[{583, 101}], 
      LineBox[{584, 102}], LineBox[{585, 103}], LineBox[{586, 104}], 
      LineBox[{587, 105}], LineBox[{588, 107}], LineBox[{589, 108}], 
      LineBox[{590, 109}], LineBox[{591, 110}], LineBox[{592, 111}], 
      LineBox[{593, 113}], LineBox[{594, 114}], LineBox[{595, 115}], 
      LineBox[{596, 116}], LineBox[{597, 117}], LineBox[{598, 119}], 
      LineBox[{599, 120}], LineBox[{600, 121}], LineBox[{601, 122}], 
      LineBox[{602, 123}], LineBox[{603, 125}], LineBox[{604, 126}], 
      LineBox[{605, 127}], LineBox[{606, 128}], LineBox[{607, 129}], 
      LineBox[{608, 131}], LineBox[{609, 132}], LineBox[{610, 133}], 
      LineBox[{611, 134}], LineBox[{612, 135}], LineBox[{613, 137}], 
      LineBox[{614, 138}], LineBox[{615, 139}], LineBox[{616, 140}], 
      LineBox[{617, 141}], LineBox[{618, 143}], LineBox[{619, 144}], 
      LineBox[{620, 145}], LineBox[{621, 146}], LineBox[{622, 147}], 
      LineBox[{623, 149}], LineBox[{624, 150}], LineBox[{625, 151}], 
      LineBox[{626, 152}], LineBox[{627, 154}], LineBox[{628, 155}], 
      LineBox[{629, 156}], LineBox[{630, 157}], LineBox[{631, 158}], 
      LineBox[{632, 160}], LineBox[{633, 161}], LineBox[{634, 162}], 
      LineBox[{635, 163}], LineBox[{636, 164}], LineBox[{637, 166}], 
      LineBox[{638, 167}], LineBox[{639, 168}], LineBox[{640, 169}], 
      LineBox[{641, 170}], LineBox[{642, 172}], LineBox[{643, 173}], 
      LineBox[{644, 174}], LineBox[{645, 175}], LineBox[{646, 176}], 
      LineBox[{647, 178}], LineBox[{648, 179}], LineBox[{649, 180}], 
      LineBox[{650, 181}], LineBox[{651, 182}], LineBox[{652, 184}], 
      LineBox[{653, 185}], LineBox[{654, 186}], LineBox[{655, 187}], 
      LineBox[{656, 188}], LineBox[{657, 190}], LineBox[{658, 191}], 
      LineBox[{659, 192}], LineBox[{660, 193}], LineBox[{661, 194}], 
      LineBox[{662, 196}], LineBox[{663, 197}], LineBox[{664, 198}], 
      LineBox[{665, 199}], LineBox[{666, 200}]}, {}, 
     {Hue[0.1421359549995791, 0.6, 0.6], Opacity[0.2], LineBox[{493, 201}], 
      LineBox[{494, 202}], LineBox[{495, 203}], LineBox[{496, 204}], 
      LineBox[{497, 205}], LineBox[{498, 207}], LineBox[{499, 208}], 
      LineBox[{500, 209}], LineBox[{501, 210}], LineBox[{502, 211}], 
      LineBox[{503, 212}], LineBox[{504, 213}], LineBox[{505, 214}], 
      LineBox[{506, 215}], LineBox[{507, 217}], LineBox[{508, 218}], 
      LineBox[{509, 219}], LineBox[{510, 220}], LineBox[{511, 221}], 
      LineBox[{512, 222}], LineBox[{513, 223}], LineBox[{514, 224}], 
      LineBox[{515, 225}], LineBox[{516, 227}], LineBox[{517, 228}], 
      LineBox[{518, 229}], LineBox[{519, 230}], LineBox[{520, 231}], 
      LineBox[{521, 232}], LineBox[{522, 233}], LineBox[{523, 234}], 
      LineBox[{524, 235}], LineBox[{525, 237}], LineBox[{526, 238}], 
      LineBox[{527, 239}], LineBox[{528, 240}], LineBox[{529, 241}], 
      LineBox[{530, 242}], LineBox[{531, 243}], LineBox[{532, 244}], 
      LineBox[{533, 245}], LineBox[{534, 247}], LineBox[{535, 248}], 
      LineBox[{536, 249}], LineBox[{537, 250}], LineBox[{538, 251}], 
      LineBox[{539, 252}], LineBox[{540, 253}], LineBox[{541, 254}], 
      LineBox[{542, 256}], LineBox[{543, 257}], LineBox[{544, 258}], 
      LineBox[{545, 259}], LineBox[{546, 260}], LineBox[{547, 261}], 
      LineBox[{548, 262}], LineBox[{549, 263}], LineBox[{550, 264}], 
      LineBox[{551, 266}], LineBox[{552, 267}], LineBox[{553, 268}], 
      LineBox[{554, 269}], LineBox[{555, 270}], LineBox[{556, 271}], 
      LineBox[{557, 272}], LineBox[{558, 273}], LineBox[{559, 274}], 
      LineBox[{560, 276}], LineBox[{561, 277}], LineBox[{562, 278}], 
      LineBox[{563, 279}], LineBox[{564, 280}], LineBox[{565, 281}], 
      LineBox[{566, 282}], LineBox[{567, 283}], LineBox[{568, 284}], 
      LineBox[{569, 286}], LineBox[{570, 287}], LineBox[{571, 288}], 
      LineBox[{572, 289}], LineBox[{573, 290}], LineBox[{574, 291}], 
      LineBox[{575, 292}], LineBox[{576, 293}], LineBox[{577, 294}], 
      LineBox[{578, 296}], LineBox[{579, 297}], LineBox[{580, 298}], 
      LineBox[{581, 299}], LineBox[{582, 300}]}, {}, 
     {Hue[0.37820393249936934`, 0.6, 0.6], Opacity[0.2], LineBox[{401, 301}], 
      LineBox[{402, 303}], LineBox[{403, 304}], LineBox[{404, 305}], 
      LineBox[{405, 306}], LineBox[{406, 307}], LineBox[{407, 308}], 
      LineBox[{408, 309}], LineBox[{409, 310}], LineBox[{410, 311}], 
      LineBox[{411, 312}], LineBox[{412, 313}], LineBox[{413, 314}], 
      LineBox[{414, 315}], LineBox[{415, 317}], LineBox[{416, 318}], 
      LineBox[{417, 319}], LineBox[{418, 320}], LineBox[{419, 321}], 
      LineBox[{420, 322}], LineBox[{421, 323}], LineBox[{422, 324}], 
      LineBox[{423, 325}], LineBox[{424, 326}], LineBox[{425, 327}], 
      LineBox[{426, 328}], LineBox[{427, 329}], LineBox[{428, 331}], 
      LineBox[{429, 332}], LineBox[{430, 333}], LineBox[{431, 334}], 
      LineBox[{432, 335}], LineBox[{433, 336}], LineBox[{434, 337}], 
      LineBox[{435, 338}], LineBox[{436, 339}], LineBox[{437, 340}], 
      LineBox[{438, 341}], LineBox[{439, 342}], LineBox[{440, 343}], 
      LineBox[{441, 345}], LineBox[{442, 346}], LineBox[{443, 347}], 
      LineBox[{444, 348}], LineBox[{445, 349}], LineBox[{446, 350}], 
      LineBox[{447, 351}], LineBox[{448, 352}], LineBox[{449, 353}], 
      LineBox[{450, 354}], LineBox[{451, 355}], LineBox[{452, 356}], 
      LineBox[{453, 358}], LineBox[{454, 359}], LineBox[{455, 360}], 
      LineBox[{456, 361}], LineBox[{457, 362}], LineBox[{458, 363}], 
      LineBox[{459, 364}], LineBox[{460, 365}], LineBox[{461, 366}], 
      LineBox[{462, 367}], LineBox[{463, 368}], LineBox[{464, 369}], 
      LineBox[{465, 370}], LineBox[{466, 372}], LineBox[{467, 373}], 
      LineBox[{468, 374}], LineBox[{469, 375}], LineBox[{470, 376}], 
      LineBox[{471, 377}], LineBox[{472, 378}], LineBox[{473, 379}], 
      LineBox[{474, 380}], LineBox[{475, 381}], LineBox[{476, 382}], 
      LineBox[{477, 383}], LineBox[{478, 384}], LineBox[{479, 386}], 
      LineBox[{480, 387}], LineBox[{481, 388}], LineBox[{482, 389}], 
      LineBox[{483, 390}], LineBox[{484, 391}], LineBox[{485, 392}], 
      LineBox[{486, 393}], LineBox[{487, 394}], LineBox[{488, 395}], 
      LineBox[{489, 396}], LineBox[{490, 397}], LineBox[{491, 398}], 
      LineBox[{492, 400}]}}, {{}, 
     {RGBColor[0, 0, 1], PointBox[CompressedData["
1:eJwNw1VSAlAAAMAHqNggdiAg2HkWj+D4rSe1Fbu7u0Xdndnc1OzkTCSEMO1c
NIR5F1x0yWVXXHXNoutuuOmW2+646577HnjokceeeOqZ51546ZXX3njrnfc+
+OiTz7746pvvfvjpl9/+WPLXP0MshIhRY5ZZboVxK62y2hprrbPehEkbTNlo
k8222Gqb7XbYaZdpu82YNWePeQv22me/Aw465LAjjjrmuBP+A0RSNXs=
       "]]}, 
     {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJwNw4c2AlAAANDn+BKfgGyRLbJCKDPZlFn23mR/sHvPuVXZQjJfEULIWV0Z
Qo21Rqyz3gYbbbLZFluN2ma7MTvstMtue+y1z37jDjhowiGHHXHUMZOOO+Gk
Kaecdsa0GWedc94FF10y67I5V1x1zXU33HTLbXfMW3DXPfc98NAji5Y89sRT
zzz3wkuvvPbGW++898FHn3z2xVfffLfsh59++e2Pv/75D4zQKb4=
       "]]}, 
     {RGBColor[0, 1, 0], PointBox[CompressedData["
1:eJwNw1VSAlAAAMDneBKvxBEcv/E0NnaLjQV2J7aCYnd3fbo7swWFxZFoXgih
yJL8EEots9wKK60yZrU11lpnvQ022mSzLbbaZrsdxu20y2577LXPfhMOOOiQ
w46YNOWoY4474aRTTjvjrHPOu+CiSy674qprpl13w0233HbHXffcN2PWAw/N
eeSxJ5565rkXXnrltTfeeue9Dz765LMvvvrmux9++uW3P/765z9hQVDO
       "]]}, 
     {RGBColor[0, 0, 0], PointBox[CompressedData["
1:eJwNw1c3AmAAANAvRWRlZUtWdvZe2YTIHk8dz/x+273n3Ez5vfQWCSG8+hEN
4dMvv/3x1z9DLISIFUaNWWmVcautMWGtddbbYKNJm2y2xVbbTNluh5122W2P
vfaZtt+MAw465LAjZh11zHEnnHTKaXPOOOuc8y646JLLrrjqmutuuOmW2+6Y
d9c99z3w0COPPfHUgmeee2HRS68see2Nt95574OPPvnsi/8ppRs7
       "]]}, {}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["k", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.4710441730197372`*^9, 3.471044272761188*^9}, {
   3.471044310630521*^9, 3.4710443272456703`*^9}, 3.4710448658368187`*^9, 
   3.47104489910222*^9, 3.471045000891605*^9, 3.471045039200183*^9, 
   3.471045358260313*^9, 3.475606966056313*^9, 3.5061291050107937`*^9}]
}, Open  ]],

Cell[TextData[{
 "Shown above are the Fourier representations of sawtooth waves of period \
\[Pi]/7 (in black), \[Pi]/5 (in green), \[Pi]/3 (in red) and \[Pi] (in blue). \
 It's true! The shorter the period, the sparser the Fourier representation.  \
Conversely, the longer the period of the function we're trying to represent, \
the ",
 StyleBox["denser",
  FontSlant->"Italic"],
 " the Fourier representation -- the spikes populate the gaps more \
completely, and as a whole the tall spikes are more \"centrally condensed\" \
towards the smaller values of k.  This makes a lot of sense intuitively if \
you think about what a Fourier representation is.  Remember that the graph of \
spikes is a recipe that tells us how much of each sine to add to our mixture \
that becomes the original function, and that the smaller the wave number of a \
sine wave, the longer its period (e.g. sin x has a period of 2 \[Pi] whereas \
sin 2x --which has a larger wavenumber of 2 -- has a period of \[Pi]).  What \
this pattern tells us is that if my original function has a long period, then \
to reconstruct it with sines and cosines I need to use sinusoids with longer \
periods i.e. smaller wavenumber k.  Thus, the more \"stretched out\" a \
function is in real space (the longer its period in real space), the more \
centralized/\"squished\" it is in Fourier space."
}], "Text",
 CellChangeTimes->{{3.471046755834999*^9, 3.471046771909445*^9}, {
  3.471046887492754*^9, 3.4710470911547403`*^9}, {3.471047388284936*^9, 
  3.47104742163748*^9}, {3.471047580291815*^9, 3.471047673128456*^9}, {
  3.471047781400859*^9, 3.471047878717914*^9}}],

Cell[TextData[{
 "Now here's the big conceptual leap.  Let's suppose we go crazy with this \
exercise, and keep increasing the period of the function that we're find \
Fourier series for.  As we keep doing this, the spikes populate the k-axis in \
Fourier space more and more densely (imagine the blue dots in the plot above \
getting more and more squished together so that they're like trees in a thick \
forest).  What if we increase the period of the wave to infinity? Huh? What \
does it mean to have a period equal to infinity? A period, remember, is how \
far we have to go in real space before the wave repeats itself.  If the \
period is infinity, then it takes infinitely long before the wave repeats \
itself, which is another way of saying that it ",
 StyleBox["never repeats itself",
  FontSlant->"Italic"],
 ".  A \"periodic\" function with an infinite period is just an aperiodic \
function."
}], "Text",
 CellChangeTimes->{{3.471047891964726*^9, 3.471047905478733*^9}, {
  3.471048093850017*^9, 3.471048223545167*^9}, {3.4710483504341383`*^9, 
  3.4710483519539824`*^9}, {3.471048438799518*^9, 3.4710484599658937`*^9}, {
  3.471048511287159*^9, 3.471048627190352*^9}, {3.471048832749572*^9, 
  3.471048890269329*^9}}],

Cell[TextData[{
 "So what ",
 StyleBox["does",
  FontSlant->"Italic"],
 " happen to the Fourier representation as we increase the period to \
infinity? As we increase the period of the wave to infinity, the spikes get \
closer to closer together, and what used to be a discrete set of spikes gets \
infinitely squished together and get so dense that they form ",
 StyleBox["a continuous function",
  FontSlant->"Italic"],
 ".  All the gaps between the spikes disappear as the limit to infinity is \
taken.  What this means is that whereas a periodic function can be \
represented by a ",
 StyleBox["discrete",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " set of sines and cosines (e.g. sin x, sin 2x, sin 3x, and so on, but not \
anything like sin 1.3x), an aperiodic function (i.e. functions in general) \
can only be formed from sums of sines and cosines if we add together a ",
 StyleBox["continuous",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " mixture (i.e. we need not only sin x and sin 2x, but also sin 1.5x, sin \
1.01x, sin 1.0001x -- ",
 StyleBox["everything",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ")."
}], "Text",
 CellChangeTimes->{{3.4710488919433813`*^9, 3.4710490282988*^9}, {
  3.471049229718601*^9, 3.471049241490505*^9}, {3.471049741313674*^9, 
  3.471049855225543*^9}, {3.471050010517161*^9, 3.471050045854931*^9}}],

Cell[TextData[{
 "What we've just described is the idea behind ",
 StyleBox["Fourier Transforms",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ".  The continuous function that came out of squishing the spikes together \
is known as the Fourier transform of the original function."
}], "Text",
 CellChangeTimes->{{3.4710501356421013`*^9, 3.4710501433460503`*^9}, {
  3.471050186252108*^9, 3.471050202813239*^9}, {3.47105023312912*^9, 
  3.4710502335049477`*^9}, {3.4710524921776733`*^9, 3.471052503485668*^9}, {
  3.471053072553479*^9, 3.471053090077691*^9}}],

Cell["Let's look at a few examples.  We'll start with a sine wave:", "Text",
 CellChangeTimes->{{3.471053112684552*^9, 3.4710531176849947`*^9}, {
  3.471053407855185*^9, 3.4710534176370277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "x", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.471053419210136*^9, 3.4710534362475433`*^9}, {
  3.4710570715380793`*^9, 3.4710570739573402`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
0P8DAC5/Fg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {-0.9999999784391316, 0.9999999998606331}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4710534366326942`*^9, 3.47105707524816*^9, 
  3.506129105134359*^9}]
}, Open  ]],

Cell["Now we take the Fourier transform:", "Text",
 CellChangeTimes->{{3.471053442252302*^9, 3.4710534500854273`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransform", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x", ",", "k", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.471053517599552*^9, 3.4710535469130793`*^9}, {
   3.471054025835967*^9, 3.471054027218647*^9}, 3.471054164291054*^9, {
   3.475606810416651*^9, 3.475606813530497*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "k"}], "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"1", "+", "k"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.471053524366935*^9, 3.4710535476365223`*^9}, 
   3.4710541650238323`*^9, 3.47560696628581*^9, 3.506129105319722*^9}]
}, Open  ]],

Cell["\<\
What are we to make of this? Recall that the Fourier transform is a function \
that tells us how much of each type of sinusoid to take.  This Fourier \
transform consists of delta functions at k=1 and k= -1.  This means that to \
reconstruct sin x, we just need k= +/-1 sinusoids (sin x and sin(-x) )and \
nothing else, which makes sense -- the point of a Fourier series/transform is \
to represent a function in terms of sinusoids, and if the original function \
is already a sine then the only ingredient we need from our arsenal of sines \
and cosines is \"itself\".  (Don't worry about the fact that we need both sin \
x and sin (-x), and the funny imaginary amplitudes -- those are just \
artifacts of the fact that Fourier transforms are defined using complex \
exponentials instead of sines and cosines).\
\>", "Text",
 CellChangeTimes->{{3.471053986771358*^9, 3.471054015279875*^9}, {
  3.4710541683761806`*^9, 3.471054251992326*^9}, {3.4710549020371923`*^9, 
  3.471054959140222*^9}, {3.471054998369486*^9, 3.471055052954891*^9}, {
  3.471055268624837*^9, 3.4710553313390207`*^9}}],

Cell["Let's try another example.  What about a constant?", "Text",
 CellChangeTimes->{{3.471055351122993*^9, 3.4710553567551937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"1", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", 
     RowBox[{"-", "10"}], ",", " ", "10"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "x", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.471055366257394*^9, {3.4710570788492527`*^9, 3.471057080525362*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQXfvc99P//8oHGMDgg/2UkgTvhtkI/mrG4iUM5gg+
a6q7kWSsEpwvfONozqKJinB+0OFZyZqnFOD86ve2ORMey8P5O8pnZa33l4Pz
/SaFKvybKQPnu8/d6+fxRgrOX3a88lpxtCScH9cyRfT8CnE4vy6BeR23sBic
z6Arv9+5VQTOv9U9s331VSE4X4YrY+UXJ0E4P9tUi/W2DD+cn2x+b8Xhw9xw
vlaF1f+8JRxw/sK7wUcqHVnh/OeNojbuEkxw/q6pGq4vwv7uh/ENXt78oj/3
G5zvsus259+wD3B+wcr1PwSFH8P5YWnKCy/VnITzj5+52WUcfMIexrfSPbgp
YPpjOJ+pTPROiuQHOJ+dJ6Ax6d03OL/5wTXnosV/4fwNs9sC6j4xOsD4+YtS
BJ6EscL5cVmzZNsbOeD8zsAyS+M53HA+i8jUZ/W/+OD866dbP7TwC8L5odVJ
ZrMOC8H5Odyvlc5FicD58quPTWN7JQrnV+9wDuafLQ7nFyzL2WamLwnn8zCZ
J+k9lYLzXXNDpmpNloHzJXbK5ruqyMH5k4o6Jhpcl4fzg9r8deduU4DztaJb
QpfUKsL5155xLpocqgTnn0t66igkrwznqy2VlOrsR/Ch+QXOBwAXN/oI
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.471055367097328*^9, 3.471057080911778*^9, 
  3.506129111143674*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FourierTransform", "[", 
  RowBox[{"1", ",", "x", ",", "k", ",", 
   RowBox[{"FourierParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.4710553844176702`*^9, 3.475606981886752*^9}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]], " ", 
  RowBox[{"DiracDelta", "[", "k", "]"}]}]], "Output",
 CellChangeTimes->{3.4710553851106253`*^9, 3.4756069824947557`*^9, 
  3.506129113681179*^9}]
}, Open  ]],

Cell["\<\
This time we get a delta function centered at k=0, which means that our \
recipe for reconstructing the constant function y =1 is to take a sinusoid \
with wavenumber k=0 i.e. a sinusoid that doesn't vary at all.  That sounds \
like a constant! (Again, don't worry about the constant factor up front).\
\>", "Text",
 CellChangeTimes->{{3.4710553865518103`*^9, 3.471055391268392*^9}, {
  3.471055872643599*^9, 3.471055884889326*^9}, {3.4710562437516947`*^9, 
  3.471056269702135*^9}, {3.471056351572288*^9, 3.471056430651732*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples of Fourier Series and Transforms", "Section",
 CellChangeTimes->{{3.470988455361394*^9, 3.4709884804957523`*^9}, {
  3.4756071185322313`*^9, 3.4756071250179*^9}, {3.4756073785188093`*^9, 
  3.475607380062437*^9}}],

Cell[CellGroupData[{

Cell["\<\
Fourier Series: Superposing Plane Waves makes a Sharply Peaked Function\
\>", "Subsection",
 CellChangeTimes->{{3.47523589638136*^9, 3.475235910491596*^9}, {
  3.475607147712825*^9, 3.475607187525316*^9}, {3.47560764723612*^9, 
  3.4756076566675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{
          FractionBox["1", 
           SqrtBox[
            RowBox[{"2", "\[Pi]", " ", "nMax"}]]], 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"n", "=", "1"}], "nMax"], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "n", " ", "x"}]]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "\[Pi]", ",", 
          RowBox[{"3", "*", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           FractionBox["1", 
            SqrtBox[
             RowBox[{"2", "\[Pi]", " ", "nMax"}]]], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"n", "=", "1"}], "nMax"], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "n", " ", "x"}]]}]}], "]"}], "2"], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "\[Pi]", ",", 
          RowBox[{"3", "*", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"nMax", ",", "1", ",", "40", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.474596374765128*^9, 3.4745964361295547`*^9}, {
   3.474596516381783*^9, 3.47459652434902*^9}, {3.474673109110868*^9, 
   3.47467314835856*^9}, {3.4746736956357317`*^9, 3.474673702913896*^9}, {
   3.474673781268325*^9, 3.474673834074115*^9}, {3.4747148449014177`*^9, 
   3.474714994361271*^9}, {3.474716710034511*^9, 3.4747167119078074`*^9}, {
   3.474724126624721*^9, 3.474724193859788*^9}, {3.475235887935041*^9, 
   3.4752358936312733`*^9}, 3.4752359302272663`*^9, {3.4756072199575043`*^9, 
   3.4756073424351473`*^9}, {3.47560739058461*^9, 3.475607450844041*^9}, {
   3.475607487273738*^9, 3.47560750452923*^9}, {3.4756076636783323`*^9, 
   3.475607971655932*^9}, {3.506129285414884*^9, 3.506129298801249*^9}, {
   3.506129356038394*^9, 3.506129549402134*^9}, {3.5061296965715857`*^9, 
   3.506129707209935*^9}, {3.506129806541018*^9, 3.506129818217911*^9}, {
   3.506129854184326*^9, 3.5061298581579523`*^9}, {3.538220482662559*^9, 
   3.538220658290956*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`nMax$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`nMax$$], 1, 40, 1}}, Typeset`size$$ = {
    1216., {189., 193.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`nMax$1358$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`nMax$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`nMax$$, $CellContext`nMax$1358$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot[
         Re[(1/(2 Pi $CellContext`nMax$$)^Rational[1, 2]) 
          Sum[E^(I $CellContext`n $CellContext`x), {$CellContext`n, 
             1, $CellContext`nMax$$}]], {$CellContext`x, Pi, 3 Pi}, PlotRange -> 
         All], 
        Plot[
        Abs[(1/(2 Pi $CellContext`nMax$$)^Rational[1, 2]) 
           Sum[E^(I $CellContext`n $CellContext`x), {$CellContext`n, 
              1, $CellContext`nMax$$}]]^2, {$CellContext`x, Pi, 3 Pi}, 
         PlotRange -> All]}, 
      "Specifications" :> {{$CellContext`nMax$$, 1, 40, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1259., {244., 250.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.4745964073064528`*^9, 3.4745964364822903`*^9}, {
   3.4745965209819927`*^9, 3.4745965251063623`*^9}, {3.474673124469467*^9, 
   3.474673149198432*^9}, 3.4746737040084543`*^9, {3.4746738063044767`*^9, 
   3.474673834798366*^9}, 3.474714866928349*^9, {3.47471491422466*^9, 
   3.4747150005409927`*^9}, 3.474716712499652*^9, {3.4747241283422213`*^9, 
   3.4747242012472363`*^9}, {3.475607387830121*^9, 3.47560746132423*^9}, {
   3.475607493784368*^9, 3.4756075095685043`*^9}, {3.475607670920661*^9, 
   3.475607691606227*^9}, 3.4756077282004843`*^9, {3.475607760909431*^9, 
   3.475607972212666*^9}, 3.475615662481103*^9, 3.4766624016959467`*^9, {
   3.506129279457157*^9, 3.5061292996604757`*^9}, {3.506129576453456*^9, 
   3.50612963981619*^9}, 3.506129714346198*^9, {3.5061297648451653`*^9, 
   3.5061298204396877`*^9}, {3.506129858922923*^9, 3.506129920946642*^9}, {
   3.5382204877255287`*^9, 3.538220659404043*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fourier Transforms: A Discontinuous Example (One Small Step for a \
Wavefunction)\
\>", "Subsection",
 CellChangeTimes->{{3.47523589638136*^9, 3.475235910491596*^9}, {
  3.475607147712825*^9, 3.475607187525316*^9}, {3.47560764723612*^9, 
  3.4756076566675*^9}, {3.475608028081641*^9, 3.475608051064279*^9}, {
  3.475614065227063*^9, 3.4756141010283947`*^9}, {3.475614146783976*^9, 
  3.475614148695499*^9}, {3.475614211204852*^9, 3.475614218035236*^9}, {
  3.475694741158002*^9, 3.475694790818507*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"In", " ", "what", " ", "follows"}], ",", " ", 
    RowBox[{
    "it", " ", "will", " ", "be", " ", "helpful", " ", "to", " ", "alert", 
     " ", "Mathematica", " ", "to", " ", "which", " ", "of", " ", "our", " ", 
     "\[IndentingNewLine]", "variables", " ", "are", " ", "real"}], ",", " ", 
    "positive", ",", " ", 
    RowBox[{
     RowBox[{"etc", ".", "  ", "This"}], " ", "helps", " ", "keep", " ", 
     "MMatica", " ", "from", " ", "panicing", " ", "too", " ", 
     RowBox[{"often", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Psi]o", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Psi]o", ">", "0"}], ",", 
      RowBox[{"x", "\[Element]", "Reals"}], ",", 
      RowBox[{"xo", "\[Element]", "Reals"}], ",", 
      RowBox[{"k", "\[Element]", "Reals"}], ",", 
      RowBox[{"ko", "\[Element]", "Reals"}], ",", 
      RowBox[{"L", "\[Element]", "Reals"}], ",", 
      RowBox[{"L", ">", "0"}], ",", 
      RowBox[{"\[Epsilon]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[Epsilon]", ">", "0"}], ",", 
      RowBox[{"\[CapitalLambda]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[CapitalLambda]", ">", "0"}], ",", 
      RowBox[{"\[HBar]", "\[Element]", "Reals"}], ",", 
      RowBox[{"\[HBar]", ">", "0"}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.47560868401501*^9, {3.475608877610667*^9, 3.475608880672348*^9}, {
   3.475609601400813*^9, 3.475609603598228*^9}, {3.475610734380868*^9, 
   3.475610741522072*^9}, {3.4756153617484913`*^9, 3.4756153725621862`*^9}, {
   3.475615697135446*^9, 3.4756157008044252`*^9}, {3.4756164266593657`*^9, 
   3.475616430410474*^9}, {3.475616556779439*^9, 3.475616561337903*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"spell\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"New symbol name \
\\\\\\\\\\\\\\\"\\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\[Psi]o\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\\\\\\\\" is similar to \
existing symbols \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\[Psi], \[Psi]r, \
\[Psi]z}\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" and may \
be misspelled.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/spell\\\", ButtonNote -> \
\\\"General::spell\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.476662405444475*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"So", "!"}], "  ", "First", " ", "we", " ", "need", " ", "to", 
     " ", "build", " ", "a", " ", "\"\<step function\>\"", " ", 
     RowBox[{"function", ".", "\[IndentingNewLine]", 
      RowBox[{"Step", "[", 
       RowBox[{"\[Epsilon]", ",", "x"}], "]"}]}], " ", "defines", " ", "a", 
     " ", "step", " ", "of", " ", "width", " ", "\[Epsilon]", " ", "around", 
     " ", "the", " ", 
     RowBox[{"origin", ".", "\[IndentingNewLine]", "It"}], " ", "is", " ", 
     "normalized", " ", "so", " ", "that", " ", 
     RowBox[{"it", "'"}], "s", " ", "norm"}], "-", 
    RowBox[{"squared", " ", "integrates", " ", "to", " ", "1."}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Step", "[", 
      RowBox[{"\[Epsilon]_", ",", "x_"}], "]"}], "=", 
     FractionBox[
      RowBox[{
       RowBox[{"UnitStep", "[", 
        RowBox[{"x", "+", 
         FractionBox["\[Epsilon]", "2"]}], "]"}], "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"x", "-", 
         FractionBox["\[Epsilon]", "2"]}], "]"}]}], 
      SqrtBox["\[Epsilon]"]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Step", "[", 
      RowBox[{"1", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.475608692175207*^9, {3.47561136861932*^9, 3.475611395700244*^9}, 
   3.4756120674419727`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxN1WlMEwYUAOByjQKjgAoGueQUEJkgg4lzJSIKKFcDUqOUY8IMyDg2pAzD
NUSmLCKHYx3CRkEOWRnbFMtVQLBswzHuQrGF0nIKrRzj0I1tCXvPl7y8fHnJ
e8n784zDYijh8gQCIf3f/K/aknXmt7elHMJOxGyaZm9uoX/4yc5iZQ1tb+kV
Nr2AdtLKHOsZQbtMvfz16zo05cazB0eC0Ym9mdEftS6BBwfV5ttDF8EGbTF7
nPRfgB9GdSppPJ8Hh+TYyUYz5sAbecnZHPIsmEkS6BZNToOLPe3iB76QgDOu
hNKtPMTgZIWaxPhFETg0rddsuGoSfG609IPnTLSnfSxVXIJ2EGvmLBegie6U
FVI6mqUx1H76PPpVyRiNrYKWrdfQ2xTRYt/kPO72BPh3ef2nQ2vosoigQ8uT
aHfbiVfWjejCFklRcSSaRmekOIWjLY/4XOoPRjdWPX6HGIAW5N96+gkZXent
UktyRseqrN2pdkDLp9KChFbo347udv3MDF2wyrXUNkIfiLRb9dyDlplNj0pI
aLaQwUlTQWcwfCr0FNFf1RB1ov8S7lhGbi7k1/Jm0BNpLNeT/WirQP84vUp0
/KGtkuVk9N2sOwE+vQJwo9Dy7VoT9FKiw4G0iXGwqabLCf8SPvhH6+xI0RQP
LOyq3+/oOAyW2BTacx4NgLVSqh1t5frANo5Sm4qVHvDnJxf/YNO5YG1/Vu75
vR24788ujW6zRnAFX/LlXCYLHOSn/zP/wwIwWzV5qCMhn/y/3xXJGaZT68Cm
sqZN5w422IM5+syb2gF289qlsPaQC74dPJJ2uKEHzPU2UPfd1QdeNNZO6WcM
gBM+PRh6W2cYPDKuSYno5oFDkt6fUT7LB+f1sx9LqsbBTw463XyiJABHhCvr
V1ShiaUj32edEYJHmzhX14vRNbxK8uUltNt4J/XuBlomlb0XJjexYwKhJS7V
Lekt9M0VdUquGjowoZhWqYk2W7eOatVGt26dznxhhL51bThXwRxN/fvSvX3W
6GW5jEfuDmgLlebZcvc3+lzbyDKvN+ZnfbdQSkGfU7yxxLiIvr7tt5obixav
zWxfK0KXiXbvDZhFGzRHuSllT4IJW/LV8SIReN2vhdZlLgbzHYL1zDMl4NhA
TS2T8WmwboGYqmgwC2Zd+LZyhT6H9zue6t7dMg+up0WbOL9eAG+ouiqwAxbB
lL5jjgZFS2DVY2rtzffQ7eVjZy4y0YfpSaHfsNAko4Yc3S70L1fsp7SX0S5E
q1zSWSnuj9vYx/JD1/G5FV6BaMO6iKacMPTrgPJp1SR0A9PouPJ99MfqUu79
B2iLxFbKqXp0gWfQ5evN6PiXjHyFAbT1hUhDJg892Xm0+oQA7VvEa02fQxPl
qzyMpWhOVOJg2yr66tCp4JAt9M7/B/8DpFphXg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 1}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.475611387581957*^9, 3.4756113961597137`*^9}, 
   3.4756120681713543`*^9, 3.475615670514626*^9, 3.4756157024181213`*^9, 
   3.476324413234984*^9, 3.476370361217517*^9, 3.476662405632442*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", 
    RowBox[{"let", "'"}], "s", " ", "build", " ", "a", " ", "wavefunction", 
    " ", "which", " ", "is", " ", "a", " ", "plane", " ", "wave", " ", "over",
     " ", "an", " ", "interval", " ", "of", "\[IndentingNewLine]", "length", 
    " ", "L", " ", "centered", " ", "on", " ", "the", " ", "point", " ", 
    RowBox[{"xo", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Psi]o", ",", "\[Psi]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"L_", ",", "xo_", ",", "ko_", ",", "x_"}], "]"}], ":=", 
     RowBox[{"\[Psi]o", " ", 
      RowBox[{"Step", "[", 
       RowBox[{"L", ",", 
        RowBox[{"x", "-", "xo"}]}], "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "ko", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "xo"}], ")"}]}]]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.475608701213962*^9, {3.475609575784625*^9, 3.4756095771125097`*^9}, {
   3.475609663962956*^9, 3.475609667609726*^9}, {3.475616434649672*^9, 
   3.475616441912491*^9}, {3.475616778722452*^9, 3.475616779642766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "can", " ", "fix", " ", "\[Psi]o", " ", "so", " ", "that", " ", 
    "\[Psi]", " ", "is", " ", "correctly", " ", 
    RowBox[{"normalized", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[Psi]o", "=", 
   RowBox[{
    RowBox[{"1", "/", 
     SqrtBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           FractionBox["1", "\[Psi]o"], 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}]}], "]"}], 
         "2"], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]]}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.4756164012133207`*^9, 3.475616411818955*^9}, {
  3.475616512116997*^9, 3.4756165268694897`*^9}, {3.4756165901752253`*^9, 
  3.475616678777545*^9}, {3.475616716902708*^9, 3.4756167323176403`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.4756164027088327`*^9, 3.47561641250397*^9}, {
   3.475616549872798*^9, 3.4756165686449757`*^9}, {3.475616601298388*^9, 
   3.475616631764827*^9}, {3.475616668703451*^9, 3.4756167332996597`*^9}, 
   3.4756167819476633`*^9, 3.476324416628009*^9, 3.476662405705103*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Let", "'"}], "s", " ", "verify", " ", "that", " ", "\[Psi]", " ",
     "is", " ", "correctly", " ", 
    RowBox[{"normalized", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4756164012133207`*^9, 3.475616411818955*^9}, {
  3.475616512116997*^9, 3.4756165268694897`*^9}, {3.475616738580392*^9, 
  3.475616755954597*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.4756164027088327`*^9, 3.47561641250397*^9}, 
   3.4756167418609753`*^9, 3.475616783125256*^9, 3.4763244183073797`*^9, 
   3.47666240575208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", 
    RowBox[{"let", "'"}], "s", " ", "compute", " ", "the", " ", "fourier", 
    " ", "transform", " ", 
    OverscriptBox["\[Psi]", "~"], 
    RowBox[{"(", "k", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Note", " ", "that", " ", "Mathematica", " ", "uses", " ", "a", " ", 
      "slightly", " ", "different", " ", "default", " ", "convention", " ", 
      "for", " ", "their", " ", 
      RowBox[{"FourierTransform", ":", "\[IndentingNewLine]", "    ", 
       RowBox[{
        OverscriptBox["f", "~"], 
        RowBox[{"(", "k", ")"}]}]}]}], "=", 
     RowBox[{
      FormBox[
       RowBox[{
        FractionBox["1", 
         SqrtBox[
          RowBox[{"2", " ", "\[Pi]"}]]], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"f", "(", "x", ")"}], 
          SuperscriptBox["e", 
           RowBox[{"i", "\[InvisibleSpace]", "kx"}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}]}],
       TraditionalForm], "\[IndentingNewLine]", "To", " ", "get", " ", 
      "MMatica", " ", "to", " ", "use", " ", "8.04", " ", "conventions"}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{
     "you", " ", "need", " ", "to", " ", "add", "\[IndentingNewLine]", "    ",
       "FourierParameters"}], "\[Rule]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}], "\[IndentingNewLine]", "to", " ", "the", 
      " ", "FourierTransform", " ", "function", " ", 
      RowBox[{"call", ".", "  ", 
       RowBox[{"We", "'"}]}], "ll", " ", "do", " ", "that", " ", 
      RowBox[{"below", "."}]}]}]}], "\[IndentingNewLine]", " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Psi]", "~"], "[", 
     RowBox[{"L_", ",", "xo_", ",", "ko_", ",", "k_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"FourierTransform", "[", 
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], ",", "x", ",", 
       "k"}], "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{{3.475608755040238*^9, 3.4756088650334272`*^9}, {
   3.475608896695218*^9, 3.475608922285448*^9}, {3.475608989762436*^9, 
   3.4756091435183907`*^9}, {3.4756091916825247`*^9, 3.475609239400086*^9}, {
   3.4756096341999207`*^9, 3.475609643501617*^9}, {3.475609698707054*^9, 
   3.475609703665634*^9}, 3.475615719356984*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "k", " ", "xo"}]], " ", 
   SqrtBox[
    FractionBox["2", "\[Pi]"]], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"k", "+", "ko"}], "2"], "]"}]}], 
  RowBox[{"k", "+", "ko"}]]], "Output",
 CellChangeTimes->{{3.475608808366775*^9, 3.475608923688809*^9}, 
   3.475609240950815*^9, 3.4756096476200333`*^9, 3.475609708658608*^9, {
   3.475615713525186*^9, 3.475615719884572*^9}, 3.475616794016972*^9, 
   3.4763244273684607`*^9, 3.476662409047407*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "To", " ", "get", " ", "a", " ", "sense", " ", "for", " ", "what", " ", 
     "this", " ", "looks", " ", "like", " ", "for", " ", "various", " ", 
     "values", " ", "of", " ", "the", " ", "width", " ", "L", " ", "and", " ",
      "the", " ", "momentum", " ", "ko"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "Plot", " ", "\[Psi]", " ", "and", " ", 
     OverscriptBox["\[Psi]", "~"]}], " ", ",", " ", 
    RowBox[{
    "using", " ", "Manipulate", " ", "to", " ", "allow", " ", "us", " ", "to",
      " ", "vary", " ", "the", " ", "width", " ", 
     RowBox[{"L", ".", " ", "\[IndentingNewLine]", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
       "to", " ", "make", " ", "the", " ", "plots", " ", "bigger"}]}]}]}], 
    ",", " ", 
    RowBox[{"click", " ", "inside", " ", "the", " ", "graph"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"],
          ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           OverscriptBox["\[Psi]", "~"], "[", 
           RowBox[{"L", ",", "xo", ",", "ko", ",", "k"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "10", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xo", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ko", ",", "0", ",", "50"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.4756092571972303`*^9, 3.475609318913168*^9}, {
   3.47560938380511*^9, 3.475609483694914*^9}, {3.47560971700292*^9, 
   3.4756098229535923`*^9}, 3.475612072930073*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ko$$ = 0, $CellContext`L$$ = 
    1.9700000000000002`, $CellContext`xo$$ = 4.88, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`L$$], 10, 0.1}, {
      Hold[$CellContext`xo$$], 0, 10}, {
      Hold[$CellContext`ko$$], 0, 50}}, Typeset`size$$ = {385., {53., 57.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`L$1775171$$ = 0, $CellContext`xo$1775172$$ = 
    0, $CellContext`ko$1775173$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ko$$ = 0, $CellContext`L$$ = 
        10, $CellContext`xo$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`L$$, $CellContext`L$1775171$$, 0], 
        Hold[$CellContext`xo$$, $CellContext`xo$1775172$$, 0], 
        Hold[$CellContext`ko$$, $CellContext`ko$1775173$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot[Abs[
           $CellContext`\[Psi][$CellContext`L$$, $CellContext`xo$$, \
$CellContext`ko$$, $CellContext`x]]^2, {$CellContext`x, -10, 10}, PlotRange -> 
         All, Exclusions -> None], 
        Plot[
         Re[
          
          OverTilde[$CellContext`\[Psi]][$CellContext`L$$, $CellContext`xo$$, \
$CellContext`ko$$, $CellContext`k]], {$CellContext`k, -100, 100}, PlotRange -> 
         All]}, "Specifications" :> {{$CellContext`L$$, 10, 
         0.1}, {$CellContext`xo$$, 0, 10}, {$CellContext`ko$$, 0, 50}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{428., {123., 129.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.475609445840486*^9, {3.475609504928486*^9, 3.475609521980678*^9}, {
   3.4756097460908537`*^9, 3.475609823447207*^9}, 3.475612073606905*^9, 
   3.475615722757121*^9, 3.4756167976977386`*^9, 3.476324430944434*^9, 
   3.476662409524292*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "What", " ", "are", " ", "the", " ", "expectation", " ", "values", " ", 
     "for", " ", "x", " ", "and", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "?", " ", "What"}], "'"}], "s", " ", "the", 
     " ", "uncertainty", " ", 
     RowBox[{"\[CapitalDelta]x", "?", " ", "\[IndentingNewLine]", "For"}], 
     " ", "simplicity"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "pick", " ", "a", " ", "step", " ", 
     "centered", " ", "on", " ", "the", " ", "origin"}], ",", " ", 
    RowBox[{"xo", " ", "=", " ", "0."}]}], "  ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["x", "avg"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"], 
      "x", 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox[
     SuperscriptBox["x", "2"], "avg"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"], 
      SuperscriptBox["x", "2"], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]x", "=", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SubscriptBox[
        SuperscriptBox["x", "2"], "avg"], "-", 
       SuperscriptBox[
        SubscriptBox["x", "avg"], "2"]}]], "//", "Simplify"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.4756099567141237`*^9, 3.4756100391867733`*^9}, {
  3.475610097576097*^9, 3.4756101557025633`*^9}, {3.4756101989061823`*^9, 
  3.475610255461384*^9}, {3.4756103009480877`*^9, 3.47561045197444*^9}, {
  3.475615736787882*^9, 3.4756157642759438`*^9}}],

Cell[BoxData["xo"], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, 
   3.475615730627446*^9, 3.475615766670556*^9, 3.4756168002130623`*^9, 
   3.476324466003607*^9, 3.4766624097172203`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "12"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"12", " ", 
     SuperscriptBox["xo", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, 
   3.475615730627446*^9, 3.475615766670556*^9, 3.4756168002130623`*^9, 
   3.476324466003607*^9, 3.4766624098300123`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"spell1\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"New symbol name \
\\\\\\\\\\\\\\\"\\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\[CapitalDelta]x\\), \\\"MT\\\
\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\\\\\\\\" is similar to \
existing symbol \\\\\\\\\\\\\\\"\\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\[CapitalDelta]\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\\\\\\\\" and \
may be misspelled.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/spell1\\\", ButtonNote -> \
\\\"General::spell1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.476662409867943*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SqrtBox["3"]}]]], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, 
   3.475615730627446*^9, 3.475615766670556*^9, 3.4756168002130623`*^9, 
   3.476324466003607*^9, 3.476662409868786*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"What", " ", "about", " ", "p", " ", "and", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["p", "2"], "?", " ", "What"}], "'"}], "s", " ", "the", 
    " ", "uncertainty", " ", 
    RowBox[{"\[CapitalDelta]p", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["p", "avg"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         OverscriptBox["\[Psi]", "~"], "[", 
         RowBox[{"L", ",", "xo", ",", "ko", ",", "k"}], "]"}], "]"}], "2"], 
      "\[HBar]", " ", "k", 
      RowBox[{"\[DifferentialD]", "k"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox[
     SuperscriptBox["p", "2"], "avg"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         OverscriptBox["\[Psi]", "~"], "[", 
         RowBox[{"L", ",", "xo", ",", "ko", ",", "k"}], "]"}], "]"}], "2"], 
      SuperscriptBox["\[HBar]", "2"], 
      SuperscriptBox["k", "2"], 
      RowBox[{"\[DifferentialD]", "k"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]p", "=", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SubscriptBox[
        SuperscriptBox["p", "2"], "avg"], "-", 
       SuperscriptBox[
        SubscriptBox["p", "avg"], "2"]}]], "//", "Simplify"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.4756158046381407`*^9, 3.475615815659832*^9}, {
  3.475615861994978*^9, 3.475615877145711*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Im", "[", 
        RowBox[{"k", " ", "xo"}], "]"}]}]], " ", "k", " ", "\[HBar]", " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       FractionBox[
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"k", "+", "ko"}], "2"], "]"}], 
        RowBox[{"k", "+", "ko"}]], "]"}], "2"]}], "\[Pi]"], 
   RowBox[{"\[DifferentialD]", "k"}]}]}]], "Output",
 CellChangeTimes->{3.475615824549172*^9, 3.475615880583601*^9, 
  3.4756168032361603`*^9, 3.476324470146921*^9, 3.4766624110358467`*^9}],

Cell[BoxData[
 RowBox[{"\[Infinity]", " ", 
  SuperscriptBox[
   RowBox[{"Sign", "[", "\[HBar]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{3.475615824549172*^9, 3.475615880583601*^9, 
  3.4756168032361603`*^9, 3.476324470146921*^9, 3.4766624120377703`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"spell\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"New symbol name \
\\\\\\\\\\\\\\\"\\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\[CapitalDelta]p\\), \\\"MT\\\
\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\\\\\\\\" is similar to \
existing symbols \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\[CapitalDelta], \
\[CapitalDelta]x}\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" \
and may be misspelled.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/spell\\\", ButtonNote -> \
\\\"General::spell\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.475615824115259*^9, 3.475615880490683*^9, 
  3.475616803231874*^9, 3.476324470125257*^9, 3.476662412078302*^9}],

Cell[BoxData[
 SqrtBox[
  RowBox[{"\[Infinity]", "-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "k", " ", "\[HBar]", " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           FractionBox[
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"k", "+", "ko"}], "2"], "]"}], 
            RowBox[{"k", "+", "ko"}]], "]"}], "2"]}], "\[Pi]"], 
       RowBox[{"\[DifferentialD]", "k"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.475615824549172*^9, 3.475615880583601*^9, 
  3.4756168032361603`*^9, 3.476324470146921*^9, 3.476662412770298*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "So", " ", "the", " ", "expectation", " ", "values", " ", "for", " ", 
    "the", " ", "momentum", " ", 
    RowBox[{"diverge", "!!"}], "  ", "We", " ", "should", " ", "of", " ", 
    "course", " ", "have", " ", "expected", " ", "that", " ", "fmor", " ", 
    "the", " ", "fact", " ", "that", " ", "the", " ", "wavefunction", " ", 
    "is", " ", "discontinuous"}], ",", " ", 
   RowBox[{
    RowBox[{"but", " ", 
     RowBox[{"it", "'"}], "s", " ", "nice", " ", "to", " ", "see", " ", 
     "that", " ", "the", " ", "momentum"}], "-", 
    RowBox[{
    "space", " ", "computation", " ", "gives", " ", "the", " ", "same", " ", 
     "divergent", " ", 
     RowBox[{"result", "."}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.475615998462928*^9, 3.475616059362962*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.47561578247537*^9, 3.4756157829252872`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Fourier Transforms: A Continuous but Non-Smooth Example (A Speedbump)\
\>", "Subsection",
 CellChangeTimes->{{3.47523589638136*^9, 3.475235910491596*^9}, {
  3.475607147712825*^9, 3.475607187525316*^9}, {3.47560764723612*^9, 
  3.4756076566675*^9}, {3.475608028081641*^9, 3.475608051064279*^9}, {
  3.475614065227063*^9, 3.4756141010283947`*^9}, {3.475614146783976*^9, 
  3.475614148695499*^9}, {3.475614211204852*^9, 3.475614270295733*^9}, {
  3.475694759681677*^9, 3.475694798450123*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", 
    RowBox[{"let", "'"}], "s", " ", "build", " ", "a", " ", "wavefunction", 
    " ", "which", " ", "is", " ", "a", " ", "bump", " ", "over", " ", "an", 
    " ", "interval", " ", "of", "\[IndentingNewLine]", "length", " ", "L", 
    " ", "centered", " ", "on", " ", "the", " ", "point", " ", 
    RowBox[{"xo", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Psi]o", ",", "\[Psi]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"L_", ",", "xo_", ",", "ko_", ",", "x_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"\[Psi]o", "[", "L", "]"}], " ", 
      RowBox[{"Step", "[", 
       RowBox[{"L", ",", 
        RowBox[{"x", "-", "xo"}]}], "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "ko", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "xo"}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["L", "2"], ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "xo"}], ")"}], "2"]}], ")"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.475608701213962*^9, {3.475609575784625*^9, 3.4756095771125097`*^9}, {
   3.475609663962956*^9, 3.475609667609726*^9}, {3.475614313973589*^9, 
   3.475614345532908*^9}, {3.475614397937551*^9, 3.475614405816724*^9}, {
   3.47561447158431*^9, 3.475614472564663*^9}, 3.4756146124924097`*^9, {
   3.475614666570231*^9, 3.475614719677125*^9}, {3.475616141856225*^9, 
   3.475616155069566*^9}, {3.475616265775036*^9, 3.4756162707092533`*^9}, {
   3.4756163775349627`*^9, 3.4756163787113047`*^9}, {3.476324663746553*^9, 
   3.476324667039898*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "We", " ", "can", " ", "fix", " ", "\[Psi]o", " ", "so", " ", "that", " ", 
    "\[Psi]", " ", "is", " ", "correctly", " ", 
    RowBox[{"normalized", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Psi]o", "[", "L_", "]"}], "=", 
   RowBox[{
    RowBox[{"1", "/", 
     SqrtBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"\[Psi]o", "[", "L", "]"}]], 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}]}], "]"}], 
         "2"], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]]}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.4756164012133207`*^9, 3.475616411818955*^9}, {
  3.475616512116997*^9, 3.4756165268694897`*^9}, {3.4756165901752253`*^9, 
  3.475616678777545*^9}, {3.475616716902708*^9, 3.4756167323176403`*^9}, {
  3.476324670399365*^9, 3.476324700045013*^9}}],

Cell[BoxData[
 SqrtBox["30"]], "Output",
 CellChangeTimes->{{3.476324694676495*^9, 3.476324708032701*^9}, 
   3.4766624134252777`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Let", "'"}], "s", " ", "verify", " ", "that", " ", "\[Psi]", " ",
     "is", " ", "correctly", " ", 
    RowBox[{"normalized", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4756164012133207`*^9, 3.475616411818955*^9}, {
  3.475616512116997*^9, 3.4756165268694897`*^9}, {3.475616738580392*^9, 
  3.475616755954597*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.4756164027088327`*^9, 3.47561641250397*^9}, 
   3.4756167418609753`*^9, 3.475616816715526*^9, 3.4763245287051983`*^9, 
   3.47632471270621*^9, 3.4766624137199087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", 
    RowBox[{"let", "'"}], "s", " ", "compute", " ", "the", " ", "fourier", 
    " ", "transform", " ", 
    OverscriptBox["\[Psi]", "~"], 
    RowBox[{"(", "k", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Note", " ", "that", " ", "Mathematica", " ", "uses", " ", "a", " ", 
      "slightly", " ", "different", " ", "default", " ", "convention", " ", 
      "for", " ", "their", " ", 
      RowBox[{"FourierTransform", ":", "\[IndentingNewLine]", "    ", 
       RowBox[{
        OverscriptBox["f", "~"], 
        RowBox[{"(", "k", ")"}]}]}]}], "=", 
     RowBox[{
      FormBox[
       RowBox[{
        FractionBox["1", 
         SqrtBox[
          RowBox[{"2", " ", "\[Pi]"}]]], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"f", "(", "x", ")"}], 
          SuperscriptBox["e", 
           RowBox[{"i", "\[InvisibleSpace]", "kx"}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}]}],
       TraditionalForm], "\[IndentingNewLine]", "To", " ", "get", " ", 
      "MMatica", " ", "to", " ", "use", " ", "8.04", " ", "conventions"}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{
     "you", " ", "need", " ", "to", " ", "add", "\[IndentingNewLine]", "    ",
       "FourierParameters"}], "\[Rule]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}], "\[IndentingNewLine]", "to", " ", "the", 
      " ", "FourierTransform", " ", "function", " ", 
      RowBox[{"call", ":"}]}]}]}], "\[IndentingNewLine]", " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Psi]", "~"], "[", 
     RowBox[{"L_", ",", "xo_", ",", "ko_", ",", "k_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"FourierTransform", "[", 
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], ",", "x", ",", 
       "k", ",", 
       RowBox[{"FourierParameters", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], "//", "FullSimplify"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.475608755040238*^9, 3.4756088650334272`*^9}, {
  3.475608896695218*^9, 3.475608922285448*^9}, {3.475608989762436*^9, 
  3.4756091435183907`*^9}, {3.4756091916825247`*^9, 3.475609239400086*^9}, {
  3.4756096341999207`*^9, 3.475609643501617*^9}, {3.475609698707054*^9, 
  3.475609703665634*^9}, {3.475614771099606*^9, 3.475614787167613*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"k", "+", "ko", "+", 
       RowBox[{"2", " ", "k", " ", "xo"}]}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", "k", "+", "ko"}], 
       ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "ko"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]"}], "-", "k", "+", "ko"}], ")"}]}]}],
     ")"}], " ", 
   SqrtBox[
    FractionBox["15", "\[Pi]"]]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"k", "-", "ko"}], ")"}], "3"]]], "Output",
 CellChangeTimes->{{3.475608808366775*^9, 3.475608923688809*^9}, 
   3.475609240950815*^9, 3.4756096476200333`*^9, 3.475609708658608*^9, {
   3.475614760704514*^9, 3.4756147880096397`*^9}, 3.475616822570866*^9, 
   3.476324567435457*^9, 3.4763247181456127`*^9, 3.476662416943164*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Notice", " ", "the", " ", "much", " ", "better", " ", 
     RowBox[{"(", 
      RowBox[{"ie", " ", "convergent"}], ")"}], " ", "large"}], "-", 
    RowBox[{
    "k", " ", "behaviour", " ", "as", " ", "compared", " ", "to", " ", "the", 
     " ", "previous", " ", 
     RowBox[{"example", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "To", " ", "get", " ", "a", " ", "sense", " ", "for", " ", "what", " ", 
     "this", " ", "looks", " ", "like", " ", "for", " ", "various", " ", 
     "values", " ", "of", " ", "the", " ", "width", " ", "L", " ", "and", " ",
      "the", " ", "momentum", " ", "ko"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "Plot", " ", "\[Psi]", " ", "and", " ", 
     OverscriptBox["\[Psi]", "~"]}], " ", ",", " ", 
    RowBox[{
    "using", " ", "Manipulate", " ", "to", " ", "allow", " ", "us", " ", "to",
      " ", "vary", " ", "the", " ", "width", " ", 
     RowBox[{"L", ".", " ", "\[IndentingNewLine]", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
       "to", " ", "make", " ", "the", " ", "plots", " ", "bigger"}]}]}]}], 
    ",", " ", 
    RowBox[{"click", " ", "inside", " ", "the", " ", 
     RowBox[{"graph", ".", "  ", "Also"}]}], ",", " ", 
    RowBox[{
    "compare", " ", "with", " ", "the", " ", "results", " ", "from", " ", 
     "the", " ", "step", " ", "function", " ", 
     RowBox[{"above", "!"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"],
          ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           OverscriptBox["\[Psi]", "~"], "[", 
           RowBox[{"L", ",", "xo", ",", "ko", ",", "k"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"-", "50"}], ",", "50"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "6", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xo", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ko", ",", "0", ",", "50"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.4756092571972303`*^9, 3.475609318913168*^9}, {
   3.47560938380511*^9, 3.475609483694914*^9}, {3.47560971700292*^9, 
   3.4756098229535923`*^9}, 3.475612072930073*^9, {3.4756148487018213`*^9, 
   3.475614857637102*^9}, {3.475615623594309*^9, 3.4756156387372923`*^9}, {
   3.475616827070141*^9, 3.475616868205689*^9}, {3.4763247435035458`*^9, 
   3.47632474582115*^9}, {3.4763247950655117`*^9, 3.4763248042983017`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ko$$ = 23.3, $CellContext`L$$ = 
    5.08, $CellContext`xo$$ = 2.16, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`L$$], 6, 0.1}, {
      Hold[$CellContext`xo$$], 0, 10}, {
      Hold[$CellContext`ko$$], 0, 50}}, Typeset`size$$ = {385., {53., 57.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`L$1780929$$ = 0, $CellContext`xo$1780930$$ = 
    0, $CellContext`ko$1780931$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ko$$ = 0, $CellContext`L$$ = 
        6, $CellContext`xo$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`L$$, $CellContext`L$1780929$$, 0], 
        Hold[$CellContext`xo$$, $CellContext`xo$1780930$$, 0], 
        Hold[$CellContext`ko$$, $CellContext`ko$1780931$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot[Abs[
           $CellContext`\[Psi][$CellContext`L$$, $CellContext`xo$$, \
$CellContext`ko$$, $CellContext`x]]^2, {$CellContext`x, -10, 10}, PlotRange -> 
         All, Exclusions -> None], 
        Plot[
         Re[
          
          OverTilde[$CellContext`\[Psi]][$CellContext`L$$, $CellContext`xo$$, \
$CellContext`ko$$, $CellContext`k]], {$CellContext`k, -50, 50}, PlotRange -> 
         All]}, "Specifications" :> {{$CellContext`L$$, 6, 
         0.1}, {$CellContext`xo$$, 0, 10}, {$CellContext`ko$$, 0, 50}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{428., {123., 129.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.475609445840486*^9, {3.475609504928486*^9, 3.475609521980678*^9}, {
   3.4756097460908537`*^9, 3.475609823447207*^9}, 3.475612073606905*^9, 
   3.475614793728163*^9, 3.475614858331279*^9, 3.4756168713088903`*^9, 
   3.476324606268858*^9, {3.476324724915786*^9, 3.4763247465115213`*^9}, {
   3.476324799663157*^9, 3.476324804992505*^9}, 3.476662417206695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "What", " ", "are", " ", "the", " ", "expectation", " ", "values", " ", 
    "for", " ", "x", " ", "and", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "?", " ", "What"}], "'"}], "s", " ", "the", 
    " ", "uncertainty", " ", 
    RowBox[{"\[CapitalDelta]x", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["x", "avg"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"], 
      "x", 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox[
     SuperscriptBox["x", "2"], "avg"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"], 
      SuperscriptBox["x", "2"], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]x", "=", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SubscriptBox[
        SuperscriptBox["x", "2"], "avg"], "-", 
       SuperscriptBox[
        SubscriptBox["x", "avg"], "2"]}]], "//", "Simplify"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.4756099567141237`*^9, 3.4756100391867733`*^9}, {
  3.475610097576097*^9, 3.4756101557025633`*^9}, {3.4756101989061823`*^9, 
  3.475610255461384*^9}, {3.4756103009480877`*^9, 3.47561045197444*^9}, {
  3.4756150356345882`*^9, 3.475615039842519*^9}, {3.475615086701391*^9, 
  3.47561508828482*^9}}],

Cell[BoxData["xo"], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, {
   3.4756150299094877`*^9, 3.4756150421846857`*^9}, 3.4756150893564034`*^9, 
   3.475616875405436*^9, 3.476324861892582*^9, 3.47666241740242*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "28"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"28", " ", 
     SuperscriptBox["xo", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, {
   3.4756150299094877`*^9, 3.4756150421846857`*^9}, 3.4756150893564034`*^9, 
   3.475616875405436*^9, 3.476324861892582*^9, 3.476662417671414*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SqrtBox["7"]}]]], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, {
   3.4756150299094877`*^9, 3.4756150421846857`*^9}, 3.4756150893564034`*^9, 
   3.475616875405436*^9, 3.476324861892582*^9, 3.4766624177023153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"What", " ", "about", " ", "p", " ", "and", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["p", "2"], "?", " ", "What"}], "'"}], "s", " ", "the", 
    " ", "uncertainty", " ", 
    RowBox[{"\[CapitalDelta]p", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    SubscriptBox["p", "avg"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         OverscriptBox["\[Psi]", "~"], "[", 
         RowBox[{"L", ",", "0", ",", "0", ",", "k"}], "]"}], "]"}], "2"], 
      "\[HBar]", " ", "k", 
      RowBox[{"\[DifferentialD]", "k"}]}]}]}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Note", ":", " ", 
      RowBox[{"Setting", " ", "xo"}]}], "=", 
     RowBox[{"ko", "=", 
      RowBox[{"0", " ", "to", " ", "simplify", " ", 
       RowBox[{"Mathematica", "'"}], "s", " ", 
       RowBox[{"life", ".", " ", "Changes"}], " ", "nothing", " ", "about", 
       " ", 
       RowBox[{"\[CapitalDelta]p", "."}]}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox[
     SuperscriptBox["p", "2"], "avg"], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         OverscriptBox["\[Psi]", "~"], "[", 
         RowBox[{"L", ",", "0", ",", "0", ",", "k"}], "]"}], "]"}], "2"], 
      SuperscriptBox["\[HBar]", "2"], 
      SuperscriptBox["k", "2"], 
      RowBox[{"\[DifferentialD]", "k"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalDelta]p", "=", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SubscriptBox[
        SuperscriptBox["p", "2"], "avg"], "-", 
       SuperscriptBox[
        SubscriptBox["p", "avg"], "2"]}]], "//", "Simplify"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4756099567141237`*^9, 3.4756100391867733`*^9}, {
  3.475610097576097*^9, 3.4756101557025633`*^9}, {3.4756101989061823`*^9, 
  3.475610255461384*^9}, {3.4756103009480877`*^9, 3.47561045197444*^9}, {
  3.4756150356345882`*^9, 3.475615147201414*^9}, {3.475615276014027*^9, 
  3.475615288472663*^9}, {3.475615391138173*^9, 3.475615430119985*^9}, {
  3.4756168823398523`*^9, 3.47561693596003*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, {
   3.4756150299094877`*^9, 3.4756150421846857`*^9}, 3.475615259586503*^9, 
   3.4756152961362543`*^9, {3.475615405871358*^9, 3.475615431575366*^9}, 
   3.475616899588743*^9, 3.475616941579322*^9, 3.476324885052627*^9, 
   3.476662446040123*^9}],

Cell[BoxData[
 RowBox[{"10", " ", 
  SuperscriptBox["\[HBar]", "2"]}]], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, {
   3.4756150299094877`*^9, 3.4756150421846857`*^9}, 3.475615259586503*^9, 
   3.4756152961362543`*^9, {3.475615405871358*^9, 3.475615431575366*^9}, 
   3.475616899588743*^9, 3.475616941579322*^9, 3.476324885052627*^9, 
   3.4766624490774097`*^9}],

Cell[BoxData[
 RowBox[{
  SqrtBox["10"], " ", "\[HBar]"}]], "Output",
 CellChangeTimes->{
  3.475610085555421*^9, 3.475610148228455*^9, 3.47561018812927*^9, {
   3.475610236351503*^9, 3.4756102622444687`*^9}, {3.475610320743224*^9, 
   3.475610344872594*^9}, {3.47561041455059*^9, 3.475610425769696*^9}, {
   3.4756150299094877`*^9, 3.4756150421846857`*^9}, 3.475615259586503*^9, 
   3.4756152961362543`*^9, {3.475615405871358*^9, 3.475615431575366*^9}, 
   3.475616899588743*^9, 3.475616941579322*^9, 3.476324885052627*^9, 
   3.476662449110157*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "uncertainty", " ", "relation", " ", "is", " ", "thus", " ", 
     "nicely", " ", "satisfied"}], ","}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"\[CapitalDelta]x", " ", "\[CapitalDelta]p"}]}]], "Input",
 CellChangeTimes->{{3.475615186505946*^9, 3.475615222698805*^9}, {
  3.4756153023659763`*^9, 3.475615321716413*^9}, {3.475615440965304*^9, 
  3.475615483141911*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   FractionBox["5", "14"]], " ", "\[HBar]"}]], "Output",
 CellChangeTimes->{{3.475615300035514*^9, 3.475615322323688*^9}, {
   3.47561543566302*^9, 3.475615483840807*^9}, {3.475615569675788*^9, 
   3.475615575630412*^9}, {3.4756169176976852`*^9, 3.4756169464935904`*^9}, 
   3.476324891498128*^9, 3.476662449560403*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "corresponds", " ", "to", " ", "roughly", " ", "20", "%", 
      " ", "away", " ", "from", " ", "the", " ", "lower", " ", 
      RowBox[{"bound", " ", "--"}], " ", "pretty", " ", 
      RowBox[{"good", "!"}], "  ", "and", " ", "indeed", " ", "the", " ", 
      "wavefunction", " ", "does", " ", "look", " ", "a", " ", "good", " ", 
      "bit", " ", "like", " ", "a", " ", "gaussian"}], "..."}], "."}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   FractionBox["%", 
    RowBox[{"\[HBar]", "/", "2"}]], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.475615489490036*^9, 3.47561556655693*^9}}],

Cell[BoxData["1.1952286093343936`"], "Output",
 CellChangeTimes->{
  3.475615487639728*^9, {3.4756155704439173`*^9, 3.475615576399931*^9}, 
   3.475616946644307*^9, 3.4763248928740997`*^9, 3.476662449607398*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.475615173918385*^9, 3.475615174253982*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Fourier Transforms: A Smooth Approximation to a Step", "Subsection",
 CellChangeTimes->{{3.47523589638136*^9, 3.475235910491596*^9}, {
  3.475607147712825*^9, 3.475607187525316*^9}, {3.47560764723612*^9, 
  3.4756076566675*^9}, {3.475608028081641*^9, 3.475608051064279*^9}, {
  3.475614035471257*^9, 3.475614042854495*^9}, {3.47561410988236*^9, 
  3.475614118026369*^9}, {3.475614157006995*^9, 3.475614158703415*^9}, {
  3.475694764665473*^9, 3.47569477918078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"When", " ", "it", " ", "comes", " ", "to", " ", "computing"}], 
     " ", "<", "p", ">"}], ",", " ", "however", ",", " ", 
    RowBox[{
    "we", " ", "run", " ", "into", " ", "problems", " ", "since", " ", "the", 
     " ", "wavefunction", " ", "is", " ", "not", " ", 
     RowBox[{"continuous", ".", "\[IndentingNewLine]", "In"}], " ", 
     "momentum", " ", "space"}], ",", " ", 
    RowBox[{
    "this", " ", "can", " ", "be", " ", "traced", " ", "to", " ", "the", " ", 
     "fourier", " ", "transform", " ", "failing", " ", "to", " ", "die", " ", 
     "off", " ", "sufficiently", " ", "rapidly", " ", "at", " ", "large", " ", 
     RowBox[{"momenta", " ", "--"}], " ", "indeed"}], ",", " ", 
    RowBox[{"at", " ", "large", " ", "k"}], ",", " ", 
    RowBox[{
     OverscriptBox["\[Psi]", "~"], 
     RowBox[{"(", "k", ")"}], " ", "scales", " ", "like", " ", 
     RowBox[{
      FractionBox["1", "k"], ".", "  ", "To"}], " ", "deal", " ", "with", " ",
      "this", " ", 
     RowBox[{"let", "'"}], "s", " ", "build", " ", "a", " ", "smooth", " ", 
     "function", " ", "which", " ", "approximates", " ", "the", " ", "step", 
     " ", 
     RowBox[{"function", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"SmoothStep", "[", "m_", "]"}], "[", 
      RowBox[{"\[Epsilon]_", ",", "x_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Tanh", "[", 
         RowBox[{"m", 
          RowBox[{"(", 
           RowBox[{"x", "+", 
            FractionBox["\[Epsilon]", "2"]}], ")"}]}], "]"}], "-", 
        RowBox[{"Tanh", "[", 
         RowBox[{"m", 
          RowBox[{"(", 
           RowBox[{"x", "-", 
            FractionBox["\[Epsilon]", "2"]}], ")"}]}], "]"}]}], "2"], 
      SqrtBox[
       FractionBox["m", 
        RowBox[{
         RowBox[{"\[Epsilon]", " ", "m", " ", 
          RowBox[{"Coth", "[", 
           RowBox[{"\[Epsilon]", " ", "m"}], "]"}]}], "-", "1"}]]]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "That", " ", "coefficient", " ", "is", " ", "chosen", " ", "to", " ", 
     "properly", " ", "normalize", " ", "the", " ", "square", " ", "of", " ", 
     "the", " ", 
     RowBox[{"step", " ", "--"}], " ", 
     RowBox[{"let", "'"}], "s", " ", 
     RowBox[{"check", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"Simplify", "[", 
       SuperscriptBox[
        RowBox[{
         RowBox[{"SmoothStep", "[", "\[CapitalLambda]", "]"}], "[", 
         RowBox[{"L", ",", "x"}], "]"}], "2"], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "  ", "*)"}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Note", ":", " ", 
      RowBox[{
      "Mathematica", " ", "takes", " ", "*", "forever", "*", " ", "to", " ", 
       "compute", " ", "this"}]}], ";", " ", 
     RowBox[{"faster", " ", "to", " ", "do", " ", "it", " ", "by", " ", 
      RowBox[{"hand", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"As", " ", "m", " ", "gets", " ", "large"}], ",", " ", 
     RowBox[{"SmoothStep", " ", "reduces", " ", "to", " ", "Step"}], ",", " ", 
     RowBox[{
     "as", " ", "is", " ", "easiest", " ", "to", " ", "see", " ", "by", " ", 
      "ploting", " ", "both", " ", "for", " ", "various", " ", "values", " ", 
      "of", " ", 
      RowBox[{"m", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Step", "[", 
          RowBox[{"1", ",", "x"}], "]"}], ",", 
         RowBox[{
          RowBox[{"SmoothStep", "[", "m", "]"}], "[", 
          RowBox[{"1", ",", "x"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "3", ",", "200"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQzSZgmG389KVjXql/HYh+YZzRDKIfHVjTDqIlnz2b
BqLjbCwWgmixqvalIHrLS79dIPoBa/A+EB3AufEo2Bwpu1Mget+PfbdBtEB6
yEMQvcO2/ymItmI0fg2iYw+ueg+ibdgMvoDl2e9zmQDpY/cP84HoSewswiC6
wvmnGIhWLZ+hBKKvt7UZg+gFyvfB9J6uaxYg+q22gA2IFrk93xlEyz7NdAfR
Xo9bd4JoPobfh0C0WLD0CRB9LWMymJ6yPOIiiJ6X6HIdRH/rcXgCoi+eXf4C
RMssXvADrN5W4CeIfibK7j7hGZBm6wfTAE6pq5w=
  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = 200., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`m$$], 3, 200}}, Typeset`size$$ = {360., {114., 118.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`m$3652$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`m$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`m$$, $CellContext`m$3652$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`Step[1, $CellContext`x], 
         $CellContext`SmoothStep[$CellContext`m$$][
         1, $CellContext`x]}, {$CellContext`x, -1, 1}, Exclusions -> None], 
      "Specifications" :> {{$CellContext`m$$, 3, 200}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403., {156., 162.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.475611741341856*^9, 3.475611767245726*^9}, 
   3.475611801021459*^9, {3.475611834649796*^9, 3.4756119253751307`*^9}, 
   3.475612063612048*^9, {3.475612104786892*^9, 3.475612129486576*^9}, {
   3.475612196821555*^9, 3.475612221422858*^9}, {3.475613231767104*^9, 
   3.47561325482225*^9}, 3.475613520627776*^9, 3.475616956702607*^9, {
   3.4763249052131643`*^9, 3.47632492514505*^9}, 3.4763703704472227`*^9, 
   3.476662463507937*^9, 3.506129122693399*^9, 3.538220720874259*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Now", " ", 
     RowBox[{"let", "'"}], "s", " ", "repeat", " ", "all", " ", "of", " ", 
     "the", " ", "above", " ", "computations"}], ",", " ", 
    RowBox[{"but", " ", "now", " ", "with", " ", "the", " ", "smooth", " ", 
     RowBox[{"approximation", ".", " ", "\[IndentingNewLine]", "To"}], " ", 
     "begin"}], ",", " ", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "build", " ", "a", " ", "wavefunction", 
     " ", "which", " ", "is", " ", "a", " ", "plane", " ", "wave", " ", 
     "times", " ", "a", " ", "SmoothStep", " ", "of", " ", "length", " ", "L",
      " ", "at", " ", 
     RowBox[{"xo", ":"}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Psi]", ",", "M"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"M_", ",", "L_", ",", "xo_", ",", "ko_", ",", "x_"}], "]"}], ":=",
      " ", 
     RowBox[{
      RowBox[{
       RowBox[{"SmoothStep", "[", "M", "]"}], "[", 
       RowBox[{"L", ",", 
        RowBox[{"x", "-", "xo"}]}], "]"}], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "ko", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "xo"}], ")"}]}]]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.475608701213962*^9, {3.475609575784625*^9, 3.4756095771125097`*^9}, {
   3.475609663962956*^9, 3.475609667609726*^9}, {3.475612249922534*^9, 
   3.475612291127797*^9}, {3.47561341193078*^9, 3.475613467454343*^9}, {
   3.47561695984373*^9, 3.475616974508967*^9}, {3.476324942606552*^9, 
   3.476324943214978*^9}, {3.476325292344883*^9, 3.476325314794407*^9}, {
   3.476325510188034*^9, 3.476325518572434*^9}, {3.476325642580167*^9, 
   3.476325676905493*^9}, 3.476370378740816*^9, 3.476398383897274*^9, {
   3.476400579824195*^9, 3.476400585262534*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Note", " ", "that", " ", "\[Psi]", " ", "is", " ", "correctly", " ", 
    "normalized", " ", "because", " ", "SmoothStep", " ", "was", " ", 
    "correctly", " ", 
    RowBox[{"normalized", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"To", " ", "check"}], ",", " ", 
    RowBox[{"compute", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], "]"}], "2"], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "  ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Annoyingly", " ", "this", " ", "integral", " ", "takes", " ", "forever", 
    " ", "so", " ", 
    RowBox[{"you", "'"}], "re", " ", "better", " ", "off", " ", "doing", " ", 
    "it", " ", "by", " ", 
    RowBox[{"hand", "."}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4756164012133207`*^9, 3.475616411818955*^9}, {
  3.475616512116997*^9, 3.4756165268694897`*^9}, {3.4756165901752253`*^9, 
  3.475616678777545*^9}, {3.475616716902708*^9, 3.4756167323176403`*^9}, {
  3.476324947934214*^9, 3.476324955309194*^9}, {3.4763251100993443`*^9, 
  3.476325160215795*^9}, {3.476325336093411*^9, 3.476325423816943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Now", " ", 
    RowBox[{"let", "'"}], "s", " ", "compute", " ", "the", " ", "fourier", 
    " ", "transform", " ", 
    OverscriptBox["\[Psi]", "~"], 
    RowBox[{"(", "k", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Note", " ", "that", " ", "Mathematica", " ", "uses", " ", "a", " ", 
      "slightly", " ", "different", " ", "default", " ", "convention", " ", 
      "for", " ", "their", " ", 
      RowBox[{"FourierTransform", ":", "\[IndentingNewLine]", "    ", 
       RowBox[{
        OverscriptBox["f", "~"], 
        RowBox[{"(", "k", ")"}]}]}]}], "=", 
     RowBox[{
      FormBox[
       RowBox[{
        FractionBox["1", 
         SqrtBox[
          RowBox[{"2", " ", "\[Pi]"}]]], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"f", "(", "x", ")"}], 
          SuperscriptBox["e", 
           RowBox[{"i", "\[InvisibleSpace]", "kx"}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}]}],
       TraditionalForm], "\[IndentingNewLine]", "To", " ", "get", " ", 
      "MMatica", " ", "to", " ", "use", " ", "8.04", " ", "conventions"}]}], 
    ",", " ", 
    RowBox[{
     RowBox[{
     "you", " ", "need", " ", "to", " ", "add", "\[IndentingNewLine]", "    ",
       "FourierParameters"}], "\[Rule]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}], "\[IndentingNewLine]", "to", " ", "the", 
      " ", "FourierTransform", " ", "function", " ", 
      RowBox[{"call", "."}]}]}]}], "\[IndentingNewLine]", " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Now", ",", " ", 
    RowBox[{
     RowBox[{
     "if", " ", "you", " ", "just", " ", "try", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       OverscriptBox["\[Psi]", "~"], "[", 
       RowBox[{"L_", ",", "xo_", ",", "ko_", ",", "k_"}], "]"}]}], "=", 
     RowBox[{
      RowBox[{"FourierTransform", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"L", ",", "xo", ",", "ko", ",", "x"}], "]"}], ",", "x", ",", 
        "k", ",", 
        RowBox[{"FourierParameters", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], "//", 
      RowBox[{
      "Simplify", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
       "MMatica", " ", "barfs"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"so", " ", 
      RowBox[{"let", "'"}], "s", " ", "simplify", " ", "by", " ", "noting", 
      " ", "that", " ", "if", "\[IndentingNewLine]", "    ", 
      OverscriptBox["f", "~"], 
      RowBox[{"(", "k", ")"}]}], "=", 
     RowBox[{
      RowBox[{
       FormBox[
        RowBox[{
         FractionBox["1", 
          SqrtBox[
           RowBox[{"2", " ", "\[Pi]"}]]], 
         RowBox[{
          SubsuperscriptBox["\[Integral]", 
           RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
          RowBox[{
           RowBox[{"f", "(", "x", ")"}], 
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{"-", "i"}], "\[InvisibleSpace]", "kx"}]], 
           RowBox[{"\[DifferentialD]", "x"}]}]}]}],
        TraditionalForm], "\[IndentingNewLine]", "then", 
       "\[IndentingNewLine]", "   ", 
       FormBox[
        RowBox[{
         FractionBox["1", 
          SqrtBox[
           RowBox[{"2", " ", "\[Pi]"}]]], 
         RowBox[{
          SubsuperscriptBox["\[Integral]", 
           RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
          RowBox[{
           RowBox[{"f", "(", 
            RowBox[{"ax", "+", "b"}], ")"}], 
           SuperscriptBox["e", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"ko", "(", 
              RowBox[{"x", "-", "xo"}], ")"}]}]], 
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " \[InvisibleSpace]", "k", " ", 
             "x"}]], 
           RowBox[{"\[DifferentialD]", "x"}]}]}]}],
        TraditionalForm]}], " ", "=", " ", 
      RowBox[{
       FormBox[
        RowBox[{
         FractionBox["1", 
          SqrtBox[
           RowBox[{"2", " ", "\[Pi]"}]]], 
         RowBox[{
          SubsuperscriptBox["\[Integral]", 
           RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
          RowBox[{
           FractionBox["1", "a"], 
           RowBox[{"f", "(", "y", ")"}], 
           SuperscriptBox["e", 
            RowBox[{"\[ImaginaryI]", " ", 
             RowBox[{"ko", "(", 
              RowBox[{
               FractionBox[
                RowBox[{"y", "-", "b"}], "a"], "-", "xo"}], ")"}]}]], 
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{"-", "i"}], "\[InvisibleSpace]", 
             FractionBox["k", "a"], 
             RowBox[{"(", 
              RowBox[{"y", "-", "b"}], ")"}]}]], 
           RowBox[{"\[DifferentialD]", "y"}]}]}]}],
        TraditionalForm], " ", "=", " ", 
       RowBox[{
        FractionBox[
         SuperscriptBox["e", 
          RowBox[{
           RowBox[{"i", "\[InvisibleSpace]", 
            RowBox[{"(", 
             RowBox[{"k", "-", "ko"}], ")"}], 
            FractionBox["b", "a"]}], "-", "ikoxo"}]], "a"], 
        OverscriptBox["f", "~"], 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"k", "-", "ko"}], "a"], ")"}], "\[IndentingNewLine]", 
        "Now"}]}]}]}], ",", " ", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"\[Psi]", "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "ko", " ", 
         RowBox[{"(", 
          RowBox[{"x", "-", "xo"}], ")"}]}]], " ", 
       SqrtBox[
        FractionBox["M", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"L", " ", "M", " ", 
           RowBox[{"Coth", "[", 
            RowBox[{"L", " ", "M"}], "]"}]}]}]]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Tanh", "[", 
           RowBox[{"M", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox["L", "2"]}], "+", "x", "-", "xo"}], ")"}]}], 
           "]"}]}], "+", 
         RowBox[{"Tanh", "[", 
          RowBox[{"M", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["L", "2"], "+", "x", "-", "xo"}], ")"}]}], "]"}]}], 
        ")"}], "\[IndentingNewLine]", "ie", "\[IndentingNewLine]", "\t", 
       "\[Psi]"}], " ", "=", " ", 
      RowBox[{
       FractionBox["1", "2"], 
       SqrtBox[
        FractionBox["M", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"L", " ", "M", " ", 
           RowBox[{"Coth", "[", 
            RowBox[{"L", " ", "M"}], "]"}]}]}]]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "ko", " ", 
             RowBox[{"(", 
              RowBox[{"x", "-", "xo"}], ")"}]}]]}], 
          RowBox[{"Tanh", "[", 
           RowBox[{
            RowBox[{"M", " ", "x"}], " ", "-", " ", 
            RowBox[{"M", 
             RowBox[{"(", 
              RowBox[{"xo", "+", 
               FractionBox["L", "2"]}], ")"}]}]}], "]"}]}], "+", " ", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "ko", " ", 
            RowBox[{"(", 
             RowBox[{"x", "-", "xo"}], ")"}]}]], 
          RowBox[{"Tanh", "[", 
           RowBox[{
            RowBox[{"M", " ", "x"}], " ", "-", " ", 
            RowBox[{"M", 
             RowBox[{"(", 
              RowBox[{"xo", "-", 
               FractionBox["L", "2"]}], ")"}]}]}], "]"}]}]}], ")"}], 
       "\[IndentingNewLine]", "thus"}]}]}], ",", " ", 
    RowBox[{
    "if", " ", "the", " ", "fourier", " ", "transform", " ", "of", " ", 
     RowBox[{"Tanh", "[", "x", "]"}], " ", "is", " ", 
     OverscriptBox["f", "~"], 
     RowBox[{"(", "k", ")"}]}], ",", " ", 
    RowBox[{
     RowBox[{"then", "\[IndentingNewLine]", "\t", 
      OverscriptBox["\[Psi]", "~"]}], " ", "=", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      SqrtBox[
       FractionBox["M", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"L", " ", "M", " ", 
          RowBox[{"Coth", "[", 
           RowBox[{"L", " ", "M"}], "]"}]}]}]]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox["e", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "i"}], "\[InvisibleSpace]", 
              RowBox[{"(", 
               RowBox[{"k", "-", "ko"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"xo", "+", 
                FractionBox["L", "2"]}], ")"}]}], "-", "ikoxo"}]], "M"]}], 
         OverscriptBox["f", "~"], 
         RowBox[{"(", 
          FractionBox[
           RowBox[{"k", "-", "ko"}], "M"], ")"}]}], "+", 
        RowBox[{
         FractionBox[
          SuperscriptBox["e", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "i"}], "\[InvisibleSpace]", 
             RowBox[{"(", 
              RowBox[{"k", "-", "ko"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"xo", "-", 
               FractionBox["L", "2"]}], ")"}]}], "-", "ikoxo"}]], "M"], 
         OverscriptBox["f", "~"], 
         RowBox[{"(", 
          FractionBox[
           RowBox[{"k", "-", "ko"}], "M"], ")"}]}]}], ")"}], 
      "\[IndentingNewLine]", 
      RowBox[{"so", ":", " ", 
       RowBox[{
        RowBox[{"what", "'"}], "s", " ", "the", " ", "fourier", " ", 
        "transform", " ", "of", " ", 
        RowBox[{
         RowBox[{"Tanh", "[", "x", "]"}], "?"}]}]}]}]}]}], " ", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FourierTransform", "[", 
    RowBox[{
     RowBox[{"Tanh", "[", "x", "]"}], ",", "x", ",", "k", ",", 
     RowBox[{"FourierParameters", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.475608755040238*^9, 3.4756088650334272`*^9}, {
   3.475608896695218*^9, 3.475608922285448*^9}, {3.475608989762436*^9, 
   3.4756091435183907`*^9}, {3.4756091916825247`*^9, 3.475609239400086*^9}, {
   3.4756096341999207`*^9, 3.475609643501617*^9}, {3.475609698707054*^9, 
   3.475609703665634*^9}, {3.475617206496378*^9, 3.475617209854266*^9}, {
   3.475617298445396*^9, 3.475617298949027*^9}, {3.476325498094489*^9, 
   3.476325505358016*^9}, {3.4763256576210527`*^9, 3.476325661708337*^9}, 
   3.476370430922628*^9, {3.476372570719129*^9, 3.47637258340034*^9}, {
   3.4763773464988403`*^9, 3.476377347167572*^9}, {3.4763971143544397`*^9, 
   3.4763971789975357`*^9}, {3.476397342335648*^9, 3.476397365772097*^9}, {
   3.4763974782754927`*^9, 3.4763979794675426`*^9}, {3.476398307419915*^9, 
   3.47639885830694*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[ImaginaryI]"}], " ", 
  SqrtBox[
   FractionBox["\[Pi]", "2"]], " ", 
  RowBox[{"Csch", "[", 
   FractionBox[
    RowBox[{"k", " ", "\[Pi]"}], "2"], "]"}]}]], "Output",
 CellChangeTimes->{{3.476398356274364*^9, 3.4763984096065817`*^9}, 
   3.4763988596868763`*^9, 3.4763991549610653`*^9, 3.4764006724065437`*^9, 
   3.476662484592651*^9, 3.5061291554478817`*^9, 3.5382207525044394`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plugging", " ", "this", " ", "into", " ", "our", " ", "expression", " ", 
    "and", " ", "simplifying", " ", "a", " ", "bit", " ", 
    RowBox[{"gives", ":"}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Psi]", "~"], "[", 
     RowBox[{"M_", ",", "L_", ",", "xo_", ",", "ko_", ",", "k_"}], "]"}], " ",
     "=", "  ", 
    RowBox[{
     SqrtBox[
      FractionBox["\[Pi]", "2"]], 
     SqrtBox[
      FractionBox["M", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"L", " ", "M", " ", 
         RowBox[{"Coth", "[", 
          RowBox[{"L", " ", "M"}], "]"}]}]}]]], 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "\[InvisibleSpace] ", "k", " ", 
        "xo"}]], "M"], 
     RowBox[{"Sin", "[", "\[InvisibleSpace]", 
      FractionBox[
       RowBox[{"L", 
        RowBox[{"(", 
         RowBox[{"k", "-", "ko"}], ")"}]}], "2"], "]"}], 
     RowBox[{"Csch", "[", 
      RowBox[{
       FractionBox["\[Pi]", "2"], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{"k", "-", "ko"}], "M"], ")"}]}], "]"}]}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.4763988621379547`*^9, 3.4763990516308947`*^9}, {
   3.476399094630213*^9, 3.4763990987472477`*^9}, 3.476399136708991*^9, {
   3.476399184627709*^9, 3.476399236586866*^9}, {3.476399269512309*^9, 
   3.476399420592079*^9}, {3.476399453378524*^9, 3.476399494144332*^9}, {
   3.476400525145356*^9, 3.476400549056038*^9}, {3.4764005955506983`*^9, 
   3.47640059647141*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "To", " ", "get", " ", "a", " ", "sense", " ", "for", " ", "what", " ", 
     "this", " ", "looks", " ", "like", " ", "for", " ", "various", " ", 
     "values", " ", "of", " ", "the", " ", "width", " ", "L", " ", "and", " ",
      "the", " ", "momentum", " ", "ko"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"let", "'"}], "s", " ", "Plot", " ", "\[Psi]", " ", "and", " ", 
     OverscriptBox["\[Psi]", "~"]}], " ", ",", " ", 
    RowBox[{
    "using", " ", "Manipulate", " ", "to", " ", "allow", " ", "us", " ", "to",
      " ", "vary", " ", "the", " ", "width", " ", "L"}], ",", " ", 
    RowBox[{
    "the", " ", "position", " ", "and", " ", "momentum", " ", "xo", " ", 
     "and", " ", "ko"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "sharpness", " ", "of", " ", "the", " ", "step"}],
     ",", " ", 
    RowBox[{
     RowBox[{"M", ".", "  ", "Note"}], " ", "in", " ", "particular", " ", 
     "what", " ", "happens", " ", "to", " ", "the", " ", "support", " ", "of",
      " ", 
     OverscriptBox["\[Psi]", "~"], " ", "as", " ", "the", " ", "step", " ", 
     "gets", " ", "sharp"}], ",", " ", 
    RowBox[{"M", "\[Rule]", 
     RowBox[{"\[Infinity]", ".", " ", "\[IndentingNewLine]", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
       "to", " ", "make", " ", "the", " ", "plots", " ", "bigger"}]}]}]}], 
    ",", " ", 
    RowBox[{"click", " ", "inside", " ", "the", " ", "graph"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"\[Psi]", "[", 
            RowBox[{"M", ",", "L", ",", "xo", ",", "ko", ",", "x"}], "]"}], 
           "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{
           OverscriptBox["\[Psi]", "~"], "[", 
           RowBox[{"M", ",", "L", ",", "xo", ",", "ko", ",", "k"}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"L", ",", "1", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xo", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ko", ",", "0", ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"M", ",", "3", ",", "400"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.4756092571972303`*^9, 3.475609318913168*^9}, {
   3.47560938380511*^9, 3.475609483694914*^9}, {3.47560971700292*^9, 
   3.4756098229535923`*^9}, 3.475612072930073*^9, {3.475613742534252*^9, 
   3.47561377158186*^9}, {3.47632558069808*^9, 3.476325603087921*^9}, {
   3.476325685730856*^9, 3.476325688242837*^9}, 3.476399574492908*^9, {
   3.476400609191084*^9, 3.476400639197798*^9}, {3.476400696743019*^9, 
   3.4764007784180393`*^9}, {3.476400818187476*^9, 3.476400818238133*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ko$$ = 0, $CellContext`L$$ = 
    1, $CellContext`M$$ = 3, $CellContext`xo$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`L$$], 1, 0.1}, {
      Hold[$CellContext`xo$$], 0, 10}, {
      Hold[$CellContext`ko$$], 0, 50}, {
      Hold[$CellContext`M$$], 3, 400}}, Typeset`size$$ = {
    1019., {155., 160.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`L$5201$$ = 
    0, $CellContext`xo$5202$$ = 0, $CellContext`ko$5203$$ = 
    0, $CellContext`M$5204$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ko$$ = 0, $CellContext`L$$ = 
        1, $CellContext`M$$ = 3, $CellContext`xo$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`L$$, $CellContext`L$5201$$, 0], 
        Hold[$CellContext`xo$$, $CellContext`xo$5202$$, 0], 
        Hold[$CellContext`ko$$, $CellContext`ko$5203$$, 0], 
        Hold[$CellContext`M$$, $CellContext`M$5204$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot[Abs[
           $CellContext`\[Psi][$CellContext`M$$, $CellContext`L$$, \
$CellContext`xo$$, $CellContext`ko$$, $CellContext`x]]^2, {$CellContext`x, \
-10, 10}, PlotRange -> All, Exclusions -> None], 
        Plot[
         Re[
          
          OverTilde[$CellContext`\[Psi]][$CellContext`M$$, $CellContext`L$$, \
$CellContext`xo$$, $CellContext`ko$$, $CellContext`k]], {$CellContext`k, -100,
           100}, PlotRange -> All]}, 
      "Specifications" :> {{$CellContext`L$$, 1, 0.1}, {$CellContext`xo$$, 0, 
         10}, {$CellContext`ko$$, 0, 50}, {$CellContext`M$$, 3, 400}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1062., {239., 245.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.475609445840486*^9, {3.475609504928486*^9, 3.475609521980678*^9}, {
   3.4756097460908537`*^9, 3.475609823447207*^9}, 3.475612073606905*^9, 
   3.4763991045856533`*^9, {3.476399139408229*^9, 3.4763991572271967`*^9}, 
   3.476399503082891*^9, 3.476399597985448*^9, 3.476400676046*^9, 
   3.476400780660431*^9, 3.476400818893547*^9, 3.4766623206016827`*^9, 
   3.4766625124235888`*^9, 3.50612916236351*^9, 3.506129205684112*^9, 
   3.538220757833498*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ko$$ = 0., $CellContext`L$$ = 
    1., $CellContext`M$$ = 250.5, $CellContext`xo$$ = 2.4, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`L$$], 1, 0.1}, {
      Hold[$CellContext`xo$$], 0, 10}, {
      Hold[$CellContext`ko$$], 0, 50}, {
      Hold[$CellContext`M$$], 3, 400}}, Typeset`size$$ = {949., {146., 151.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`L$39922$$ = 0, $CellContext`xo$39923$$ = 
    0, $CellContext`ko$39924$$ = 0, $CellContext`M$39925$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ko$$ = 0, $CellContext`L$$ = 
        1, $CellContext`M$$ = 3, $CellContext`xo$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`L$$, $CellContext`L$39922$$, 0], 
        Hold[$CellContext`xo$$, $CellContext`xo$39923$$, 0], 
        Hold[$CellContext`ko$$, $CellContext`ko$39924$$, 0], 
        Hold[$CellContext`M$$, $CellContext`M$39925$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> {
        Plot[Abs[
           $CellContext`\[Psi][$CellContext`M$$, $CellContext`L$$, \
$CellContext`xo$$, $CellContext`ko$$, $CellContext`x]]^2, {$CellContext`x, \
-10, 10}, PlotRange -> All, Exclusions -> None], 
        Plot[
         Re[
          
          OverTilde[$CellContext`\[Psi]][$CellContext`M$$, $CellContext`L$$, \
$CellContext`xo$$, $CellContext`ko$$, $CellContext`k]], {$CellContext`k, -100,
           100}, PlotRange -> All]}, 
      "Specifications" :> {{$CellContext`L$$, 1, 0.1}, {$CellContext`xo$$, 0, 
         10}, {$CellContext`ko$$, 0, 50}, {$CellContext`M$$, 3, 400}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{992., {230., 236.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.475609445840486*^9, {3.475609504928486*^9, 3.475609521980678*^9}, {
   3.4756097460908537`*^9, 3.475609823447207*^9}, 3.475612073606905*^9, 
   3.4763991045856533`*^9, {3.476399139408229*^9, 3.4763991572271967`*^9}, 
   3.476399503082891*^9, 3.476399597985448*^9, 3.476400676046*^9, 
   3.476400780660431*^9, 3.476400818893547*^9, 3.4766623206016827`*^9, 
   3.4766625124235888`*^9, 3.50612916236351*^9, 3.506129205684112*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1409, 852},
WindowMargins->{{9, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 184, 2, 67, "Section"],
Cell[754, 26, 429, 8, 26, "Text"],
Cell[1186, 36, 221, 4, 26, "Text"],
Cell[1410, 42, 390, 11, 27, "Input"],
Cell[CellGroupData[{
Cell[1825, 57, 738, 18, 27, "Input"],
Cell[2566, 77, 5635, 102, 240, "Output"]
}, Open  ]],
Cell[8216, 182, 540, 9, 41, "Text"],
Cell[8759, 193, 759, 16, 27, "Input"],
Cell[CellGroupData[{
Cell[9543, 213, 180, 4, 27, "Input"],
Cell[9726, 219, 1187, 35, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10950, 259, 837, 21, 27, "Input"],
Cell[11790, 282, 54278, 901, 240, "Output"]
}, Open  ]],
Cell[66083, 1186, 2697, 41, 116, "Text"],
Cell[68783, 1229, 1183, 18, 71, "Text"],
Cell[CellGroupData[{
Cell[69991, 1251, 899, 23, 43, "Input"],
Cell[70893, 1276, 1404, 30, 237, "Output"]
}, Open  ]],
Cell[72312, 1309, 693, 11, 26, "Text"],
Cell[CellGroupData[{
Cell[73030, 1324, 1284, 33, 27, "Input"],
Cell[74317, 1359, 35091, 619, 248, "Output"]
}, Open  ]],
Cell[109423, 1981, 199, 4, 26, "Text"],
Cell[CellGroupData[{
Cell[109647, 1989, 1736, 46, 43, "Input"],
Cell[111386, 2037, 130735, 2191, 405, "Output"]
}, Open  ]],
Cell[242136, 4231, 117, 1, 26, "Text"],
Cell[CellGroupData[{
Cell[242278, 4236, 1765, 48, 43, "Input"],
Cell[244046, 4286, 2980, 54, 237, "Output"]
}, Open  ]],
Cell[247041, 4343, 854, 13, 56, "Text"],
Cell[CellGroupData[{
Cell[247920, 4360, 2947, 79, 118, "Input"],
Cell[250870, 4441, 13192, 210, 237, "Output"]
}, Open  ]],
Cell[264077, 4654, 1631, 25, 86, "Text"],
Cell[265711, 4681, 1233, 20, 56, "Text"],
Cell[266947, 4703, 1354, 31, 56, "Text"],
Cell[268304, 4736, 560, 11, 26, "Text"],
Cell[268867, 4749, 195, 2, 26, "Text"],
Cell[CellGroupData[{
Cell[269087, 4755, 407, 10, 27, "Input"],
Cell[269497, 4767, 18819, 316, 232, "Output"]
}, Open  ]],
Cell[288331, 5086, 118, 1, 26, "Text"],
Cell[CellGroupData[{
Cell[288474, 5091, 452, 10, 27, "Input"],
Cell[288929, 5103, 525, 15, 54, "Output"]
}, Open  ]],
Cell[289469, 5121, 1100, 16, 56, "Text"],
Cell[290572, 5139, 134, 1, 26, "Text"],
Cell[CellGroupData[{
Cell[290731, 5144, 348, 9, 27, "Input"],
Cell[291082, 5155, 1139, 26, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292258, 5186, 297, 7, 27, "Input"],
Cell[292558, 5195, 220, 6, 32, "Output"]
}, Open  ]],
Cell[292793, 5204, 539, 8, 41, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293369, 5217, 228, 3, 67, "Section"],
Cell[CellGroupData[{
Cell[293622, 5224, 261, 5, 34, "Subsection"],
Cell[CellGroupData[{
Cell[293908, 5233, 2553, 58, 179, "Input"],
Cell[296464, 5293, 2871, 53, 511, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299384, 5352, 512, 9, 34, "Subsection"],
Cell[CellGroupData[{
Cell[299921, 5365, 1811, 37, 58, "Input"],
Cell[301735, 5404, 799, 14, 23, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302571, 5423, 1595, 41, 127, "Input"],
Cell[304169, 5466, 1986, 38, 247, "Output"]
}, Open  ]],
Cell[306170, 5507, 1248, 29, 76, "Input"],
Cell[CellGroupData[{
Cell[307443, 5540, 1008, 26, 84, "Input"],
Cell[308454, 5568, 317, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308808, 5577, 728, 18, 61, "Input"],
Cell[309539, 5597, 194, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309770, 5605, 2606, 65, 187, "Input"],
Cell[312379, 5672, 573, 14, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312989, 5691, 2455, 60, 160, "Input"],
Cell[315447, 5753, 2570, 52, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318054, 5810, 2076, 56, 144, "Input"],
Cell[320133, 5868, 386, 6, 27, "Output"],
Cell[320522, 5876, 530, 12, 46, "Output"],
Cell[321055, 5890, 831, 14, 23, "Message"],
Cell[321889, 5906, 439, 9, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322365, 5920, 1679, 48, 145, "Input"],
Cell[324047, 5970, 770, 21, 66, "Output"],
Cell[324820, 5993, 259, 5, 30, "Output"],
Cell[325082, 6000, 908, 15, 23, "Message"],
Cell[325993, 6017, 753, 20, 91, "Output"]
}, Open  ]],
Cell[326761, 6040, 837, 18, 43, "Input"],
Cell[327601, 6060, 93, 1, 27, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[327731, 6066, 500, 8, 26, "Subsection"],
Cell[328234, 6076, 1837, 44, 91, "Input"],
Cell[CellGroupData[{
Cell[330096, 6124, 1125, 29, 84, "Input"],
Cell[331224, 6155, 134, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331395, 6163, 728, 18, 61, "Input"],
Cell[332126, 6183, 218, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332381, 6191, 2676, 67, 187, "Input"],
Cell[335060, 6260, 1233, 35, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336330, 6300, 3296, 76, 175, "Input"],
Cell[339629, 6378, 2673, 53, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342339, 6436, 1831, 50, 129, "Input"],
Cell[344173, 6488, 411, 6, 27, "Output"],
Cell[344587, 6496, 556, 12, 47, "Output"],
Cell[345146, 6510, 469, 9, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345652, 6524, 2373, 62, 145, "Input"],
Cell[348028, 6588, 509, 8, 27, "Output"],
Cell[348540, 6598, 564, 10, 30, "Output"],
Cell[349107, 6610, 550, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349694, 6625, 465, 11, 43, "Input"],
Cell[350162, 6638, 354, 7, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350553, 6650, 698, 16, 63, "Input"],
Cell[351254, 6668, 211, 3, 27, "Output"]
}, Open  ]],
Cell[351480, 6674, 92, 1, 27, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[351609, 6680, 471, 6, 26, "Subsection"],
Cell[CellGroupData[{
Cell[352105, 6690, 4630, 114, 187, "Input"],
Cell[356738, 6806, 2103, 40, 335, "Output"]
}, Open  ]],
Cell[358856, 6849, 1913, 42, 76, "Input"],
Cell[360772, 6893, 1444, 33, 65, "Input"],
Cell[CellGroupData[{
Cell[362241, 6930, 11056, 300, 556, "Input"],
Cell[373300, 7232, 428, 10, 54, "Output"]
}, Open  ]],
Cell[373743, 7245, 1633, 45, 84, "Input"],
Cell[CellGroupData[{
Cell[375401, 7294, 3459, 80, 179, "Input"],
Cell[378863, 7376, 3043, 62, 501, "Output"],
Cell[381909, 7440, 3026, 60, 483, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

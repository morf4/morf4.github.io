<!DOCTYPE html><html lang="en">
<head>
<meta charset="utf-8">
<meta name="format-detection" content="telephone=no">
<title>Graphical Programs | Lecture Notes | Foundations of Software Engineering | Civil and Environmental Engineering | MIT OpenCourseWare</title>
<!-- Begin Automatic Metadata Insertion --><meta content="1-124j-foundations-of-software-engineering-fall-2000" name="WT.cg_n">
<meta content="Graphical Programs" name="WT.cg_s">
<meta content="" name="Description">
<meta content="Amaratunga, Kevin" name="Author">
<meta content="modern software development,engineering and information technology,component-based software,C#,.NET,data structures,algorithms for modeling,analysis,visualization,basic problem-solving techniques,web services,management and maintenance of software,sorting,searching,algorithms,numerical simulation techniques,image processing,computational geometry,finite element methods,network methods,e-business applications,classes,objects,inheritance,virtual functions,abstract classes,polymorphism,Java applications,applets,Abstract Windowing Toolkit,Graphics,Threads,Java,C++,information technology,engineering,modeling algorithms,basic problem-solving,software management,software maintenance,searching algorithms,numerical simulation,object oriented programming,1.124J,2.159J,13.470J,1.124,2.159,13.470,Software Design and Engineering" name="keywords">
<meta content="1.124J Foundations of Software Engineering | Graphical Programs" name="Search_Display">
<meta content="Software Design and Engineering" itemprop="about">
<!-- End Automatic Metadata Insertion --><link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/grid.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/base.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/menu.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/jquery.bubblepopup.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/courses.css">
<link title="default" rel="stylesheet" type="text/css" href="../../../common/styles/courses_new.css">
<link href="https://ocw.mit.edu/xml/ocwcc.rdf" type="application/rdf+xml" rel="metadata">
<link rel="canonical" href="https://ocw.mit.edu/courses/civil-and-environmental-engineering/1-124j-foundations-of-software-engineering-fall-2000/lecture-notes/graphical_programs">
<link rel="apple-touch-icon" href="../../../common/images/apple-touch-icon.png">
<script type="text/javascript" src="../../../common/scripts/jquery.js"></script><script type="text/javascript" src="../../../common/scripts/ocw-media-utils-offline.js"></script><script type="text/javascript" src="../../../common/scripts/ocw-offline.js"></script><script type="text/javascript" src="../../../common/scripts/jquery.bubblepopup.min.js"></script><script type="text/javascript" src="../../../common/scripts/expandy.js"></script><script type="text/javascript" src="../../../common/scripts/bubble-popup-offline.js"></script>
</head>
<body itemscope itemtype="http://schema.org/WebPage">
        
	

        <header id="top"><div id="grid">
				
				
					
<div id="portletwrapper-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d686561646572" class="portletWrapper kssattr-portlethash-6f63772e746f70706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d686561646572">
<div class="portletStaticText portlet-static-site-header">
<!--googleoff: index-->
<div class="grid_6 alpha" id="banner"><a href="https://ocw.mit.edu/"><img src="../../../common/images/ocw_mast.png" class="logo" alt="MIT OpenCourseWare, Massachusetts Institute of Technology"></a></div>
<div class="grid_6 omega" id="subscribe">
<aside class="module" aria-label="Connect with OCW"><table class="social"><tbody><tr>
<td class="socialbutton"><a aria-label="Subscribe to the OCW Newsletter" href="https://ocw.mit.edu/subscribe/index.htm?utm_source=header"><img src="../../../common/images/trans.gif" alt="An icon depicting an envelope.">Subscribe to the OCW Newsletter</a></td>
            <td>
<a aria-label="Google+" href="https://plus.google.com/104567381989352550847/posts"><img src="../../../common/images/icon_gp.png" alt="Click to visit our Google+ page."></a>                   <a aria-label="Pinterest" href="https://www.pinterest.com/mitocw/pins/"><img src="../../../common/images/icon_pin.png" alt="Click to visit our Pinterest page."></a>                   <a aria-label="Facebook" href="https://facebook.com/mitocw"><img src="../../../common/images/icon_fb.png" alt="Click to visit our Facebook page."></a>                   <a aria-label="Twitter" href="https://twitter.com/mitocw"><img src="../../../common/images/icon_tw.png" alt="Click to visit our Twitter feed."></a>
</td>
        </tr></tbody></table></aside><nav aria-label="Help Links" class="helplinks"><a aria-label="OCW Site Help" href="https://ocw.mit.edu/help">Help</a><span aria-hidden="true">|</span>     <a href="../../../common/jsp/feedback.htm">Contact Us</a>   </nav>
</div>
<div class="clear"> </div>
<!--googleon: index-->
</div>

</div>





<!--googleoff: index-->
<nav id="mega" class="grid_8 alpha" aria-label="Site"><ul id="menu" role="presentation">
<li id="menu_home">
        <a href="https://ocw.mit.edu/" aria-label="Homepage"><img src="../../../common/images/top-nav_home.png" class="home_icon" alt="Click for site home page."></a><!-- Begin Home Item -->
    </li>
<!-- End Home Item -->
    <li id="drop_1" aria-label="Find Courses" class="selected">
      <a href="#" aria-hidden="true">Find Courses</a><!-- Begin 5 columns Item -->
      <div class="dropdown_5columns-a mega-courses">
        <div class="col_1a">
          <div class="row_1a">
            <nav aria-labelledby="mm-find-courses-by"><span id="mm-find-courses-by" class="nav" aria-hidden="true">Find courses by:</span>
              <ul class="find_by" role="presentation">
<li><a href="https://ocw.mit.edu/courses/find-by-topic/">Topic</a></li>
                <li><a href="https://ocw.mit.edu/courses/find-by-number/">MIT Course Number</a></li>
                <li><a href="https://ocw.mit.edu/courses/find-by-department/">Department</a></li>
								<li><a href="https://ocw.mit.edu/educator/?view=instructional&amp;utm_campaign=Educator&amp;utm_source=megamenu&amp;utm_medium=find-courses&amp;utm_content=approaches">Instructional Approach</a></li>
								<li><a href="https://ocw.mit.edu/educator/?view=teaching&amp;utm_campaign=Educator&amp;utm_source=megamenu&amp;utm_medium=find-courses&amp;utm_content=materials">Teaching Materials</a></li>
            		<li><a href="https://ocw.mit.edu/courses/?utm_source=ocw-megamenu&amp;utm_medium=link&amp;utm_campaign=mclstudy">View All Courses</a></li>
							</ul></nav><nav aria-labelledby="mm-collections"><span id="mm-collections" class="nav" aria-hidden="true">Collections</span>
              <ul role="presentation">
<li><a href="https://ocw.mit.edu/courses/audio-video-courses/">Audio/Video Lectures</a></li>
                <li><a href="https://ocw.mit.edu/courses/online-textbooks/">Online Textbooks</a></li>
                <li><a href="https://ocw.mit.edu/courses/new-courses/">New Courses</a></li>
                <li><a href="https://ocw.mit.edu/courses/most-visited-courses/">Most Visited Courses</a></li>
                <li><a href="https://ocw.mit.edu/courses/ocw-scholar/">OCW Scholar Courses</a></li>
                <li><a href="https://ocw.mit.edu/courses/this-course-at-mit/">This Course at MIT</a></li>
                <li><a href="https://ocw.mit.edu/resources/">Supplemental Resources</a></li>
              </ul></nav><nav class="col_1b" aria-labelledby="mm-translated-courses"><span id="mm-translated-courses" class="nav" aria-hidden="true">Translated Courses</span>
							<ul role="presentation">
<li><a href="https://ocw.mit.edu/courses/translated-courses/traditional-chinese" aria-label="Traditional Chinese">繁體字 / Traditional Chinese</a></li>
								<li><a href="https://ocw.mit.edu/courses/translated-courses/spanish" aria-label="Spanish">Español / Spanish</a></li>
								<li><a href="https://ocw.mit.edu/courses/translated-courses/portuguese" aria-label="Portuguese">Português / Portuguese</a></li>
								<li><a href="https://ocw.mit.edu/courses/translated-courses/persian" aria-label="Persian">فارسی / Persian</a></li>
								<li><a href="https://ocw.mit.edu/courses/translated-courses/turkish" aria-label="Turkish">Türkçe / Turkish</a></li>
								<li><a href="https://ocw.mit.edu/courses/translated-courses/korean" aria-label="Korean">(비디오)한국 / Korean</a></li>
								<li><a href="https://ocw.mit.edu/courses/translated-courses">More...</a></li>
							</ul></nav>
</div>
          <div class="row_1b">
            <nav aria-labelledby="mm-cross-disciplinary-topic-lists"><span id="mm-cross-disciplinary-topic-lists" class="nav" aria-hidden="true">Cross-Disciplinary Topic Lists</span>
            	<ul role="presentation">
<li><a href="https://ocw.mit.edu/courses/energy-courses">Energy</a></li>
                <li><a href="https://ocw.mit.edu/courses/entrepreneurship">Entrepreneurship</a></li>
                <li><a href="https://ocw.mit.edu/courses/environment-courses">Environment</a></li>
              	<li><a href="https://ocw.mit.edu/courses/intro-programming">Introductory Programming</a></li>
                <li><a href="https://ocw.mit.edu/courses/life-sciences">Life Sciences</a></li>
                <li><a href="https://ocw.mit.edu/courses/transportation-courses">Transportation</a></li>
              </ul></nav>
</div>
        </div>

      </div>
    </li>
    <li id="drop_2">
        <a href="" aria-hidden="true">About</a>
        <div class="dropdown_1column-a">
            <nav class="col_1" aria-label="About"><ul role="presentation">
<li><a href="https://ocw.mit.edu/about/">About MIT OpenCourseWare</a></li>
                    <li><a href="https://ocw.mit.edu/about/site-statistics/">Site Statistics</a></li>
                    <li><a href="https://ocw.mit.edu/about/ocw-stories/">OCW Stories</a></li>
                    <li><a href="https://ocw.mit.edu/about/newsletter/">News</a></li>
                </ul></nav>
</div>
    </li>
    <li id="drop_3">
        <a href="" aria-hidden="true">Donate</a>
        <div class="dropdown_1column-a">
          <nav class="col_1" aria-label="Donate"><ul role="presentation">
<li><a href="https://ocw.mit.edu/donate/">Make a Donation</a></li>
              <li><a href="https://ocw.mit.edu/donate/why-donate/">Why Donate?</a></li>
              <li><a href="https://ocw.mit.edu/donate/our-supporters/">Our Supporters</a></li>
              <li><a href="https://ocw.mit.edu/donate/other-ways-to-contribute/">Other Ways to Contribute</a></li>
              <li><a href="https://ocw.mit.edu/donate/shop-ocw">Shop OCW</a></li>
              <li><a href="https://ocw.mit.edu/support/">Become a Corporate Sponsor</a></li>
            </ul></nav>
</div>
    </li>
    <li id="drop_4">
      <a href="" aria-hidden="true">Featured Sites</a>
      <div class="dropdown_1column-a">
        <nav class="col_1" aria-labelledby="mm-featured-sites"><span id="mm-featured-sites" class="nav" aria-hidden="true">OCW Initiatives</span>
          <ul role="presentation">
<li><a href="https://ocw.mit.edu/high-school/">Highlights for High School</a></li>
            <li><a href="https://ocw.mit.edu/educator/?utm_campaign=Educator&amp;utm_source=megamenu&amp;utm_medium=featured-sites">OCW Educator</a></li>
            <li><a href="https://ocw.mit.edu/courses/crosslinks/">MIT Crosslinks and OCW</a></li>
            <li><a href="https://ocw.mit.edu/courses/mitx-related-courseware/">MITx and Related OCW Courses</a></li>
					</ul></nav><nav class="col_1" aria-labelledby="mm-featured-external-links"><span id="mm-featured-external-links" class="nav" aria-hidden="true">Beyond OCW</span>
					<ul>
<li><a href="http://k12videos.mit.edu" aria-label="External Link: MIT Plus K12 Videos">MIT+K12 Videos</a></li>
            <li><a href="https://teachingexcellence.mit.edu/" aria-label="External Link: Teaching Excellence at MIT">Teaching Excellence at MIT</a></li>
						<li><a href="https://outreach.mit.edu" aria-label="External Link: Outreach at MIT">Outreach @ MIT</a></li>
						<li><a href="http://www.oeconsortium.org/" aria-label="External Link: Open Education Consortium">Open Education Consortium</a></li>
          </ul></nav>
</div>
    </li>
  </ul></nav><div id="search" role="search" class="grid_4 omega">
  
    <form aria-label="Advanced Search" method="get" action="../../../common/search/AdvancedSearch.htm">
		  <table class="search"><tbody><tr>
<td class="black"><input type="text" onblur="fillSearchBox()" onfocus="clearSearchBox()" maxlength="255" value="Search" name="q" class="greytext searchField" id="terms"></td>
            <td class="black"><input type="image" src="../../../common/images/button_search.png" name="btnG" class="sub_button"></td>
            <td class="text2"><a href="../../../common/search/AdvancedSearch.htm">Advanced<br>Search</a></td>
          </tr></tbody></table>
</form>
</div>
<div class="clear"></div>
<!--googleon: index-->
<!-- *end header* -->

				
				
			</div>
<!-- top grid end -->
		</header><!-- top end --><div id="center">
         <div id="grid">
		         <div id="left-section">
                 <nav aria-label="Breadcrumb" id="breadcrumb"><p>

    <a href="https://ocw.mit.edu/">Home</a>
    
        »
        
    
    
        
            <a href="https://ocw.mit.edu/courses">Courses</a>
            
                »
                
            
            
         
    
    
        
            <a href="https://ocw.mit.edu/courses/civil-and-environmental-engineering">Civil and Environmental Engineering</a>
            
                »
                
            
            
         
    
    
        
            <a href="../../../contents/index.htm">Foundations of Software Engineering</a>
            
                »
                
            
            
         
    
    
        
            <a href="../../../contents/lecture-notes/index.htm">Lecture Notes</a>
            
                »
                
            
            
         
    
    
        
            
            
            Graphical Programs
         
    
</p>

                 </nav><div class="clear"></div>
                   <div id="section_title">
           			     <h1 class="title" itemprop="name" property="dct:title">
        <span class="" id="parent-fieldname-title">
            Graphical Programs
        </span>
    </h1>
             	     </div>
             	     <div class="clear"></div>
             	     <div id="course_wrapper_section">
           	     	 <nav id="course_nav" aria-label="Course"><script language="javascript" type="text/javascript">
function toggleMenu(objID) {
  if (!document.getElementById) return;
  var ob = document.getElementById(objID);
  ob.className = (ob.className == 'selected')?'': 'selected';
}
function toggleClass(id)
{
  var divtoggleClass= document.getElementById(id);
  divtoggleClass.className = (divtoggleClass.className == 'mO')?'mC': 'mO';
  return false;
}
function changeAlt(id)
{
  id.alt = (id.alt == 'Expand Menu')?'Collapse Menu' : 'Expand Menu';
  id.title = (id.title == 'Expand Menu')?'Collapse Menu' : 'Expand Menu';
}
</script><!--Left Nav Starts --><ul>
<li class="">
			   			<a href="../../../contents/index.htm">
		                  Course Home  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/syllabus/index.htm">
		                  Syllabus  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/calendar/index.htm">
		                  Calendar  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="selected">
			   			<a href="../../../contents/lecture-notes/index.htm">
		                  Lecture Notes  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/recitations/index.htm">
		                  Recitations  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/assignments/index.htm">
		                  Assignments  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/exams/index.htm">
		                  Exams  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    <li class="">
			   			<a href="../../../contents/projects/index.htm">
		                  Projects  			                
	                    </a>
		        </li>
		    
         	
	
	
	    	
	    	    
		    
         	
	<!--second tal block close-->  
	
</ul>
<!--Left Nav Ends --></nav><main id="course_inner_section" aria-labelledby="section_title"><h2 class="subhead">Topics </h2> <ol>
<li><a href="#1">Introduction</a></li>     <li><a href="#2">The Java® Event Model</a></li>     <li><a href="#3">Laying Out User Interface Components</a></li>     <li><a href="#4">Swing Component Overview</a></li> </ol>
<h2 class="subhead">
<a id="1" name="1"></a>1. Introduction</h2> <p>Graphical programs require a very different programming model to the non-graphical programs we have encountered in the past. A non-graphical program typically runs straight through from beginning to end. By contrast, a graphical program should be capable of running indefinitely, accepting input through the graphical user interface (GUI) and responding accordingly. This kind of programming is known as <em>event-driven programming</em>, because the program's sequence of operation is determined by <em>events</em> generated by the GUI components. The program responds to events by invoking functions known as <em>event handlers</em> . For example, pushing the <em>Print</em> button may generate a "button-pushed" event, which results in a call to an event handler named <em>print()</em>.</p> <p>In general, a graphical program consists of the following key elements:</p> <ul>
<li>Code to create GUI components, such as buttons, text areas, scrollable views, etc.</li>     <li>Code that lays out the components within a container. Examples of containers are frames, which are stand-alone windows, and applets, which are windows that are embedded within a web page.</li>     <li>Event handling code that specifies what should happen when the user interacts with the GUI components.</li>     <li>An <em>event loop</em>, whose job is to wait for events to occur and to call appropriate event handlers.</li> </ul>
<p>The following pseudo-code illustrates how the event loop might work</p> <p><em>    while (true) {                                        // The event loop.</em><br><em>        // Get the next event from the event queue.</em><br><em>        Event e = get_next_event();</em></p> <p><em>        // Process the events by calling appropriate event handlers.</em><br><em>        if (e.eventType == QUIT) {</em><br><em>            exit();                                           // Terminate the program.</em><br><em>        }</em><br><em>        else if (e.eventType == BUTTON_PUSHED) {</em><br><em>            if (e.eventSource == PRINT_BUTTON)</em><br><em>                print(e);                                   // Print out the current page.</em><br><em>            else {</em><br><em>                ...</em><br><em>            }</em><br><em>        }</em><br><em>        else {</em><br><em>            ...</em><br><em>        }</em><br><em>    }</em></p> <p>In C++, the programmer must often explicitly write an event loop similar to the one shown above. This can involve a lot of work, so Java® attempts to shield the programmer from the actual event loop, while still providing a flexible way to specify how events are processed.</p> <h2 class="subhead">
<a id="2" name="2"></a>2. The Java® Event Model (JDK 1.1 and above)</h2> <p><em>(Ref. <a href="http://java.sun.com/docs/books/tutorial/uiswing/learn/index.html">Java® Tutorial</a>)</em></p> <p>The Java® event model is based on the notion of <em>event sources</em> and <em>event listeners</em>.</p> <p>An <em>event source</em> is most frequently a user interface component (such as a button, menu item or scrollable view), which can notify registered listeners when events of interest occur. Note that an event source may generate both high level events e.g. button click, as well as low level events, e.g. mouse press.</p> <p>An <em>event listener</em> is an object that can register an interest in receiving certain types of events from an event source. The event source sends out event notifications by calling an appropriate event handling method in the event listener object.</p> <p>The event listener registration and notification process takes place according to <em>event type</em> . An object wishing to listen to events of a particular type must implement the corresponding <em>event listener interface</em> . The interface simply specifies a standard set of event handling functions that the listener object must provide.</p> <p>Here is a list of events, and their corresponding event types and event listener interfaces.</p> <div class="maintabletemplate"><table class="tablewidth50" summary="See table caption for summary.">
<caption class="invisible">Event</caption>     <thead><tr>
<th scope="col">EVENT</th>             <th scope="col">EVENT TYPE</th>             <th scope="col">EVENT LISTENER INTERFACE</th>         </tr></thead>
<tbody>
<tr class="row">
<td>Button click, menu selection, text field entry</td>             <td>ActionEvent</td>             <td>ActionListener</td>         </tr>
<tr class="alt-row">
<td>Resizing, moving, showing or hiding a component</td>             <td>ComponentEvent</td>             <td>ComponentListener</td>         </tr>
<tr class="row">
<td>Mouse press, mouse release, mouse click, mouse enter, mouse exit</td>             <td>MouseEvent</td>             <td>MouseListener</td>         </tr>
<tr class="alt-row">
<td>Mouse move, mouse drag</td>             <td>MouseEvent</td>             <td>MouseMotionListener</td>         </tr>
<tr class="row">
<td>Key press, key release</td>             <td>KeyEvent</td>             <td>KeyListener</td>         </tr>
<tr class="alt-row">
<td>Gain keyboard focus, lose keyboard focus</td>             <td>FocusEvent</td>             <td>FocusListener</td>         </tr>
<tr class="row">
<td>Window closing, window iconified, window deiconified</td>             <td>WindowEvent</td>             <td>WindowListener</td>         </tr>
<tr class="alt-row">
<td>Scrolling</td>             <td>AdjustmentEvent</td>             <td>AdjustmentListener</td>         </tr>
<tr class="row">
<td>Item selection e.g. checkbox, list item</td>             <td>ItemEvent</td>             <td>ItemListener</td>         </tr>
<tr class="alt-row">
<td>Return key pressed</td>             <td>TextEvent</td>             <td>TextListener</td>         </tr>
<tr class="row">
<td>Adding/removing a component to/from a container</td>             <td>ContainerEvent</td>             <td>ContainerListener</td>         </tr>
</tbody>
</table></div> <p> </p> <p>The general approach to implementing an event listener is the same in every case.</p> <ul>
<li>Write a class that implements the appropriate <em>XXXListener</em> interface.</li>     <li>Create an object of type <em>XXXListener</em>.</li>     <li>Register the event listener object with an event source by calling the event source's <em>addXXXListener</em> method.</li> </ul>
<p>The following example shows how to create a frame. When the frame is closed, we want to make sure that the program terminates, since this does not happen automatically. We can use a WindowListener to do this.</p> <p><em>import javax.swing.*;</em><br><em>import java.awt.event.*;</em></p> <p><em> public class Main {</em><br><em>    public static void main(String[] args) {</em><br><em>        // Create a window.  Then set its size and make it visible.</em><br><em>        JFrame frame = new JFrame("Main window");</em><br><em>        frame.setSize(400,400);</em><br><em>        frame.setVisible(true);</em></p> <p><em>        // Make the program terminate when the frame is closed.  We do this by registering a window listener</em><br><em>        // to receive WindowEvents from the frame.  The window listener will provide an event handler called</em><br><em>        // windowClosing, which will be called when the frame is closed.</em><br><em>        WindowListener listener = new MyWindowListener();                 // A class that we write.</em><br><em>        frame.addWindowListener(listener);</em><br><em>    }</em><br><em>}</em></p> <p><em>// Here is our window listener.  We are only interested in windowClosing, however, we must provide</em><br><em>// implementations for all of the methods in the WindowListener interface.</em><br><em>class MyWindowListener implements WindowListener {</em><br><em>    public void windowClosing(WindowEvent e) {</em><br><em>        System.out.println("Terminating the program now.");</em><br><em>        System.exit(0);</em><br><em>    }</em><br><em>    public void windowClosed(WindowEvent e) {}</em><br><em>    public void windowOpened(WindowEvent e) {}</em><br><em>    public void windowActivated(WindowEvent e) {}</em><br><em>    public void windowDeactivated(WindowEvent e) {}</em><br><em>    public void windowIconified(WindowEvent e) {}</em><br><em>    public void windowDeiconified(WindowEvent e) {}</em><br><em>}</em><br>  </p> <p>Unfortunately, this example involves quite a lot of code. There are a couple of ways to simplify the program</p> <h2 class="subhead">Anonymous Classes</h2> <p>An anonymous class is a class that has no name. It is declared an instantiated within a single expression. Here is how we could use an anonymous class to simplify the closable frame example:</p> <p><em>import javax.swing.*;</em><br><em>import java.awt.event.*;</em></p> <p><em> public class Main {</em><br><em>    public static void main(String[] args) {</em><br><em>        // Create a window.  Then set its size and make it visible.</em><br><em>        JFrame frame = new JFrame("Main window");</em><br><em>        frame.setSize(400,400);</em><br><em>        frame.setVisible(true);</em></p> <p><em>        // Make the frame closable.  Here we have used an anonymous class that implements the</em><br><em>        // WindowListener interface.</em><br><em>        frame.addWindowListener(new WindowListener() {</em><br><em>            public void windowClosing(WindowEvent e) {</em><br><em>                System.out.println("Terminating the program now.");</em><br><em>                System.exit(0);</em><br><em>            }</em><br><em>            public void windowClosed(WindowEvent e) {}</em><br><em>            public void windowOpened(WindowEvent e) {}</em><br><em>            public void windowActivated(WindowEvent e) {}</em><br><em>            public void windowDeactivated(WindowEvent e) {}</em><br><em>            public void windowIconified(WindowEvent e) {}</em><br><em>            public void windowDeiconified(WindowEvent e) {}</em><br><em>        });</em><br><em>    }</em><br><em>}</em></p> <h2 class="subhead">Event Adapters</h2> <p>An event adapter is just a class that implements an event listener interface, with empty definitions for all of the functions. The idea is that if we subclass the event adapter, we will only have to override the functions that we are interested in. The closable frame example can thus be shortened to:</p> <p><em>import javax.swing.*;</em><br><em>import java.awt.event.*;</em></p> <p><em> public class Main {</em><br><em>    public static void main(String[] args) {</em><br><em>        // Create a window.  Then set its size and make it visible.</em><br><em>        JFrame frame = new JFrame("Main window");</em><br><em>        frame.setSize(400,400);</em><br><em>        frame.setVisible(true);</em></p> <p><em>        // Make the frame closable.  Here we have used an anonymous class that extends WindowAdapter.</em><br><em>        frame.addWindowListener(new WindowAdapter() {</em><br><em>            public void windowClosing(WindowEvent e) {    // This overrides the empty base class method.</em><br><em>                System.out.println("Terminating the program now.");</em><br><em>                System.exit(0);</em><br><em>            }</em><br><em>        });</em><br><em>    }</em><br><em>}</em></p> <h2 class="subhead">
<a id="3" name="3"></a>3. Laying Out User Interface Components</h2> <h2 class="subhead">Containers</h2> <p><em>(Ref. <a href="http://java.sun.com/docs/books/tutorial/uiswing/learn/index.html">Java® Tutorial</a>)</em></p> <p>A <em>Container</em> is a GUI component that can hold other GUI components. Three commonly used container classes are</p> <p><em>JFrame</em> - This is a stand-alone window with a title bar, menubar and a border. It is typically used as the top-level container for a graphical Java® application.</p> <p><em>JApplet</em> - This is a container that can be embedded within an HTML page. It is typically used as the top-level container for a Java® applet.</p> <p><em>JPanel</em> - This is a container that must reside within another container. It provides a way to group several components (e.g. buttons) as a single unit, when they are laid out on the screen.  <em>JPanel</em> can also be used as an area for drawing operations. (When used in this way, it can provide automatic double buffering, which is a technique for producing flicker-free animation.)</p> <p>A component object, <em>myComponent</em>, can be added to a container object, <em>myContainer</em>, using a statement of the form</p> <p>    <em>myContainer.getContentPane().add(myComponent);</em></p> <p>The following example illustrates how to add a <em>JButton</em> instance to an instance of <em>JFrame</em>.</p> <p><em>import javax.swing.*;</em><br><em>import java.awt.event.*;</em></p> <p><em> public class Main {</em><br><em>    public static void main(String[] args) {</em><br><em>        // Create a window.</em><br><em>        JFrame frame = new JFrame("Main window");</em><br><em>        frame.setSize(400,400);</em></p> <p><em>        // Create a button and add it to the frame.</em><br><em>        JButton button = new JButton("Click me");</em><br><em>        frame.getContentPane().add(button);</em></p> <p><em>        // Add an event handler for button clicks.</em><br><em>        button.addActionListener(new ActionListener() {</em><br><em>            public void actionPerformed(ActionEvent e) {      // Only one method to implement.</em><br><em>                System.out.println(e.getActionCommand());     // Prints out "Click me".</em><br><em>            }</em><br><em>        });</em></p> <p><em>        // Make the frame closable.</em><br><em>        frame.addWindowListener(new WindowAdapter() {</em><br><em>            public void windowClosing(WindowEvent e) {</em><br><em>                System.exit(0);</em><br><em>            }</em><br><em>        });</em></p> <p><em>        // Make the frame visible after adding the button.</em><br><em>        frame.setVisible(true);</em><br><em>    }</em><br><em>}</em></p> <h2 class="subhead">Layout Managers</h2> <p><em>(Ref. <a href="http://java.sun.com/docs/books/tutorial/uiswing/layout/using.html">Java® Tutorial</a>)</em></p> <p>Our previous example has only one interesting GUI component: a <em>JButton</em> . What if we wanted to add a second <em>JButton</em> and perhaps a <em>JTextArea</em>, so that we can display the message through the GUI? We can control the layout of these components within the container by using a <em>layout manager</em>. Java® comes with six layout managers (five in <em>java.awt</em> and one in <em>javax.swing</em>)</p> <p><em>FlowLayout</em> - Lays out components in a line from left to right, moving to the next line when out of room. This layout style resembles the flow of text in a document.</p> <p><em>BorderLayout</em> - Lays out components in one of five positions - at the North, South, East or West borders, or else in the Center.</p> <p><em>GridLayout</em> - Lays out components in rows and columns of equal sized cells, like a spreadsheet.</p> <p><em>GridBagLayout</em> - Lays out components on a grid without requiring them to be of equal size. This is the most flexible and also the most complex of all the layout managers.</p> <p><em>CardLayout</em> - Lays out components like index cards, one behind another. (No longer useful, now that Swing provides a <em>JTabbedPane</em> component.)</p> <p><em>BoxLayout</em> - Lays out components with either vertical alignment or horizontal alignment. (A new layout manager in Swing.)</p> <p>It is also possible to set a <em>null</em> layout manager and instead position components by specifying their absolute coordinates using the method</p> <p>    <em>public void setLocation(int x, int y)</em></p> <p>Suppose we wish to position our two <em>JButtons</em> side by side, with the <em>JTextArea</em> positioned below them. We start by embedding the <em>JButtons</em> within a <em>JPanel</em>, using <em>FlowLayout</em> as the layout manager for the <em>JPanel</em>. The <em>JTextArea</em> is best placed within a <em>JScrollPane</em> , since this will permit scrolling when the amount of text exceeds the preferred size of the scroll pane. We can now attach the <em>JPanel</em> and the <em>JScrollPane</em> to the North and South borders of the <em>JFrame</em>, by using <em>BorderLayout</em> as the layout manager for the <em>JFrame</em>. These containment relationships are illustrated below:</p> <table width="55%" border="1"><tbody><tr>
<td>
<p><em>JFrame</em></p>             <table width="100%" cols="1" border="1"><tbody><tr>
<td><table width="100%" cols="1"><tbody>
<tr>
<td><p><em>JPanel</em> (attached to the North border of <em>JFrame</em>)</p></td>                                 </tr>
<tr>
<td align="center">
<p><br>                                      </p>                                     <table width="50%" cols="2" border="1"><tbody><tr>
<td align="center"><p><em>JButton</em></p></td>                                                 <td align="center"><p><em>JButton</em></p></td>                                             </tr></tbody></table>
<p>(laid out using <em>FlowLayout</em>)<br>                                      </p>
</td>                                 </tr>
</tbody></table></td>                     </tr></tbody></table>
<table width="100%" cols="1" border="1"><tbody><tr>
<td>
<p><em>JScrollPane</em> (attached to the South border of <em>JFrame</em>)</p>                         <table width="100%" cols="1" border="1"><tbody><tr>
<td valign="center" align="center"><p><br><em>JTextArea</em><br>                                      </p></td>                                 </tr></tbody></table>
</td>                     </tr></tbody></table>
</td>         </tr></tbody></table>
<p>Here is the implementation:</p> <p><em>import javax.swing.*;</em><br><em>import java.awt.*;</em><br><em>import java.awt.event.*;</em></p> <p><em> public class Main {</em><br><em>    public static void main(String[] args) {</em><br><em>        // Create a window and set its layout manager to be BorderLayout.</em><br><em>        // (This happens to be the default layout manager for a JFrame.)</em><br><em>        JFrame frame = new JFrame("Main window");</em><br><em>        frame.setSize(400,400);</em><br><em>        Container cf = frame.getContentPane();</em><br><em>        cf.setLayout(new BorderLayout());</em></p> <p><em>        // Create a panel and set its layout manager to be FlowLayout.</em><br><em>        // (This happens to be the default layout manager for a JPanel.)</em><br><em>        JPanel panel = new JPanel();</em><br><em>        panel.setLayout(new FlowLayout());     // No content pane for JPanel.</em></p> <p><em>        // Create two buttons and add them to the panel.</em><br><em>        JButton button1 = new JButton("Left");</em><br><em>        JButton button2 = new JButton("Right");</em><br><em>        panel.add(button1);</em><br><em>        panel.add(button2);</em></p> <p><em>        // Create a text area for displaying messages.  We embed the text</em><br><em>        // area in a scroll pane so that it doesn't grow unboundedly.</em><br><em>        JTextArea textArea = new JTextArea();</em><br><em>        JScrollPane scrollPane = new JScrollPane(textArea);</em><br><em>        scrollPane.setPreferredSize(new Dimension(400, 100));</em><br><em>        textArea.setEditable(false);</em></p> <p><em>        // Position the panel and the text area within the frame.</em><br><em>        cf.add(panel, "North");</em><br><em>        cf.add(scrollPane, "South");</em></p> <p><em>        // Add event handlers for button clicks.</em><br><em>        class MyListener implements ActionListener {     // A local class.</em><br><em>            private JTextArea mTextArea;</em><br><em>            public void setTextArea(JTextArea t) {</em><br><em>                mTextArea = t;</em><br><em>            }</em><br><em>            public void actionPerformed(ActionEvent e) {</em><br><em>                mTextArea.append(e.getActionCommand()+"\n");</em><br><em>            }</em><br><em>        }</em><br><em>        MyListener listener = new MyListener();</em><br><em>        listener.setTextArea(textArea);      // Cannot do this with an anonymous class.</em><br><em>        button1.addActionListener(listener);</em><br><em>        button2.addActionListener(listener);</em></p> <p><em>        // Make the frame closable.</em><br><em>        frame.addWindowListener(new WindowAdapter() {</em><br><em>            public void windowClosing(WindowEvent e) {</em><br><em>                System.exit(0);</em><br><em>            }</em><br><em>        });</em></p> <p><em>        // Make the frame visible after adding the components to it.</em><br><em>        frame.setVisible(true);</em><br><em>    }</em><br><em>}</em></p> <h2 class="subhead">
<a id="4" name="4"></a>4. Swing Component Overview</h2> <p>The components that we have seen so far are <em>JFrame</em>, <em>JPanel</em>, <em>JButton</em>, <em>JTextArea</em> and <em>JScrollPane</em> . The links below provide a good overview of the Swing components and how to use them.</p> <ul>
<li><a href="http://www.javadesktop.org/rollups/components/">Visual index to Swing components</a></li>     <li><a href="http://java.sun.com/docs/books/tutorial/uiswing/examples/components/index.html">Examples that use Swing</a></li> </ul></main><!--Course_inner_section tag close --><div class="clear"></div>
 				 </div>
<!--Course_wrapper tag close -->             
 			 </div>
<!--left tag close -->
 			
         </div>
<!--grid tag close -->
      </div>
		
		<footer id="bottom"><div id="grid">
				
<div id="portletwrapper-6f63772e626f74746f6d706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d666f6f746572" class="portletWrapper kssattr-portlethash-6f63772e626f74746f6d706f72746c65746d616e616765720a636f6e746578740a2f506c6f6e650a736974652d666f6f746572">
<div class="portletStaticText portlet-static-site-footer">
<!--googleoff: index-->
<div id="footer">
<nav aria-label="Footer"><nav id="foot-c1" class="grid_2 alpha" aria-labelledby="f-find-courses"><span class="footer" id="f-find-courses" aria-hidden="true">Find Courses</span>
<ul class="foot-bullet" role="presentation">
<li><a href="https://ocw.mit.edu/courses/find-by-topic/">Find by Topic</a></li>
    <li><a href="https://ocw.mit.edu/courses/find-by-number/">Find by Course Number</a></li>
    <li><a href="https://ocw.mit.edu/courses/find-by-department/">Find by Department</a></li>
    <li><a href="https://ocw.mit.edu/educator/?view=instructional&amp;utm_campaign=Educator&amp;utm_source=footer&amp;utm_medium=find-courses&amp;utm_content=approaches">Instructional Approach</a></li>
    <li><a href="https://ocw.mit.edu/educator/?view=teaching&amp;utm_campaign=Educator&amp;utm_source=footer&amp;utm_medium=find-courses&amp;utm_content=materials">Teaching Materials</a></li>
    <li><a href="https://ocw.mit.edu/courses/audio-video-courses/">Audio/Video Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/subtitled/">Courses with Subtitles</a></li>
    <li><a href="https://ocw.mit.edu/courses/online-textbooks/">Online Textbooks</a></li>
    <li><a href="https://ocw.mit.edu/courses/new-courses/">New Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/most-visited-courses/">Most Visited Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/ocw-scholar/">OCW Scholar Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/this-course-at-mit/">This Course at MIT</a></li>
    <li><a href="https://ocw.mit.edu/resources/">Supplemental Resources</a></li>
    <li><a href="https://ocw.mit.edu/courses/translated-courses/">Translated Courses</a></li>
    <li><a href="https://ocw.mit.edu/courses/?utm_source=ocw-footer&amp;utm_medium=link&amp;utm_campaign=mclstudy">View All Courses</a></li>
</ul></nav><div id="foot-c2" class="grid_2">
<nav aria-labelledby="f-about"><span id="f-about" class="footer" aria-hidden="true">About</span>
<ul class="foot-bullet" role="presentation">
<li><a href="https://ocw.mit.edu/about/">About OpenCourseWare</a></li>
    <li><a href="https://ocw.mit.edu/about/site-statistics/">Site Statistics</a></li>
    <li><a href="https://ocw.mit.edu/about/ocw-stories/">OCW Stories</a></li>
    <li><a href="https://ocw.mit.edu/about/newsletter/">News</a></li>
    <li><a href="https://ocw.mit.edu/about/media-coverage/press-releases/">Press Releases</a></li>
</ul></nav><!--about--><nav aria-labelledby="f-tools"><span id="f-tools" class="footer" aria-hidden="true">Tools</span>
<ul class="foot-bullet" role="presentation">
<li><a href="https://ocw.mit.edu/help/">Help &amp; FAQs</a></li>
    <li><a href="../../../common/jsp/feedback.htm">Contact Us</a></li>
    <li><a href="../../../common/search/AdvancedSearch.htm">Advanced Search</a></li>
    <li><a href="https://ocw.mit.edu/help/site-map/">Site Map</a></li>
    <li><a href="../../../common/terms/index.htm">Privacy &amp; Terms of Use</a></li>
    <li><a href="https://ocw.mit.edu/help/rss/">RSS Feeds</a></li>
</ul></nav><!--tools-->
</div>
<nav class="grid_2" id="foot-c3" aria-labelledby="f-donate"><span id="f-donate" class="footer" aria-hidden="true">Donate</span>
<ul class="foot-bullet" role="presentation">
<li><a href="https://ocw.mit.edu/donate">Make a Donation</a></li>
    <li><a href="https://ocw.mit.edu/donate/why-donate/">Why Donate?</a></li>
    <li><a href="https://ocw.mit.edu/donate/our-supporters/">Our Supporters</a></li>
    <li><a href="https://ocw.mit.edu/donate/other-ways-to-contribute/">Other Ways to Contribute</a></li>
    <li><a href="https://ocw.mit.edu/donate/shop-ocw/">Shop OCW</a></li>
    <li><a href="https://ocw.mit.edu/support/">Become a Corporate Sponsor</a></li>
</ul></nav><div class="grid_2" id="foot-c4"><nav aria-labelledby="f-featured-sites"><span id="f-featured-sites" class="footer" aria-hidden="true">Featured Sites</span>
<ul class="foot-bullet" role="presentation">
<li><a href="https://ocw.mit.edu/high-school/">Highlights for High School</a></li>
    <li><a href="https://ocw.mit.edu/educator/?utm_campaign=Educator&amp;utm_source=footer&amp;utm_medium=featured-sites">OCW Educator</a></li>
    <li><a href="https://ocw.mit.edu/courses/crosslinks/">MIT Crosslinks and OCW</a></li>
    <li><a href="https://ocw.mit.edu/courses/mitx-related-courseware/">MITx and Related OCW Courses</a></li>
    <li><a href="http://k12videos.mit.edu" aria-label="External Link: MIT+K12 Videos">MIT+K12 Videos</a></li>
    <li><a href="https://teachingexcellence.mit.edu/" aria-label="External Link: Teaching Excellence at MIT">Teaching Excellence at MIT</a></li>
    <li><a href="https://outreach.mit.edu/" aria-label="External Link: Outreach at MIT">Outreach@MIT</a></li>
    <li><a href="http://www.oeconsortium.org/" aria-label="External Link: Open Education Consortium">Open Education Consortium</a></li>
</ul></nav></div>
</nav><!--Footer Nav>--><aside id="foot-c5" class="grid_4 omega" aria-labelledby="f-our-corporate-supporters" style="min-height: 289px;"><span id="f-our-corporate-supporters" class="footer" aria-hidden="true">Our Corporate Supporters</span>           <!-- HOME_CORP_LOGO_1 -->
<div class="sponsors_google_ads_even" id="div-gpt-ad-1388181177156-0"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-0'); });
            </script></div>
<!-- HOME_CORP_LOGO_2 -->
<div class="sponsors_google_ads_odd" id="div-gpt-ad-1388181177156-1"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-1'); });
            </script></div>
<!-- HOME_CORP_LOGO_3 -->
<div class="sponsors_google_ads_even" id="div-gpt-ad-1388181177156-2"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-2'); });
            </script></div>
<!-- HOME_CORP_LOGO_4 -->
<div class="sponsors_google_ads_odd" id="div-gpt-ad-1388181177156-3"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-3'); });
            </script></div>
<!-- HOME_CORP_LOGO_5 -->
<div class="sponsors_google_ads_even" id="div-gpt-ad-1388181177156-4"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-4'); });
              </script></div>
<!-- HOME_CORP_LOGO_6 -->
<div class="sponsors_google_ads_odd" id="div-gpt-ad-1388181177156-5"><script type="text/javascript">
              googletag.cmd.push(function() { googletag.display('div-gpt-ad-1388181177156-5'); });
              </script></div>
</aside><aside class="grid_12 alpha omega" aria-label="OCW 15th Anniversary" style="border-top: thin solid #d5c9ba; padding-top: 24px; margin-bottom: 10px; text-align: center;"><p style="font-family: TitilliumText22LRegular,Verdana; text-align: center; font-size: 1.1em;">Support for <span style="letter-spacing: 0.5px; font-weight: bold;"><span style="text-transform: uppercase;">MIT OpenCourseWare's</span> 15th anniversary</span> is provided by <a href="http://www.sapientnitro.com/en-us.html#home"><img style="width: 145px; height: 35px; vertical-align: middle; margin-left: 7px;" alt="SapientNitro" src="../../../common/images/logo_sapient.png"></a></p>
</aside><aside class="grid_12 alpha omega" aria-labelledby="f-about-ocw" itemtype="http://schema.org/CollegeOrUniversity" itemscope="" itemprop="publisher" style="border-top: thin solid #d5c9ba; padding-top: 10px; margin-bottom: 10px;"><span id="f-about-ocw" class="footer" aria-hidden="true">             About <span itemprop="name">MIT OpenCourseWare</span></span>
<p itemprop="description" style="color: #999; font-size: 1em; line-height: 1.5em; margin-top: 10px;">OCW is a free and open publication of material from thousands of MIT courses, covering the entire MIT curriculum. <a href="https://ocw.mit.edu/about/">Learn more »</a></p>
<div id="foot-copy" class="grid_12 alpha omega" style="border-top: none;">
<a href="http://web.mit.edu">               <img style="width: 195; height: 44;" alt="Massachusetts Institute of Technology" src="../../../common/images/logo_mit.png"></a>             <a href="http://odl.mit.edu">               <img style="width: 289; height: 54; vertical-align: top;" alt="MIT Office of Digital Learning" src="https://ocw.mit.edu/images/logo_odl.png"></a>             <a href="http://www.oeconsortium.org/">               <img style="width: 219px; height: 59px; vertical-align: top;" alt="Open Education Consortium" src="https://ocw.mit.edu/images/logo_oec.png"></a>             <a itemprop="useRightsUrl" rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/">               <img style="width: 126px; height: 44px; margin-right: 0; margin-left: 13px;" alt="Creative Commons" src="../../../common/images/cc_by-nc-sa.png"></a>
</div>
<div id="f-legal" class="grid_12 alpha omega" style="border-top: none;">
<p class="copyright">© 2001–2015<br>
Massachusetts Institute of Technology</p>
<p style="font-size: 0.9em; margin-bottom: 15px;">Your use of the MIT OpenCourseWare site and materials is subject to our <a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons License</a> and other <a rel="cc:morePermissions" href="../../../common/terms/index.htm">terms of use</a>.</p>
</div>
</aside>
</div>
<!--footer-->   <!--googleon: index-->
</div>

</div>





                
			</div> <!-- bottom grid end -->
		</footer><!-- footer bottom end -->
</body>
</html>
